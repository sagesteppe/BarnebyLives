project_examples <-
read.csv('/media/sagesteppe/ExternalHD/Barneby_Lives-dev/herbarium_data/project.csv')
shipping_examples <- read.csv('/media/sagesteppe/ExternalHD/Barneby_Lives-dev/herbarium_data/shipping_examples.csv')
View(shipping_examples)
shipping_examples[shipping_examples==""] <- NA
View(shipping_examples)
collection_examples <- read.csv('/media/sagesteppe/ExternalHD/Barneby_Lives-dev/herbarium_data/shipping_examples.csv')
collection_examples[collection_examples==""] <- NA
usethis::use_data(collection_examples)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(dpi = 300)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
collection_examples
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(dpi = 300)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
writer(paste(data$Genus, data$Epithet), italics = TRUE)
library(BarnebyLives)
data <- collection_examples
data <- collection_examples[,9]
writer(paste(data$Genus, data$Epithet), italics = TRUE)
data$Genus, data$Epithet
paste(data$Genus, data$Epithet)
data <- collection_examples[9,]
writer(paste(data$Genus, data$Epithet), italics = TRUE)
writer(data$Infraspecies,  italics = TRUE)
writer_fide(data$Fide)
data$Fide
?writer_fire
?writer_fide
writer_fide(collection_examples[9,] )
writer_fide(collection_examples[9,] )
writer(collection_examples[9,] )
writer(collection_examples[9,] )
writer(collection_examples[9,'Binomial_authority'] )
writer(collection_examples[9, 'Infraspecies'], italics = TRUE )
writer_fide( collection_examples[31,'Fide'] )
#' do or don't write determination information
#'
#' This functions determines whether to write information on whom determined the specimen
#' when, and via which texts. It used as a final step when formatting labels.
#' @param x
#' @examples
#' writer_fide( collection_examples[31,'Fide'] )
#' @export
writer_fide <- function(x){if (is.na(x)){""} else {
paste0('Fide: *',
sub(' Flora ', ' Fl. ', x$Fide),
'*, by: ', x$Determined_by, ' on ', x$Determined_date)}
}
writer_fide( collection_examples[31,] )
collection_examples[31,]
collection_examples[31,]
writer_fide( collection_examples[31,] )
phacelia <- collection_examples[31,]
writer_fide( phacelia)
writer_fide <- function(x){if (is.na(x$Fide)){""} else {
paste0('Fide: *',
sub(' Flora ', ' Fl. ', x$Fide),
'*, by: ', x$Determined_by, ' on ', x$Determined_date)}
}
writer_fide(phacelia)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(dpi = 300)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
writer_fide(data$Fide)
writer_fide(data)
#' write values and collapse NAs
#'
#' This function will determine whether to print or hide a variable onto labels
#' @param x the input character of length 1
#' @param italics italicize or not? Boolean, defualts to FALSE
#' @examples
#' writer(collection_examples[9,'Binomial_authority'] )
#' writer(collection_examples[9, 'Infraspecies'], italics = TRUE )
#' @export
writer <- function(x, italics){
if(missing(italics)){italics <- FALSE}
if (is.na(x)){""} else if(italics == FALSE){x} else (paste0('*', x, '*'))
}
#'
#' This function uses the BarnebyLives custom template to write labels ala
#' a mail merge. Each label will be written as a separate file with the dimensions
#' of 4x4 inches.
#' @param x a path to a csv of labels which have been cleaned with BL, and which the analyst
#' has evaluated for conflicts.
#' @param outdir an output directory to hold the files.
#' @example
#' label_writer(collection_examples, BL_label_example)
#' @export
label_writer <- function(x, outdir) {
if(missing(outdir)){outdir <- file.path(getwd(), 'Labels') }
if (!dir.exists(outdir)){ dir.create(outdir) }
label_info <- read.csv(file = x) |>
dplyr::mutate(UNIQUEID = paste0(x$Primary_Collector, data$Collection_number))
for (i in 1:nrow(label_info)){
rmarkdown::render(
input = "Labels-skeleton.Rmd",
output_format = "pdf_document",
output_file = paste0(i$UNIQUEID, ".pdf"),
output_dir = outdir)
}
}
label_writer(collection_info, outdir)
library(BarnebyLives)
label_writer(collection_info)
collection_info
label_writer(collection_examples)
#'
#' This function uses the BarnebyLives custom template to write labels ala
#' a mail merge. Each label will be written as a separate file with the dimensions
#' of 4x4 inches.
#' @param x a path to a csv of labels which have been cleaned with BL, and which the analyst
#' has evaluated for conflicts.
#' @param outdir an output directory to hold the files.
#' @example
#' label_writer(collection_examples, BL_label_example)
#' @export
label_writer <- function(x, outdir) {
if(missing(outdir)){outdir <- file.path(getwd(), 'Labels') }
if (!dir.exists(outdir)){ dir.create(outdir) }
#	label_info <- read.csv(file = x) |>
collection_examples |>
dplyr::mutate(UNIQUEID = paste0(x$Primary_Collector, data$Collection_number))
for (i in 1:nrow(label_info)){
rmarkdown::render(
input = "Labels-skeleton.Rmd",
output_format = "pdf_document",
output_file = paste0(i$UNIQUEID, ".pdf"),
output_dir = outdir)
}
}
label_writer(collection_examples)
#'
#' This function uses the BarnebyLives custom template to write labels ala
#' a mail merge. Each label will be written as a separate file with the dimensions
#' of 4x4 inches.
#' @param x a path to a csv of labels which have been cleaned with BL, and which the analyst
#' has evaluated for conflicts.
#' @param outdir an output directory to hold the files.
#' @example
#' label_writer(collection_examples, BL_label_example)
#' @export
label_writer <- function(x, outdir) {
if(missing(outdir)){outdir <- file.path(getwd(), 'Labels') }
if (!dir.exists(outdir)){ dir.create(outdir) }
#	label_info <- read.csv(file = x) |>
x |>
dplyr::mutate(UNIQUEID = paste0(x$Primary_Collector, data$Collection_number))
for (i in 1:nrow(label_info)){
rmarkdown::render(
input = "Labels-skeleton.Rmd",
output_format = "pdf_document",
output_file = paste0(i$UNIQUEID, ".pdf"),
output_dir = outdir)
}
}
label_writer(collection_examples)
#'
#' This function uses the BarnebyLives custom template to write labels ala
#' a mail merge. Each label will be written as a separate file with the dimensions
#' of 4x4 inches.
#' @param x a path to a csv of labels which have been cleaned with BL, and which the analyst
#' has evaluated for conflicts.
#' @param outdir an output directory to hold the files.
#' @example
#' label_writer(collection_examples, BL_label_example)
#' @export
label_writer <- function(x, outdir) {
if(missing(outdir)){outdir <- file.path(getwd(), 'Labels') }
if (!dir.exists(outdir)){ dir.create(outdir) }
#	label_info <- read.csv(file = x) |>
x |>
dplyr::mutate(UNIQUEID = paste0(x$Primary_Collector, x$Collection_number))
for (i in 1:nrow(label_info)){
rmarkdown::render(
input = "Labels-skeleton.Rmd",
output_format = "pdf_document",
output_file = paste0(i$UNIQUEID, ".pdf"),
output_dir = outdir)
}
}
label_writer(collection_examples)
#'
#' This function uses the BarnebyLives custom template to write labels ala
#' a mail merge. Each label will be written as a separate file with the dimensions
#' of 4x4 inches.
#' @param x a path to a csv of labels which have been cleaned with BL, and which the analyst
#' has evaluated for conflicts.
#' @param outdir an output directory to hold the files.
#' @example
#' label_writer(collection_examples, BL_label_example)
#' @export
label_writer <- function(x, outdir) {
if(missing(outdir)){outdir <- file.path(getwd(), 'Labels') }
if (!dir.exists(outdir)){ dir.create(outdir) }
#	label_info <- read.csv(file = x) |>
label_info <- x |>
dplyr::mutate(UNIQUEID = paste0(x$Primary_Collector, x$Collection_number))
for (i in 1:nrow(label_info)){
rmarkdown::render(
input = "Labels-skeleton.Rmd",
output_format = "pdf_document",
output_file = paste0(i$UNIQUEID, ".pdf"),
output_dir = outdir)
}
}
label_writer(collection_examples)
?render
knitr::opts_chunk$set(eval = FALSE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
devtools::install_github('sagesteppe/BarnebyLives')
#devtools::install_github('sagesteppe/BarnebyLives')
library(BarnebyLives)
library(tidyverse)
local <- file.path(path.expand('~'), 'Documents', 'assoRted', 'Barneby_Lives_dev', 'LabelStyles')
l.nevadense <- collection_examples |>
filter(Collection_number == 2823) |>
mutate(
Project_name = 'Custom Fonts',
Coordinate_uncertainty = '+/- 5m',
Notes = 'Permit No.: XXXXX from Agency ZYX, Date: XX.XX.2025. Collected under NSF XXXXX, "catchy project name". DNA extracted from silica gel dried leaf tissue (additional material in ZYX biorepository) accession No.: XXXXX. Sequences available on NCBI SRA as PRJXYZYXYXY.'
)
write.csv(l.nevadense, file.path(local, 'SoS-ExampleCollection.csv'), row.names = F)
l.nevadense <- collection_examples |>
filter(Collection_number == 2823) |>
mutate(
Project_name = 'Custom Fonts',
Coordinate_uncertainty = '+/- 5m',
Notes = 'Permit No.: XXXXX from Agency ZYX, Date: XX.XX.2025. Collected under NSF XXXXX, "catchy project name". DNA extracted from silica gel dried leaf tissue (additional material in ZYX biorepository) accession No.: XXXXX. Sequences available on NCBI SRA as PRJXYZYXYXY.'
)
p2lib <- file.path(
system.file(package = 'BarnebyLives'),
'rmarkdown', 'templates', 'labels', 'skeleton'
)
# here we copy over one of the skeletons which we are going to modify in this example
file.copy(
from = file.path(p2lib, 'skeleton-research.Rmd'),
to = file.path(local, 'skeleton-research.Rmd'),
overwrite = FALSE
)
local <- file.path(path.expand('~'), 'Documents', 'assoRted', 'Barneby_Lives_dev', 'LabelStyles')
purrr::walk(
.x = l.nevadense$Collection_number,
.f = function(x) {
rmarkdown::render(
input = file.path(local, 'skeleton-research.Rmd'),
output_file = file.path(local, as.character(glue::glue("research{x}.pdf"))),
params = list(Collection_number = {.x})
)
}
)
purrr::walk(
.x = l.nevadense$Collection_number,
.f = function(x) {
rmarkdown::render(
input = file.path(local, 'skeleton-research.Rmd'),
output_file = file.path(local, as.character(glue::glue("research{x}.pdf"))),
params = list(Collection_number = .x)
)
}
)
purrr::walk(
.x = l.nevadense$Collection_number,
~ rmarkdown::render(
input = file.path(local, 'skeleton-research.Rmd'),
output_file = file.path(local, paste0('Spaced-SOS-', glue::glue("{.x}.pdf"))),
params = list(Collection_number = {.x})
)
)
purrr::walk(
.x = l.nevadense$Collection_number,
~ rmarkdown::render(
input = file.path(local, 'skeleton-research.Rmd'),
output_file = file.path(local, paste0('Spaced-SOS-', glue::glue("{.x}.pdf"))),
params = list(Collection_number = {.x})
)
)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(dpi = 300)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
local <- file.path(path.expand('~'), 'Documents', 'assoRted', 'Barneby_Lives_dev', 'LabelStyles')
record <- read.csv(file.path(local, 'SoS-ExampleCollection.csv')) |>
sf::st_drop_geometry() |>
data.frame() |>
dplyr::filter(Collection_number == params$Collection_number)
purrr::walk(
.x = l.nevadense$Collection_number,
~ rmarkdown::render(
input = file.path(local, 'skeleton-research.Rmd'),
output_file = file.path(local, paste0('Spaced-SOS-', glue::glue("{.x}.pdf"))),
params = list(Collection_number = {.x})
)
)
getwd()
record <- read.csv(file.path(local, 'SoS-ExampleCollection.csv')) |>
dplyr::filter(Collection_number == params$Collection_number)
purrr::walk(
.x = l.nevadense$Collection_number,
~ rmarkdown::render(
input = file.path(local, 'skeleton-research.Rmd'),
output_file = file.path(local, paste0('Spaced-SOS-', glue::glue("{.x}.pdf"))),
params = list(Collection_number = {.x})
)
)
rm(params)
purrr::walk(
.x = l.nevadense$Collection_number,
~ rmarkdown::render(
input = file.path(local, 'skeleton-research.Rmd'),
output_file = file.path(local, paste0('Spaced-SOS-', glue::glue("{.x}.pdf"))),
params = list(Collection_number = {.x})
)
)
#devtools::install_github('sagesteppe/BarnebyLives')
library(BarnebyLives)
library(tidyverse)
local <- file.path(path.expand('~'), 'Documents', 'assoRted', 'Barneby_Lives_dev', 'LabelStyles')
l.nevadense <- collection_examples |>
filter(Collection_number == 2823) |>
mutate(
Project_name = 'Custom Fonts',
Coordinate_uncertainty = '+/- 5m',
Notes = 'Permit No.: XXXXX from Agency ZYX, Date: XX.XX.2025. Collected under NSF XXXXX, "catchy project name". DNA extracted from silica gel dried leaf tissue (additional material in ZYX biorepository) accession No.: XXXXX. Sequences available on NCBI SRA as PRJXYZYXYXY.'
)
write.csv(l.nevadense, file.path(local, 'SoS-ExampleCollection.csv'), row.names = F)
p2lib <- file.path(
system.file(package = 'BarnebyLives'),
'rmarkdown', 'templates', 'labels', 'skeleton'
)
# here we copy over one of the skeletons which we are going to modify in this example
file.copy(
from = file.path(p2lib, 'skeleton-research.Rmd'),
to = file.path(local, 'skeleton-research.Rmd'),
overwrite = FALSE
)
purrr::walk(
.x = l.nevadense$Collection_number,
~ rmarkdown::render(
input = file.path(local, 'skeleton-research.Rmd'),
output_file = file.path(local, paste0('research', glue::glue("{.x}.pdf"))),
params = list(Collection_number = {.x})
)
)
local <- file.path(path.expand('~'), 'Documents', 'assoRted', 'Barneby_Lives_dev', 'LabelStyles')
record <- read.csv(file.path(local, 'SoS-ExampleCollection.csv')) #|>
View(record)
l.nevadense <- collection_examples |>
filter(Collection_number == 2823) |>
mutate(
Project_name = 'Research Notes',
Coordinate_uncertainty = '+/- 5m',
Notes = 'Permit No.: XXXXX from Agency ZYX, Date: XX.XX.2025. Collected under NSF XXXXX, "catchy project name". DNA extracted from silica gel dried leaf tissue (additional material in ZYX biorepository) accession No.: XXXXX. Sequences available on NCBI SRA as PRJXYZYXYXY.'
)
#devtools::install_github('sagesteppe/BarnebyLives')
library(BarnebyLives)
library(tidyverse)
local <- file.path(path.expand('~'), 'Documents', 'assoRted', 'Barneby_Lives_dev', 'LabelStyles')
l.nevadense <- collection_examples |>
filter(Collection_number == 2823) |>
mutate(
Project_name = 'Research Notes',
Coordinate_uncertainty = '+/- 5m',
Notes = 'Permit No.: XXXXX from Agency ZYX, Date: XX.XX.2025. Collected under NSF XXXXX, "catchy project name". DNA extracted from silica gel dried leaf tissue (additional material in ZYX biorepository) accession No.: XXXXX. Sequences available on NCBI SRA as PRJXYZYXYXY.'
)
write.csv(l.nevadense, file.path(local, 'SoS-ExampleCollection.csv'), row.names = F)
p2lib <- file.path(
system.file(package = 'BarnebyLives'),
'rmarkdown', 'templates', 'labels', 'skeleton'
)
# here we copy over one of the skeletons which we are going to modify in this example
file.copy(
from = file.path(p2lib, 'skeleton-research.Rmd'),
to = file.path(local, 'skeleton-research.Rmd'),
overwrite = FALSE
)
purrr::walk(
.x = l.nevadense$Collection_number,
~ rmarkdown::render(
input = file.path(local, 'skeleton-research.Rmd'),
output_file = file.path(local, paste0('research', glue::glue("{.x}.pdf"))),
params = list(Collection_number = {.x})
)
)
l.nevadense$Collection_number
file.path(local, 'skeleton-research.Rmd')
file.exists( file.path(local, 'skeleton-research.Rmd'))
