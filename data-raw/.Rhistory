#' @param x a value being feed into the label during the merge
#' @examples
#' associates <- c('Eriogonum ovalifolium var. purpureum, Castilleja sp., Crepis spp.')
#' spp_normal(associates)
#' @export
species_font <- function(x){
x <- paste0('*', x, '*')
if(any(grep(' sp..| s.p[.]| var. | subsp. ', x)) == TRUE){
x <- gsub(' sp[.], ', '* sp., *', x)
x <- gsub(' sp[.]\\*$', '* sp.', x)
x <- gsub(' spp[.]\\*$', '* spp.', x)
x <- gsub(' spp[.], ', '* spp., *', x)
# infraspecies will always have a space before and after - WORKING
x <- gsub(' ssp[.] ', '* ssp. *', x)
x <- gsub(' ssp[.]\\*$', '* ssp.', x)
x <- gsub(' var[.] ', '* var. *', x)
x <- gsub(' subsp[.] ', '* spp. *', x)
return(x)
}
x <- gsub('  ', ' ', x)
x <- paste0(x, '.')
x <- gsub("..", ".", x, fixed = TRUE)
return(x)
}
associates <- c('Eriogonum ovalifolium var. purpureum, Castilleja sp., Crepis spp.')
spp_normal(associates)
species_font(associates)
#' ensure proper italicization of a associated species
#'
#' This function works at the time of label creation to ensure that abbreviations
#' such as 'species' 'variety' and such are not italicizded, per convention.
#' @param x a value being feed into the label during the merge
#' @examples
#' associates <- c('Eriogonum ovalifolium var. purpureum, Castilleja sp., Crepis spp.')
#' species_font(associates)
#' @export
species_font <- function(x){
x <- paste0('*', x, '*')
if(any(grep(' sp..| s.p[.]| var. | subsp. ', x)) == TRUE){
x <- gsub(' sp[.], ', '* sp., *', x)
x <- gsub(' sp[.]\\*$', '* sp.', x)
x <- gsub(' spp[.]\\*$', '* spp.', x)
x <- gsub(' spp[.], ', '* spp., *', x)
# infraspecies will always have a space before and after - WORKING
x <- gsub(' ssp[.] ', '* ssp. *', x)
x <- gsub(' ssp[.]\\*$', '* ssp.', x)
x <- gsub(' var[.] ', '* var. *', x)
x <- gsub(' subsp[.] ', '* spp. *', x)
x <- gsub('  ', ' ', x)
x <- paste0(x, '.')
x <- gsub("..", ".", x, fixed = TRUE)
return(x)
}
x <- gsub('  ', ' ', x)
x <- paste0(x, '.')
x <- gsub("..", ".", x, fixed = TRUE)
return(x)
}
associates <- c('Eriogonum ovalifolium var. purpureum, Castilleja sp., Crepis spp.')
species_font(associates)
View(collection_examples)
devtools::install_github('sagesteppe/BarnebyLives')
library(BarnebyLives)
data('collection_examples')
p <- '~/Documents/HerbariumLabels/raw'
p2libs <- .libPaths()[
grepl(paste0(version$major, '.', sub('\\..*', "", version$minor)),
.libPaths())]
folds <- c('BarnebyLives/rmarkdown/templates/labels/skeleton/skeleton.Rmd')
purrr::walk(
.x = collection_examples$Collection_number,
~ rmarkdown::render(
input = file.path( p2libs, folds),
output_file = file.path(p, glue::glue("{.x}.pdf")),
params = list(Collection_number = {.x})
)
)
View(collection_examples)
devtools::install_github('sagesteppe/BarnebyLives')
library(BarnebyLives)
# devtools::install_github('sagesteppe/BarnebyLives')
library(BarnebyLives)
data('collection_examples')
p <- '~/Documents/HerbariumLabels/raw'
p2libs <- .libPaths()[
grepl(paste0(version$major, '.', sub('\\..*', "", version$minor)),
.libPaths())]
folds <- c('BarnebyLives/rmarkdown/templates/labels/skeleton/skeleton.Rmd')
purrr::walk(
.x = collection_examples$Collection_number,
~ rmarkdown::render(
input = file.path( p2libs, folds),
output_file = file.path(p, glue::glue("{.x}.pdf")),
params = list(Collection_number = {.x})
)
)
devtools::install_github('sagesteppe/BarnebyLives')
# devtools::install_github('sagesteppe/BarnebyLives')
library(BarnebyLives)
p <- '~/Documents/HerbariumLabels/raw'
p2libs <- .libPaths()[
grepl(paste0(version$major, '.', sub('\\..*', "", version$minor)),
.libPaths())]
folds <- c('BarnebyLives/rmarkdown/templates/labels/skeleton/skeleton.Rmd')
purrr::walk(
.x = collection_examples$Collection_number,
~ rmarkdown::render(
input = file.path( p2libs, folds),
output_file = file.path(p, glue::glue("{.x}.pdf")),
params = list(Collection_number = {.x})
)
)
#' This functions determines whether to write information on associated plant
#' species. It used as a final step when formatting labels.
#' @param x dataframe holding the values
#' @examples
#' library(BarnebyLives)
#' hilaria <- collection_examples[73,]
#' associates_writer(hilaria)
#' agoseris <- collection_examples[82,]
#' associates_writer(agoseris)
#' @export
associates_writer <- function(x){
x[x==""] <- NA
if (is.na(x)){""} else {
gsub("..", ".", paste0('Ass.: ', species_font(x)), fixed = TRUE)}
return(x)
}
purrr::walk(
.x = collection_examples$Collection_number,
~ rmarkdown::render(
input = file.path( p2libs, folds),
output_file = file.path(p, glue::glue("{.x}.pdf")),
params = list(Collection_number = {.x})
)
)
devtools::install_github('sagesteppe/BarnebyLives')
# devtools::install_github('sagesteppe/BarnebyLives')
library(BarnebyLives)
data('collection_examples')
p <- '~/Documents/HerbariumLabels/raw'
p2libs <- .libPaths()[
grepl(paste0(version$major, '.', sub('\\..*', "", version$minor)),
.libPaths())]
folds <- c('BarnebyLives/rmarkdown/templates/labels/skeleton/skeleton.Rmd')
purrr::walk(
.x = collection_examples$Collection_number,
~ rmarkdown::render(
input = file.path( p2libs, folds),
output_file = file.path(p, glue::glue("{.x}.pdf")),
params = list(Collection_number = {.x})
)
)
View(collection_examples)
devtools::install_github('sagesteppe/BarnebyLives')
# devtools::install_github('sagesteppe/BarnebyLives')
library(BarnebyLives)
data('collection_examples')
p <- '~/Documents/HerbariumLabels/raw'
p2libs <- .libPaths()[
grepl(paste0(version$major, '.', sub('\\..*', "", version$minor)),
.libPaths())]
folds <- c('BarnebyLives/rmarkdown/templates/labels/skeleton/skeleton.Rmd')
purrr::walk(
.x = collection_examples$Collection_number,
~ rmarkdown::render(
input = file.path( p2libs, folds),
output_file = file.path(p, glue::glue("{.x}.pdf")),
params = list(Collection_number = {.x})
)
)
#' This functions determines whether to write information on associated plant
#' species. It used as a final step when formatting labels.
#' @param x dataframe holding the values
#' @examples
#' library(BarnebyLives)
#' hilaria <- collection_examples[73,]
#' associates_writer(hilaria)
#' agoseris <- collection_examples[82,]
#' associates_writer(agoseris)
#' @export
associates_writer <- function(x){
x[x==""] <- NA
if (is.na(x)){x <- ""} else {
x <- gsub("..", ".", paste0('Ass.: ', species_font(x)), fixed = TRUE)}
x <- gsub('.,.$', '.', x)
}
devtools::install_github('sagesteppe/BarnebyLives')
# devtools::install_github('sagesteppe/BarnebyLives')
library(BarnebyLives)
p <- '~/Documents/HerbariumLabels/raw'
p2libs <- .libPaths()[
grepl(paste0(version$major, '.', sub('\\..*', "", version$minor)),
.libPaths())]
folds <- c('BarnebyLives/rmarkdown/templates/labels/skeleton/skeleton.Rmd')
purrr::walk(
.x = collection_examples$Collection_number,
~ rmarkdown::render(
input = file.path( p2libs, folds),
output_file = file.path(p, glue::glue("{.x}.pdf")),
params = list(Collection_number = {.x})
)
)
collection_examples
data("collection_examples")
View(collection_examples)
data("collection_examples")[25,]
collection_examples[25,]
t <- collection_examples[25,]
View(t)
t <- collection_examples[collection_examples$Collection_number == 2909,]
View(t)
View(t)
t <- collection_examples[collection_examples$Collection_number == 2909,c('Collection_number', 'Vegetation')]
associates_writer()
associates_writer(t)
associates_writer(t$Vegetation)
#' This functions determines whether to write information on associated plant
#' species. It used as a final step when formatting labels.
#' @param x dataframe holding the values
#' @examples
#' library(BarnebyLives)
#' hilaria <- collection_examples[73,]
#' associates_writer(hilaria)
#' agoseris <- collection_examples[82,]
#' associates_writer(agoseris)
#' @export
associates_writer <- function(x){
x[x==""] <- NA
if (is.na(x)){x <- ""} else {
x <- gsub("..", ".", paste0('Ass.: ', species_font(x)), fixed = TRUE)}
x <- gsub('.,.$', '.', x)
return(x)
}
t <- collection_examples[collection_examples$Collection_number == 2909,c('Collection_number', 'Vegetation')]
associates_writer(t$Vegetation)
#' This functions determines whether to write information on associated plant
#' species. It used as a final step when formatting labels.
#' @param x dataframe holding the values
#' @examples
#' library(BarnebyLives)
#' hilaria <- collection_examples[73,]
#' associates_writer(hilaria)
#' agoseris <- collection_examples[82,]
#' associates_writer(agoseris)
#' @export
associates_writer <- function(x){
x[x==""] <- NA
if (is.na(x)){x <- ""} else {
x <- gsub("..", ".", paste0('Ass.: ', species_font(x)), fixed = TRUE)}
x <- gsub(' sp.,[*].$', '* sp.', x)
return(x)
}
t <- collection_examples[collection_examples$Collection_number == 2909,c('Collection_number', 'Vegetation')]
associates_writer(t$Vegetation)
t <- collection_examples[collection_examples$Collection_number == 2909,c('Collection_number', 'Vegetation')]
#' ensure proper italicization of a associated species
#'
#' This function works at the time of label creation to ensure that abbreviations
#' such as 'species' 'variety' and such are not italicizded, per convention.
#' @param x a value being feed into the label during the merge
#' @examples
#' associates <- c('Eriogonum ovalifolium var. purpureum, Castilleja sp., Crepis spp.')
#' species_font(associates)
#' @export
species_font <- function(x){
x <- paste0('*', x, '*')
if(any(grep(' sp..| s.p[.]| var. | subsp. ', x)) == TRUE){
x <- gsub(' sp[.], ', '* sp., *', x)
x <- gsub(' sp[.]\\*$', '* sp.', x)
x <- gsub(' spp[.]\\*$', '* spp.', x)
x <- gsub(' spp[.], ', '* spp., *', x)
# infraspecies will always have a space before and after - WORKING
x <- gsub(' ssp[.] ', '* ssp. *', x)
x <- gsub(' ssp[.]\\*$', '* ssp.', x)
x <- gsub(' var[.] ', '* var. *', x)
x <- gsub(' subsp[.] ', '* spp. *', x)
x <- gsub('  ', ' ', x)
x <- paste0(x, '.')
x <- gsub("..", ".", x, fixed = TRUE)
x <- gsub(' sp.,*.$', '* sp.', x, fixed = TRUE)
return(x)
}
x <- gsub('  ', ' ', x)
x <- paste0(x, '.')
x <- gsub("..", ".", x, fixed = TRUE)
x <- gsub(' sp.,*.$', '* sp.', x, fixed = TRUE)
return(x)
}
t <- collection_examples[collection_examples$Collection_number == 2909,c('Collection_number', 'Vegetation')]
t
#' ensure proper italicization of a associated species
#'
#' This function works at the time of label creation to ensure that abbreviations
#' such as 'species' 'variety' and such are not italicizded, per convention.
#' @param x a value being feed into the label during the merge
#' @examples
#' associates <- c('Eriogonum ovalifolium var. purpureum, Castilleja sp., Crepis spp.')
#' species_font(associates)
#' @export
species_font <- function(x){
x <- paste0('*', x, '*')
if(any(grep(' sp..| s.p[.]| var. | subsp. ', x)) == TRUE){
x <- gsub(' sp[.], ', '* sp., *', x)
x <- gsub(' sp[.]\\*$', '* sp.', x)
x <- gsub(' spp[.]\\*$', '* spp.', x)
x <- gsub(' spp[.], ', '* spp., *', x)
# infraspecies will always have a space before and after - WORKING
x <- gsub(' ssp[.] ', '* ssp. *', x)
x <- gsub(' ssp[.]\\*$', '* ssp.', x)
x <- gsub(' var[.] ', '* var. *', x)
x <- gsub(' subsp[.] ', '* spp. *', x)
x <- gsub('  ', ' ', x)
x <- paste0(x, '.')
x <- gsub("..", ".", x, fixed = TRUE)
#   x <- gsub(' sp.,*.$', '* sp.', x, fixed = TRUE)
return(x)
}
x <- gsub('  ', ' ', x)
x <- paste0(x, '.')
x <- gsub("..", ".", x, fixed = TRUE)
#  x <- gsub(' sp.,*.$', '* sp.', x, fixed = TRUE)
return(x)
}
t <- collection_examples[collection_examples$Collection_number == 2909,c('Collection_number', 'Vegetation')]
t
species_font(t)
#' ensure proper italicization of a associated species
#'
#' This function works at the time of label creation to ensure that abbreviations
#' such as 'species' 'variety' and such are not italicizded, per convention.
#' @param x a value being feed into the label during the merge
#' @examples
#' associates <- c('Eriogonum ovalifolium var. purpureum, Castilleja sp., Crepis spp.')
#' species_font(associates)
#' @export
species_font <- function(x){
x <- paste0('*', x, '*')
if(any(grep(' sp..| s.p[.]| var. | subsp. ', x)) == TRUE){
x <- gsub(' sp[.], ', '* sp., *', x)
x <- gsub(' sp[.]\\*$', '* sp.', x)
x <- gsub(' spp[.]\\*$', '* spp.', x)
x <- gsub(' spp[.], ', '* spp., *', x)
# infraspecies will always have a space before and after - WORKING
x <- gsub(' ssp[.] ', '* ssp. *', x)
x <- gsub(' ssp[.]\\*$', '* ssp.', x)
x <- gsub(' var[.] ', '* var. *', x)
x <- gsub(' subsp[.] ', '* spp. *', x)
x <- gsub('  ', ' ', x)
x <- paste0(x, '.')
x <- gsub("..", ".", x, fixed = TRUE)
x <- gsub(' sp.,*.$', '* sp.', x, fixed = TRUE)
return(x)
}
x <- gsub('  ', ' ', x)
x <- paste0(x, '.')
x <- gsub("..", ".", x, fixed = TRUE)
x <- gsub(' sp.,*.$', '* sp.', x, fixed = TRUE)
return(x)
}
t <- collection_examples[collection_examples$Collection_number == 2909,c('Collection_number', 'Vegetation')]
species_font(t)
#' ensure proper italicization of a associated species
#'
#' This function works at the time of label creation to ensure that abbreviations
#' such as 'species' 'variety' and such are not italicizded, per convention.
#' @param x a value being feed into the label during the merge
#' @examples
#' associates <- c('Eriogonum ovalifolium var. purpureum, Castilleja sp., Crepis spp.')
#' species_font(associates)
#' @export
species_font <- function(x){
x <- paste0('*', x, '*')
if(any(grep(' sp..| s.p[.]| var. | subsp. ', x)) == TRUE){
x <- gsub(' sp[.], ', '* sp., *', x)
x <- gsub(' sp[.]\\*$', '* sp.', x)
x <- gsub(' spp[.]\\*$', '* spp.', x)
x <- gsub(' spp[.], ', '* spp., *', x)
# infraspecies will always have a space before and after - WORKING
x <- gsub(' ssp[.] ', '* ssp. *', x)
x <- gsub(' ssp[.]\\*$', '* ssp.', x)
x <- gsub(' var[.] ', '* var. *', x)
x <- gsub(' subsp[.] ', '* spp. *', x)
x <- gsub('  ', ' ', x)
x <- paste0(x, '.')
x <- gsub("..", ".", x, fixed = TRUE)
x <- gsub(' sp.,*.$', '* sp.', x, fixed = TRUE)
return(x)
}
x <- gsub('  ', ' ', x)
x <- paste0(x, '.')
x <- gsub("..", ".", x, fixed = TRUE)
x <- gsub(' sp.,*.$', '* sp.', x, fixed = TRUE)
return(x)
}
t <- collection_examples[collection_examples$Collection_number == 2909,c('Collection_number', 'Vegetation')]
species_font(t)
species_font(t$Vegetation)
#' ensure proper italicization of a associated species
#'
#' This function works at the time of label creation to ensure that abbreviations
#' such as 'species' 'variety' and such are not italicizded, per convention.
#' @param x a value being feed into the label during the merge
#' @examples
#' associates <- c('Eriogonum ovalifolium var. purpureum, Castilleja sp., Crepis spp.')
#' species_font(associates)
#' @export
species_font <- function(x){
x <- paste0('*', x, '*')
if(any(grep(' sp..| s.p[.]| var. | subsp. ', x)) == TRUE){
x <- gsub(' sp[.], ', '* sp., *', x)
x <- gsub(' sp[.]\\*$', '* sp.', x)
x <- gsub(' spp[.]\\*$', '* spp.', x)
x <- gsub(' spp[.], ', '* spp., *', x)
# infraspecies will always have a space before and after - WORKING
x <- gsub(' ssp[.] ', '* ssp. *', x)
x <- gsub(' ssp[.]\\*$', '* ssp.', x)
x <- gsub(' var[.] ', '* var. *', x)
x <- gsub(' subsp[.] ', '* spp. *', x)
x <- gsub('  ', ' ', x)
x <- paste0(x, '.')
x <- gsub("..", ".", x, fixed = TRUE)
x <- gsub(' sp.,*.', '* sp.', x, fixed = TRUE)
return(x)
}
x <- gsub('  ', ' ', x)
x <- paste0(x, '.')
x <- gsub("..", ".", x, fixed = TRUE)
x <- gsub(' sp.,*.', '* sp.', x, fixed = TRUE)
return(x)
}
t <- collection_examples[collection_examples$Collection_number == 2909,c('Collection_number', 'Vegetation')]
species_font(t$Vegetation)
t <- collection_examples[collection_examples$Collection_number == 2909,c('Collection_number', 'Vegetation')]
species_font(t$Vegetation)
#' ensure proper italicization of a associated species
#'
#' This function works at the time of label creation to ensure that abbreviations
#' such as 'species' 'variety' and such are not italicizded, per convention.
#' @param x a value being feed into the label during the merge
#' @examples
#' associates <- c('Eriogonum ovalifolium var. purpureum, Castilleja sp., Crepis spp.')
#' species_font(associates)
#' @export
species_font <- function(x){
x <- paste0('*', x, '*')
if(any(grep(' sp..| s.p[.]| var. | subsp. ', x)) == TRUE){
x <- gsub(' sp[.], ', '* sp., *', x)
x <- gsub(' sp[.]\\*$', '* sp.', x)
x <- gsub(' spp[.]\\*$', '* spp.', x)
x <- gsub(' spp[.], ', '* spp., *', x)
# infraspecies will always have a space before and after - WORKING
x <- gsub(' ssp[.] ', '* ssp. *', x)
x <- gsub(' ssp[.]\\*$', '* ssp.', x)
x <- gsub(' var[.] ', '* var. *', x)
x <- gsub(' subsp[.] ', '* spp. *', x)
x <- gsub('  ', ' ', x)
x <- paste0(x, '.')
x <- gsub("..", ".", x, fixed = TRUE)
x <- gsub(' sp.,*.', '* sp.', x, fixed = TRUE)
return(x)
}
x <- gsub('  ', ' ', x)
x <- paste0(x, '.')
x <- gsub("..", ".", x, fixed = TRUE)
x <- gsub(' sp.,*.', '* sp.', x, fixed = TRUE)
return(x)
}
devtools::install_github('sagesteppe/BarnebyLives')
# devtools::install_github('sagesteppe/BarnebyLives')
library(BarnebyLives)
data('collection_examples')
p <- '~/Documents/HerbariumLabels/raw'
p2libs <- .libPaths()[
grepl(paste0(version$major, '.', sub('\\..*', "", version$minor)),
.libPaths())]
folds <- c('BarnebyLives/rmarkdown/templates/labels/skeleton/skeleton.Rmd')
purrr::walk(
.x = collection_examples$Collection_number,
~ rmarkdown::render(
input = file.path( p2libs, folds),
output_file = file.path(p, glue::glue("{.x}.pdf")),
params = list(Collection_number = {.x})
)
)
library(usethis)
library(googlesheets4)
setwd('/media/steppe/hdd/BarnebyLives/data-raw')
googledrive::drive_auth("reedbenkendorf27@gmail.com")
# read in data from the sheet to process
collection_examples <- read_sheet('1iOQBNeGqRJ3yhA-Sujas3xZ2Aw5rFkktUKv3N_e4o8M',
sheet = 'Processed - Examples')
usethis::use_data(collection_examples, overwrite = TRUE)
devtools::install_github('sagesteppe/BarnebyLives')
# devtools::install_github('sagesteppe/BarnebyLives')
library(BarnebyLives)
data('collection_examples')
View(collection_examples)
p <- '~/Documents/HerbariumLabels/raw'
p2libs <- .libPaths()[
grepl(paste0(version$major, '.', sub('\\..*', "", version$minor)),
.libPaths())]
folds <- c('BarnebyLives/rmarkdown/templates/labels/skeleton/skeleton.Rmd')
purrr::walk(
.x = collection_examples$Collection_number,
~ rmarkdown::render(
input = file.path( p2libs, folds),
output_file = file.path(p, glue::glue("{.x}.pdf")),
params = list(Collection_number = {.x})
)
)
devtools::install_github('sagesteppe/BarnebyLives')
