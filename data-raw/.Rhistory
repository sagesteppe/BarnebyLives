notch = T, notchwidth = 0.75,
varwidth = T,
outlier.shape = F, outlier.alpha = 0.8, outlier.colour = 'black') +
geom_jitter(width = 0.1, shape = 1) +
ggpubr::stat_compare_means(
comparisons = my_comparisons,
aes(label = ..p.signif..),
fill = 'white',
tip.length = 0, vjust = 0.25, size = 4) +
theme_bw() +
scale_colour_manual(values = c('#F4AFB4', '#94A89A')) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
scale_x_discrete(labels = c('Alignment', 'Reassignment')) +
labs(
y = 'Correctly Classified Reads Per Sample',
x = 'Classication',
title = 'Accuracy of "Naive" Alignment \n& Reassignment',
caption=expression('`****` denotes'~italic(p)~'<= 0.0001')) +
theme(legend.position = 'none',
plot.title = element_text(hjust = 0.5),
axis.text.y = element_text(angle = 45),
panel.grid.major = element_blank(),
text=element_text(size=16),
line = element_line(size = 1.5)
) +
scale_y_continuous(
breaks = seq(0,100,length = 5),
labels = paste0(seq(0,100,length=5), '%'),
limit = c(0,100)
)
ggplot(ACC_sens_Spec, aes(y = Sp_Acc,  x= Method, color = Method),
alpha = 0.5) +
stat_boxplot(
notch = T, notchwidth = 0.75,
varwidth = T,
outlier.shape = F, outlier.alpha = 0.8, outlier.colour = 'black') +
geom_jitter(width = 0.1, shape = 1) +
ggpubr::stat_compare_means(
comparisons = my_comparisons,
aes(label = ..p.signif..),
fill = 'white',
tip.length = 0, vjust = 0.25, size = 4) +
theme_bw() +
scale_colour_manual(values = c('#F4AFB4', '#94A89A')) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
scale_x_discrete(labels = c('Alignment', 'Reassignment')) +
labs(
y = 'Correctly Classified Reads Per Sample',
x = 'Classication',
title = 'Accuracy of "Naive" Alignment \n& Reassignment',
caption=expression('`****` denotes'~italic(p)~'<= 0.0001')) +
theme(legend.position = 'none',
plot.title = element_text(hjust = 0.5),
axis.text.y = element_text(angle = 45),
panel.grid.major = element_blank(),
text=element_text(size=16),
line = element_line(size = 1.5)
) +
scale_y_continuous(
breaks = seq(0,100,length = 5),
labels = paste0(seq(0,100,length=5), '%'),
limit = c(0,100)
)
ggplot(ACC_sens_Spec, aes(y = Sp_Acc,  x= Method, color = Method),
alpha = 0.5) +
stat_boxplot(
notch = T, notchwidth = 0.75,
varwidth = T,
outlier.shape = F, outlier.alpha = 0.8, outlier.colour = 'black') +
geom_jitter(width = 0.1, shape = 1) +
ggpubr::stat_compare_means(
comparisons = my_comparisons,
aes(label = ..p.signif..),
fill = 'white',
tip.length = 0, vjust = 0.25, size = 4) +
theme_bw() +
scale_colour_manual(values = c('#F4AFB4', '#94A89A')) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
scale_x_discrete(labels = c('Alignment', 'Reassignment')) +
labs(
y = 'Correctly Classified Reads Per Sample',
x = 'Classication',
title = 'Accuracy of "Naive" Alignment \n& Reassignment',
caption=expression('`****` denotes'~italic(p)~'<= 0.0001')) +
theme(legend.position = 'none',
plot.title = element_text(hjust = 0.5),
axis.text.y = element_text(angle = 45),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
text=element_text(size=16)
) +
scale_y_continuous(
breaks = seq(0,100,length = 5),
labels = paste0(seq(0,100,length=5), '%'),
limit = c(0,100)
)
ggplot(ACC_sens_Spec, aes(y = Sp_Acc,  x= Method, color = Method),
alpha = 0.5) +
stat_boxplot(
notch = T, notchwidth = 0.75,
varwidth = T, linewidth = 2,
outlier.shape = F, outlier.alpha = 0.8, outlier.colour = 'black') +
geom_jitter(width = 0.1, shape = 1) +
ggpubr::stat_compare_means(
comparisons = my_comparisons,
aes(label = ..p.signif..),
fill = 'white',
tip.length = 0, vjust = 0.25, size = 4) +
theme_bw() +
scale_colour_manual(values = c('#F4AFB4', '#94A89A')) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
scale_x_discrete(labels = c('Alignment', 'Reassignment')) +
labs(
y = 'Correctly Classified Reads Per Sample',
x = 'Classication',
title = 'Accuracy of "Naive" Alignment \n& Reassignment',
caption=expression('`****` denotes'~italic(p)~'<= 0.0001')) +
theme(legend.position = 'none',
plot.title = element_text(hjust = 0.5),
axis.text.y = element_text(angle = 45),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
text=element_text(size=16)
) +
scale_y_continuous(
breaks = seq(0,100,length = 5),
labels = paste0(seq(0,100,length=5), '%'),
limit = c(0,100)
)
ggplot(ACC_sens_Spec, aes(y = Sp_Acc,  x= Method, color = Method),
alpha = 0.5) +
stat_boxplot(
notch = T, notchwidth = 0.75,
varwidth = T, linewidth = 1.5,
outlier.shape = F, outlier.alpha = 0.8, outlier.colour = 'black') +
geom_jitter(width = 0.1, shape = 1) +
ggpubr::stat_compare_means(
comparisons = my_comparisons,
aes(label = ..p.signif..),
fill = 'white',
tip.length = 0, vjust = 0.25, size = 4) +
theme_bw() +
scale_colour_manual(values = c('#F4AFB4', '#94A89A')) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
scale_x_discrete(labels = c('Alignment', 'Reassignment')) +
labs(
y = 'Correctly Classified Reads Per Sample',
x = 'Classication',
title = 'Accuracy of "Naive" Alignment \n& Reassignment',
caption=expression('`****` denotes'~italic(p)~'<= 0.0001')) +
theme(legend.position = 'none',
plot.title = element_text(hjust = 0.5),
axis.text.y = element_text(angle = 45),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
text=element_text(size=16)
) +
scale_y_continuous(
breaks = seq(0,100,length = 5),
labels = paste0(seq(0,100,length=5), '%'),
limit = c(0,100)
)
ggplot(ACC_sens_Spec, aes(y = Sp_Acc,  x= Method, color = Method),
alpha = 0.5) +
stat_boxplot(
notch = T, notchwidth = 0.75,
varwidth = T, linewidth = 1,
outlier.shape = F, outlier.alpha = 0.8, outlier.colour = 'black') +
geom_jitter(width = 0.1, shape = 1) +
ggpubr::stat_compare_means(
comparisons = my_comparisons,
aes(label = ..p.signif..),
fill = 'white',
tip.length = 0, vjust = 0.25, size = 4) +
theme_bw() +
scale_colour_manual(values = c('#F4AFB4', '#94A89A')) +
scale_y_continuous(labels = scales::percent_format(scale = 1)) +
scale_x_discrete(labels = c('Alignment', 'Reassignment')) +
labs(
y = 'Correctly Classified Reads Per Sample',
x = 'Classication',
title = 'Accuracy of "Naive" Alignment \n& Reassignment',
caption=expression('`****` denotes'~italic(p)~'<= 0.0001')) +
theme(legend.position = 'none',
plot.title = element_text(hjust = 0.5),
axis.text.y = element_text(angle = 45),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
text=element_text(size=16)
) +
scale_y_continuous(
breaks = seq(0,100,length = 5),
labels = paste0(seq(0,100,length=5), '%'),
limit = c(0,100)
)
ggsave(
file.path('..', 'graphics', 'plots', 'Accuracy_post_process.png'))
ggsave(
width = 3, height =3,
file.path('..', 'graphics', 'plots', 'Accuracy_post_process.png')
)
ggsave(
width = 5, height =7,
file.path('..', 'graphics', 'plots', 'Accuracy_post_process.png')
)
ggsave(
width = 5, height =7, units = 'in',
file.path('..', 'graphics', 'plots', 'Accuracy_post_process.png')
)
ggsave(
width = 3, height = 4, units = 'in',
file.path('..', 'graphics', 'plots', 'Accuracy_post_process.png')
)
ggsave(
width = 4, height = 5.5, units = 'in',
file.path('..', 'graphics', 'plots', 'Accuracy_post_process.png')
)
ggsave(
width = 4.5, height = 5.5, units = 'in',
file.path('..', 'graphics', 'plots', 'Accuracy_post_process.png')
)
ggsave(
width = 5, height = 7, units = 'in',
file.path('..', 'graphics', 'plots', 'Accuracy_post_process.png')
)
ggsave(
width = 6, height = 7, units = 'in',
file.path('..', 'graphics', 'plots', 'Accuracy_post_process.png')
)
ggsave(
width = 5.5, height = 7, units = 'in',
file.path('..', 'graphics', 'plots', 'Accuracy_post_process.png')
)
pmorph
View(pmorph)
group_by(pmorph, sample.id)
length(group_by(pmorph, sample.id))
group_by(pmorph, sample.id) |>
count()
group_by(pmorph, sample.id) |>
count() |>
mutate(sd(n))
sd(grains_counted
grains_counted
grains_counted
blah <- group_by(pmorph, sample.id) |>
count()
sd(blah$n))
sd(blah$n)
knitr::opts_chunk$set(eval = FALSE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
#devtools::install_github('sagesteppe/BarnebyLives')
library(BarnebyLives)
library(tidyverse)
local <- file.path(path.expand('~'), 'Documents', 'assoRted', 'Barneby_Lives_dev', 'LabelStyles')
l.nevadense <- collection_examples |>
filter(Collection_number == 2823) |>
mutate(
Project_name = 'Research Notes',
Coordinate_uncertainty = '+/- 5m',
Notes = 'Permit No.: XXXXX from Agency ZYX, Date: XX.XX.2025. Collected under NSF XXXXX, "catchy project name". DNA extracted from silica gel dried leaf tissue (additional material in ZYX biorepository) accession No.: XXXXX. Sequences available on NCBI SRA as PRJXYZYXYXY.'
)
write.csv(l.nevadense, file.path(local, 'SoS-ExampleCollection.csv'), row.names = F)
p2lib <- file.path(
system.file(package = 'BarnebyLives'),
'rmarkdown', 'templates', 'labels', 'skeleton'
)
purrr::walk(
.x = l.nevadense$Collection_number,
~ rmarkdown::render(
input = file.path(local, 'skeleton-modern.Rmd'),
output_file = file.path(local, paste0('modern', glue::glue("{.x}.pdf"))),
params = list(Collection_number = {.x})
)
)
l.nevadense <- collection_examples |>
filter(Collection_number == 2823) |>
mutate(
Project_name = 'Research Notes',
Coordinate_uncertainty = '+/- 5m',
Notes = 'Permit No.: XXXXX from Agency ZYX, Date: XX.XX.2025. Collected under NSF XXXXX, "catchy project name". DNA extracted from silica gel dried leaf tissue (additional material in ZYX biorepository) accession No.: XXXXX. Sequences available on NCBI SRA as PRJXYZYXYXY.'
)
write.csv(l.nevadense, file.path(local, 'SoS-ExampleCollection.csv'), row.names = F)
l.nevadense
purrr::walk(
.x = l.nevadense$Collection_number,
~ rmarkdown::render(
input = file.path(local, 'skeleton-modern.Rmd'),
output_file = file.path(local, paste0('modern', glue::glue("{.x}.pdf"))),
params = list(Collection_number = {.x})
)
)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(dpi = 300)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
collection_examples
record <- collection_examples |>
sf::st_drop_geometry() |>
data.frame() |>
mutate(
Coordinate_Uncertainty = '+/- 5m')
purrr::walk(
.x = l.nevadense$Collection_number,
~ rmarkdown::render(
input = file.path(local, 'skeleton-modern.Rmd'),
output_file = file.path(local, paste0('modern', glue::glue("{.x}.pdf"))),
params = list(Collection_number = {.x})
)
)
record <- collection_examples |>
sf::st_drop_geometry() |>
data.frame() |>
mutate(
Coordinate_Uncertainty = '+/- 5m') |>
dplyr::filter(Collection_number == params$Collection_number)
record <- collection_examples |>
sf::st_drop_geometry() |>
data.frame() |>
mutate(
Coordinate_Uncertainty = '+/- 5m')# |>
View(record)
l.nevadense
l.nevadense$Collection_number
getwd()
purrr::walk(
.x = l.nevadense$Collection_number,
~ rmarkdown::render(
input = file.path(local, 'skeleton-modern.Rmd'),
output_file = file.path(local, paste0('modern', glue::glue("{.x}.pdf"))),
params = list(Collection_number = {.x})
)
)
Collection_number
local <- file.path('~', 'Documents', 'assoRted', 'Barneby_Lives_dev', 'LabelStyles')
record <- collection_examples |>
sf::st_drop_geometry() |>
data.frame() |>
mutate(
Coordinate_Uncertainty = '+/- 5m'
) |>
dplyr::filter(Collection_number == params$Collection_number)
rm(parms)
rm(params)
purrr::walk(
.x = l.nevadense$Collection_number,
~ rmarkdown::render(
input = file.path(local, 'skeleton-modern.Rmd'),
output_file = file.path(local, paste0('modern', glue::glue("{.x}.pdf"))),
params = list(Collection_number = {.x})
)
)
purrr::walk(
.x = l.nevadense$Collection_number,
~ rmarkdown::render(
input = file.path(local, 'skeleton-research.Rmd'),
output_file = file.path(local, paste0('research', glue::glue("{.x}.pdf"))),
params = list(Collection_number = {.x})
)
)
record <- read.csv(file.path(local, 'SoS-ExampleCollection.csv')) |>
dplyr::filter(Collection_number == params$Collection_number)
record <- read.csv(file.path(local, 'SoS-ExampleCollection.csv')) |>
dplyr::filter(Collection_number == params$Collection_number)
purrr::walk(
.x = l.nevadense$Collection_number,
~ rmarkdown::render(
input = file.path(local, 'skeleton-modern.Rmd'),
output_file = file.path(local, paste0('modern', glue::glue("{.x}.pdf"))),
params = list(Collection_number = {.x})
)
)
purrr::walk(
.x = l.nevadense$Collection_number,
~ rmarkdown::render(
input = file.path(local, 'skeleton-modern.Rmd'),
output_file = file.path(local, paste0('modern', glue::glue("{.x}.pdf"))),
params = list(Collection_number = {.x})
)
)
l.nevadense <- collection_examples |>
filter(Collection_number == 2823) |>
mutate(
Project_name = 'Research Notes',
Coordinate_uncertainty = '+/- 5m',
Research_notes = 'Permit No.: XXXXX from Agency ZYX, Date: XX.XX.2025. Collected under NSF XXXXX, "catchy project name". DNA extracted from silica gel dried leaf tissue (additional material in ZYX biorepository) accession No.: XXXXX. Sequences available on NCBI SRA as PRJXYZYXYXY.'
)
write.csv(l.nevadense, file.path(local, 'SoS-ExampleCollection.csv'), row.names = F)
p2lib <- file.path(
system.file(package = 'BarnebyLives'),
'rmarkdown', 'templates', 'labels', 'skeleton'
)
purrr::walk(
.x = l.nevadense$Collection_number,
~ rmarkdown::render(
input = file.path(local, 'skeleton-research.Rmd'),
output_file = file.path(local, paste0('research', glue::glue("{.x}.pdf"))),
params = list(Collection_number = {.x})
)
)
purrr::walk(
.x = l.nevadense$Collection_number,
~ rmarkdown::render(
input = file.path(local, 'skeleton-modern.Rmd'),
output_file = file.path(local, paste0('modern', glue::glue("{.x}.pdf"))),
params = list(Collection_number = {.x})
)
)
l.nevadense <- l.nevadense |>
mutate(
Project_name = 'Modern'
)
write.csv(l.nevadense, file.path(local, 'SoS-ExampleCollection.csv'), row.names = F)
purrr::walk(
.x = l.nevadense$Collection_number,
~ rmarkdown::render(
input = file.path(local, 'skeleton-modern.Rmd'),
output_file = file.path(local, paste0('modern', glue::glue("{.x}.pdf"))),
params = list(Collection_number = {.x})
)
)
l.nevadense <- l.nevadense |>
mutate( Project_name = 'Modern' )
write.csv(l.nevadense, file.path(local, 'SoS-ExampleCollection.csv'), row.names = F)
purrr::walk(
.x = l.nevadense$Collection_number,
~ rmarkdown::render(
input = file.path(local, 'skeleton-modern.Rmd'),
output_file = file.path(local, paste0('modern', glue::glue("{.x}.pdf"))),
params = list(Collection_number = {.x})
)
)
![*Modern Label*](../man/figures/modern2823.png)
unique(database_templates$Database) # currently supported options.
system.file
p2libs <- system.file(package = 'BarnebyLives')
print(p2lbs)
print(p2lubs)
print(p2libs)
200 * 0.8
160*0.2
200 * 1.2
200 /1.2
dessert=10
cocktails=35
dessert=15
cocktails=40
tip=35
total=200
total - dessert - cocktials - tip
total - dessert - cocktials - tip
total - dessert - cocktails - tip
app=25
total - dessert - cocktails - tip - app
total - dessert - cocktails - tip - app
collection_examples
data('collection_examples')
# remotes::install_github('sagesteppe/BarnebyLives')
# OR devtools::install_github('sagesteppe/BarnebyLives')
library(BarnebyLives)
library(purrr)
library(dplyr)
library(glue)
data('collection_examples')
force(collection_examples)
View(collection_examples)
bl_dir
library(usethis)
library(googlesheets4)
# read in data from the sheet to process
collection_examples <- read_sheet(
'1iOQBNeGqRJ3yhA-Sujas3xZ2Aw5rFkktUKv3N_e4o8M', sheet = 'Data Entry - Examples')
# read in data from the sheet to process
collection_examples <- read_sheet(
'1iOQBNeGqRJ3yhA-Sujas3xZ2Aw5rFkktUKv3N_e4o8M', sheet = 'Data Entry - Examples')
1
# read in data from the sheet to process
collection_examples <- read_sheet(
'1iOQBNeGqRJ3yhA-Sujas3xZ2Aw5rFkktUKv3N_e4o8M', sheet = 'Data Entry - Examples')
library(usethis)
library(googlesheets4)
# read in data from the sheet to process
collection_examples <- read_sheet(
'1iOQBNeGqRJ3yhA-Sujas3xZ2Aw5rFkktUKv3N_e4o8M', sheet = 'Data Entry - Examples')
# read in data from the sheet to process
collection_examples <- read_sheet(
'1iOQBNeGqRJ3yhA-Sujas3xZ2Aw5rFkktUKv3N_e4o8M', sheet = 'Data Entry - Examples')
library(usethis)
library(googlesheets4)
# read in data from the sheet to process
collection_examples <- read_sheet(
'1iOQBNeGqRJ3yhA-Sujas3xZ2Aw5rFkktUKv3N_e4o8M', sheet = 'Data Entry - Examples')
library(usethis)
library(googlesheets4)
# read in data from the sheet to process
collection_examples <- read_sheet(
'1iOQBNeGqRJ3yhA-Sujas3xZ2Aw5rFkktUKv3N_e4o8M', sheet = 'Data Entry - Examples')
usethis::use_data(collection_examples, overwrite = TRUE)
#setwd('/media/steppe/hdd/BarnebyLives/data-raw')
setwd('~/Documents/assoRted/BarnebyLives/data-raw')
# read in data from the sheet to process
collection_examples <- read_sheet(
'1iOQBNeGqRJ3yhA-Sujas3xZ2Aw5rFkktUKv3N_e4o8M', sheet = 'Data Entry - Examples')
usethis::use_data(collection_examples, overwrite = TRUE)
View(collection_examples)
library(usethis)
library(googlesheets4)
googledrive::drive_auth("reedbenkendorf27@gmail.com")
uncleaned_collection_examples <- read_sheet(
'1iOQBNeGqRJ3yhA-Sujas3xZ2Aw5rFkktUKv3N_e4o8M', sheet = 'Data Entry - Examples')
usethis::use_data(uncleaned_collection_examples, overwrite = TRUE)
