)
)
)
purrr::walk(
.x = l.nevadense$Collection_number,
~ rmarkdown::render(
input = file.path(local, 'skeleton-maps.Rmd'),
output_file = file.path(local, paste0('map', glue::glue("{.x}.pdf"))),
params = list(
Collection_number = .x,
imagepath = file.path(local, 'maps')
)
)
)
purrr::walk(
.x = l.nevadense$Collection_number,
~ rmarkdown::render(
input = file.path(local, 'skeleton-maps.Rmd'),
output_file = file.path(local, paste0('map', glue::glue("{.x}.pdf"))),
params = list(
Collection_number = .x,
imagepath = file.path(local, 'maps')
)
)
)
purrr::walk(
.x = l.nevadense$Collection_number,
~ rmarkdown::render(
input = file.path(local, 'skeleton-maps.Rmd'),
output_file = file.path(local, paste0('map', glue::glue("{.x}.pdf"))),
params = list(
Collection_number = .x,
imagepath = file.path(local, 'maps')
)
)
)
purrr::walk(
.x = l.nevadense$Collection_number,
~ rmarkdown::render(
input = file.path(local, 'skeleton-maps.Rmd'),
output_file = file.path(local, paste0('map', glue::glue("{.x}.pdf"))),
params = list(
Collection_number = .x,
imagepath = file.path(local, 'maps')
)
)
)
purrr::walk(
.x = l.nevadense$Collection_number,
~ rmarkdown::render(
input = file.path(local, 'skeleton-maps.Rmd'),
output_file = file.path(local, paste0('map', glue::glue("{.x}.pdf"))),
params = list(
Collection_number = .x,
imagepath = file.path(local, 'maps')
)
)
)
purrr::walk(
.x = l.nevadense$Collection_number,
~ rmarkdown::render(
input = file.path(local, 'skeleton-maps.Rmd'),
output_file = file.path(local, paste0('map', glue::glue("{.x}.pdf"))),
params = list(
Collection_number = .x,
imagepath = file.path(local, 'maps')
)
)
)
purrr::walk(
.x = l.nevadense$Collection_number,
~ rmarkdown::render(
input = file.path(local, 'skeleton-maps.Rmd'),
output_file = file.path(local, paste0('map', glue::glue("{.x}.pdf"))),
params = list(
Collection_number = .x,
imagepath = file.path(local, 'maps')
)
)
)
purrr::walk(
.x = l.nevadense$Collection_number,
~ rmarkdown::render(
input = file.path(local, 'skeleton-maps.Rmd'),
output_file = file.path(local, paste0('map', glue::glue("{.x}.pdf"))),
params = list(
Collection_number = .x,
imagepath = file.path(local, 'maps')
)
)
)
purrr::walk(
.x = l.nevadense$Collection_number,
~ rmarkdown::render(
input = file.path(local, 'skeleton-maps.Rmd'),
output_file = file.path(local, paste0('map', glue::glue("{.x}.pdf"))),
params = list(
Collection_number = .x,
imagepath = file.path(local, 'maps')
)
)
)
# devtools::install_github('sagesteppe/BarnebyLives')
library(tidyverse)
library(BarnebyLives)
uncleaned_collection_examples
knitr::opts_chunk$set(eval = FALSE)
# devtools::install_github('sagesteppe/BarnebyLives')
library(tidyverse)
library(BarnebyLives)
# install.packages('googlesheets4')
library(googlesheets4)
df <- uncleaned_collection_examples
data <- date_parser(df, coll_date = 'Date_digital', det_date = 'Determined_date')
dplyr::select(data, starts_with('Date')) %>%
utils::head()
data <- dms2dd(data, dms = F)
remotes::install_github('sagesteppe/BarnebyLives')
library(BarnebyLives)
data <- dms2dd(data, dms = F)
?TaxUNpack
?TaxUnpack
??TaxUnpack
This label without directions looks better!
data$physical_environ
we need
?associates_writer
??associates_writer
collection_writer
??collection_writer
library(BarnebyLives)
collection_writer
#' format collector info and codes
#'
#' Format these data to have commas or periods as appropriate
#' @param x dataframe holding the values
#' @examples
#' data('collection_examples')
#' ce <- collection_examples[14,]
#' collection_writer(ce)
#' @export
collection_writer <- function(x, date = TRUE) {
data('collection_examples')
#' format collector info and codes
#'
#' Format these data to have commas or periods as appropriate
#' @param x dataframe holding the values
#' @examples
#' data('collection_examples')
#' ce <- collection_examples[14,]
#' collection_writer(ce)
#' @export
collection_writer <- function(x, date = TRUE) {
x[["Associated_Collectors"]] <- replace(
x[["Associated_Collectors"]],
x[["Associated_Collectors"]] == "",
NA
)
primary_info <-
paste0(
x[['Primary_Collector']],
" ",
x[['Collection_number']]
)
if(date){
if (is.na(x[['Associated_Collectors']])) {
paste0(
primary_info
'; ',
#' format collector info and codes
#'
#' Format these data to have commas or periods as appropriate
#' @param x dataframe holding the values
#' @examples
#' data('collection_examples')
#' ce <- collection_examples[14,]
#' collection_writer(ce)
#' @export
collection_writer <- function(x, date = TRUE) {
x[["Associated_Collectors"]] <- replace(
x[["Associated_Collectors"]],
x[["Associated_Collectors"]] == "",
NA
)
primary_info <-
paste0(
x[['Primary_Collector']],
" ",
x[['Collection_number']]
)
if(date){
if (is.na(x[['Associated_Collectors']])) {
paste0(
primary_info
'; ',
#' format collector info and codes
#'
#' Format these data to have commas or periods as appropriate
#' @param x dataframe holding the values
#' @examples
#' data('collection_examples')
#' ce <- collection_examples[14,]
#' collection_writer(ce)
#' @export
collection_writer <- function(x, date = TRUE) {
x[["Associated_Collectors"]] <- replace(
x[["Associated_Collectors"]],
x[["Associated_Collectors"]] == "",
NA
)
primary_info <-
paste0(
x[['Primary_Collector']],
" ",
x[['Collection_number']]
)
if(date){
if (is.na(x[['Associated_Collectors']])) {
paste0(
primary_info
'; ',
#' format collector info and codes
#'
#' Format these data to have commas or periods as appropriate
#' @param x dataframe holding the values
#' @examples
#' data('collection_examples')
#' ce <- collection_examples[14,]
#' collection_writer(ce)
#' @export
collection_writer <- function(x, date = TRUE) {
x[["Associated_Collectors"]] <- replace(
x[["Associated_Collectors"]],
x[["Associated_Collectors"]] == "",
NA
)
primary_info <-
paste0(
x[['Primary_Collector']],
" ",
x[['Collection_number']]
)
if(date){
if (is.na(x[['Associated_Collectors']])) {
paste0(
primary_info,
'; ',
x[['Date_digital_text']]
)
} else {
paste0(
primary_info,
', ',
x$Associated_Collectors,
'; ',
x[['Date_digital_text']]
)
}
} else {
if (is.na(x[['Associated_Collectors']])) {
primary_info
} else {
paste0(
primary_info
', ',
#' format collector info and codes
#'
#' Format these data to have commas or periods as appropriate
#' @param x dataframe holding the values
#' @examples
#' data('collection_examples')
#' ce <- collection_examples[14,]
#' collection_writer(ce)
#' @export
collection_writer <- function(x, date = TRUE) {
x[["Associated_Collectors"]] <- replace(
x[["Associated_Collectors"]],
x[["Associated_Collectors"]] == "",
NA
)
primary_info <-
paste0(
x[['Primary_Collector']],
" ",
x[['Collection_number']]
)
if(date){
if (is.na(x[['Associated_Collectors']])) {
paste0(
primary_info,
'; ',
x[['Date_digital_text']]
)
} else {
paste0(
primary_info,
', ',
x$Associated_Collectors,
'; ',
x[['Date_digital_text']]
)
}
} else {
if (is.na(x[['Associated_Collectors']])) {
primary_info
} else {
paste0(
primary_info,
', ',
x[['Associated_Collectors']]
)
}
}
}
data('collection_examples')
ce <- collection_examples[14,]
collection_writer(ce)
View(collection_examples)
ce
collection_writer(ce)
ce[['Associated_collectors']]
ce[['Associated_Collectors']]
ce[['Associated_Collectors']]
ce$Associated_Collectors
#' format collector info and codes
#'
#' Format these data to have commas or periods as appropriate
#' @param x dataframe holding the values
#' @examples
#' data('collection_examples')
#' ce <- collection_examples[14,]
#' collection_writer(ce)
#' @export
collection_writer <- function(x, date = TRUE) {
x[["Associated_Collectors"]] <- replace(
x[["Associated_Collectors"]],
x[["Associated_Collectors"]] == "",
NA
)
primary_info <-
paste0(
x[['Primary_Collector']],
" ",
x[['Collection_number']]
)
collectors_info <- if (anyNA(x[["Associated_Collectors"]])) {
""
} else {
paste0(", ", x[["Associated_Collectors"]])
}
date_info <- if (date) {
paste0("; ", x[["Date_digital_text"]])
} else {
""
}
paste0(primary_info, collectors_info, date_info)
}
collection_writer(ce)
ce$Associated_Collectors
ce[['Associated_Collectors']]
collection_writer(ce)
#' format collector info and codes
#'
#' Format these data to have commas or periods as appropriate
#' @param x dataframe holding the values
#' @examples
#' data('collection_examples')
#' ce <- collection_examples[14,]
#' collection_writer(ce)
#' @export
collection_writer <- function(x, date = TRUE) {
x[["Associated_Collectors"]] <- replace(
x[["Associated_Collectors"]],
x[["Associated_Collectors"]] == "",
NA
)
primary_info <-
paste0(
x[['Primary_Collector']],
" ",
x[['Collection_number']]
)
collectors_info <- if (anyNA(x[["Associated_Collectors"]])) {
""
} else {
paste0(", ", x[["Associated_Collectors"]])
}
date_info <- if (date) {
paste0("; ", x[["Date_digital_text"]])
} else {
""
}
paste0(primary_info, collectors_info, date_info)
}
collection_writer(ce)
#' format collector info and codes
#'
#' Format these data to have commas or periods as appropriate
#' @param x dataframe holding the values
#' @examples
#' data('collection_examples')
#' ce <- collection_examples[14,]
#' collection_writer(ce)
#' @export
collection_writer <- function(x, date = TRUE) {
x[["Associated_Collectors"]] <- replace(
x[["Associated_Collectors"]],
x[["Associated_Collectors"]] == "",
NA
)
primary_info <-
paste0(
x[['Primary_Collector']],
" ",
x[['Collection_number']]
)
collectors_info <- if (anyNA(x[["Associated_Collectors"]])) {
""
} else {
paste0(", ", x[["Associated_Collectors"]])
}
date_info <- if (date) {
paste0("; ", x[["Date_digital_text"]])
} else {
""
}
paste0(primary_info, collectors_info, date_info)
}
collection_writer(ce)
collectors_info
date_info
collection_writer(ce)
select(ce, Primary_Collector, Collection_number, Associated_Collectors, Date_digital_text)
dplyr::select(ce, Primary_Collector, Collection_number, Associated_Collectors, Date_digital_text)
View(ce)
collection_writer(ce)
ce[['Associated_Collectors']]
ce[['Associated_Collectors']]
date2text(ce)
View(ce)
colnames(ce)
library(usethis)
library(googlesheets4)
#setwd('/media/steppe/hdd/BarnebyLives/data-raw')
setwd('~/Documents/assoRted/BarnebyLives/data-raw')
googledrive::drive_auth("reedbenkendorf27@gmail.com")
# read in data from the sheet to process
collection_examples <- read_sheet(
'1iOQBNeGqRJ3yhA-Sujas3xZ2Aw5rFkktUKv3N_e4o8M', sheet = 'Processed - Examples') |>
tidyr::drop_na(Full_name)
View(collection_examples)
colnames(ce)
ce
ce <- collection_examples[12,]
collection_writer(ce)
colnames(ce)
dplyr::select(ce, Primary_Collector,
Collection_number, Associated_Collectors, Date_digital_text)
date2text(ce, )
collection_writer(ce)
# read in data from the sheet to process
collection_examples <- read_sheet(
'1iOQBNeGqRJ3yhA-Sujas3xZ2Aw5rFkktUKv3N_e4o8M', sheet = 'Processed - Examples') |>
tidyr::drop_na(Full_name) |>
dplyr::filter(collection_number != 2832)
# read in data from the sheet to process
collection_examples <- read_sheet(
'1iOQBNeGqRJ3yhA-Sujas3xZ2Aw5rFkktUKv3N_e4o8M', sheet = 'Processed - Examples') |>
tidyr::drop_na(Full_name) |>
dplyr::filter(Collection_number != 2832)
usethis::use_data(collection_examples, overwrite = TRUE)
#' format collector info and codes
#'
#' Format these data to have commas or periods as appropriate
#' @param x dataframe holding the values
#' @examples
#' data('collection_examples')
#' ce <- collection_examples[12,]
#' collection_writer(ce)
#' @export
collection_writer <- function(x, date = TRUE) {
x[["Associated_Collectors"]] <- replace(
x[["Associated_Collectors"]],
x[["Associated_Collectors"]] == "",
NA
)
primary_info <-
paste0(
x[['Primary_Collector']],
" ",
x[['Collection_number']]
)
collectors_info <- if (anyNA(x[["Associated_Collectors"]])) {
""
} else {
paste0(", ", x[["Associated_Collectors"]])
}
date_info <- if (date) {
paste0("; ", x[["Date_digital_text"]])
} else {
""
}
paste0(primary_info, collectors_info, date_info)
}
colnames(ce)
dplyr::select(ce, Primary_Collector,
Collection_number, Associated_Collectors, Date_digital_text)
collection_writer(ce)
collection_writer(ce, date = FALSE)
View(collection_examples)
collection_examples[106,]
collection_writer( collection_examples[106,] )
