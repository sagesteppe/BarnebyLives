} else {
paste0(paste0(data$Primary_Collector, data$Collection_number, ',',
data$Associated_Collectors, ',', data$Date_digital_text, '.')
}
#' format collector info and codes
#'
#' Format these data to have commas or periods as appropriate
#' @param x dataframe holding the values
#' @export
collection_writer <- function(x){
x$Associated_Collectors[x$Associated_Collectors==""] <- NA
if (is.na(x$Associated_Collectors)){
paste0(data$Primary_Collector, data$Collection_number, ',', data$Date_digital_text, '.')
} else {
paste0(data$Primary_Collector, data$Collection_number, ',',
data$Associated_Collectors, ',', data$Date_digital_text, '.')
}
}
devtools::install_github('sagesteppe/BarnebyLives')
#' do or don't write determination information
#'
#' This functions determines whether to write information on whom determined the specimen
#' when, and via which texts. It used as a final step when formatting labels.
#' @param x dataframe holding the values
#' @examples
#' phacelia <- collection_examples[31,]
#' writer_fide(phacelia)
#' @export
writer_fide <- function(x){
x$Fide[x$Fide==""] <- NA
if (is.na(x$Fide)){""} else {
paste0('Fide: *',
sub(' Flora ', ' Fl. ', x$Fide),
'*, by: ', x$Determined_by, ' on ', x$Determined_date_text, '.')}
}
devtools::install_github('sagesteppe/BarnebyLives')
# devtools::install_github('sagesteppe/BarnebyLives')
library(BarnebyLives)
data('collection_examples')
p <- '~/Documents/HerbariumLabels/raw'
p2libs <- .libPaths()[
grepl(paste0(version$major, '.', sub('\\..*', "", version$minor)),
.libPaths())]
folds <- c('BarnebyLives/rmarkdown/templates/labels/skeleton/skeleton.Rmd')
purrr::walk(
.x = collection_examples$Collection_number,
~ rmarkdown::render(
input = file.path( p2libs, folds),
output_file = file.path(p, glue::glue("{.x}.pdf")),
params = list(Collection_number = {.x})
)
)
View(collection_examples)
devtools::install_github('sagesteppe/BarnebyLives')
# devtools::install_github('sagesteppe/BarnebyLives')
library(BarnebyLives)
data('collection_examples')
p <- '~/Documents/HerbariumLabels/raw'
p2libs <- .libPaths()[
grepl(paste0(version$major, '.', sub('\\..*', "", version$minor)),
.libPaths())]
folds <- c('BarnebyLives/rmarkdown/templates/labels/skeleton/skeleton.Rmd')
purrr::walk(
.x = collection_examples$Collection_number,
~ rmarkdown::render(
input = file.path( p2libs, folds),
output_file = file.path(p, glue::glue("{.x}.pdf")),
params = list(Collection_number = {.x})
)
)
View(collection_examples)
data('collection_examples')[c(1:3, 60:63)]
data('collection_examples')[c(1:3, 60:63),]
data('collection_examples')[,c(1:3, 60:63)]
ce <- ce[,c(1:3, 60:63)]
ce <- data('collection_examples')
ce <- ce[,c(1:3, 60:63)]
ce <- ce[,1:3]
ce <- data('collection_examples')
ce <- collection_examples[,1:3]
ce <- collection_examples[c(1:3, 60:63),]
View(ce)
ce <- collection_examples[c(1:3, 63, 89),]
ce <- collection_examples[c(1:3, 14:16, 89),]
View(ce)
ce <- collection_examples[c(1:3, 14:16, 89:90),]
View(ce)
collection_writer(ce)
ce <- collection_examples[14]
collection_writer(ce)
ce <- collection_examples[,14]
ce <- collection_examples[,14]
#' format collector info and codes
#'
#' Format these data to have commas or periods as appropriate
#' @param x dataframe holding the values
#' @example
#' data('collection_examples')
#' ce <- collection_examples[,14]
#' @export
collection_writer <- function(x){
x$Associated_Collectors[x$Associated_Collectors==""] <- NA
if (is.na(x$Associated_Collectors)){
paste0(x$Primary_Collector, x$Collection_number, ',', x$Date_digital_text, '.')
} else {
paste0(x$Primary_Collector, x$Collection_number, ',',
x$Associated_Collectors, ',', x$Date_digital_text, '.')
}
}
collection_writer(ce)
View(ce)
ce <- collection_examples[14,]
collection_writer(ce)
#' format collector info and codes
#'
#' Format these data to have commas or periods as appropriate
#' @param x dataframe holding the values
#' @example
#' data('collection_examples')
#' ce <- collection_examples[14,]
#' @export
collection_writer <- function(x){
x$Associated_Collectors[x$Associated_Collectors==""] <- NA
if (is.na(x$Associated_Collectors)){
paste0(x$Primary_Collector, x$Collection_number, ', ', x$Date_digital_text, '.')
} else {
paste0(x$Primary_Collector, x$Collection_number, ', ',
x$Associated_Collectors, ', ', x$Date_digital_text, '.')
}
}
collection_writer(ce)
#' format collector info and codes
#'
#' Format these data to have commas or periods as appropriate
#' @param x dataframe holding the values
#' @example
#' data('collection_examples')
#' ce <- collection_examples[14,]
#' @export
collection_writer <- function(x){
x$Associated_Collectors[x$Associated_Collectors==""] <- NA
if (is.na(x$Associated_Collectors)){
paste0(x$Primary_Collector, " ", x$Collection_number, ', ', x$Date_digital_text, '.')
} else {
paste0(x$Primary_Collector, x$Collection_number, ', ',
x$Associated_Collectors, ', ', x$Date_digital_text, '.')
}
}
collection_writer(ce)
#' format collector info and codes
#'
#' Format these data to have commas or periods as appropriate
#' @param x dataframe holding the values
#' @example
#' data('collection_examples')
#' ce <- collection_examples[14,]
#' @export
collection_writer <- function(x){
x$Associated_Collectors[x$Associated_Collectors==""] <- NA
if (is.na(x$Associated_Collectors)){
paste0(x$Primary_Collector, " ", x$Collection_number, ', ', x$Date_digital_text, '.')
} else {
paste0(x$Primary_Collector, x$Collection_number, ', ',
x$Associated_Collectors, ', ', x$Date_digital_text, '.')
}
}
collection_writer(ce)
#' format collector info and codes
#'
#' Format these data to have commas or periods as appropriate
#' @param x dataframe holding the values
#' @example
#' data('collection_examples')
#' ce <- collection_examples[14,]
#' @export
collection_writer <- function(x){
x$Associated_Collectors[x$Associated_Collectors==""] <- NA
if (is.na(x$Associated_Collectors)){
paste0(x$Primary_Collector, " ", x$Collection_number, ', ', x$Date_digital_text, '.')
} else {
paste0(x$Primary_Collector, " ",  x$Collection_number, ', ',
x$Associated_Collectors, ', ', x$Date_digital_text, '.')
}
}
collection_writer(ce)
#' format collector info and codes
#'
#' Format these data to have commas or periods as appropriate
#' @param x dataframe holding the values
#' @example
#' data('collection_examples')
#' ce <- collection_examples[14,]
#' @export
collection_writer <- function(x){
x$Associated_Collectors[x$Associated_Collectors==""] <- NA
if (is.na(x$Associated_Collectors)){
paste0(x$Primary_Collector, " ", x$Collection_number, '; ', x$Date_digital_text, '.')
} else {
paste0(x$Primary_Collector, " ",  x$Collection_number, ', ',
x$Associated_Collectors, '; ', x$Date_digital_text, '.')
}
}
collection_writer(ce)
purrr::walk(
.x = collection_examples$Collection_number,
~ rmarkdown::render(
input = file.path( p2libs, folds),
output_file = file.path(p, glue::glue("{.x}.pdf")),
params = list(Collection_number = {.x})
)
)
setwd('/media/steppe/hdd/BarnebyLives/data-raw')
googledrive::drive_auth("reedbenkendorf27@gmail.com")
# read in data from the sheet to process
collection_examples <- read_sheet('1iOQBNeGqRJ3yhA-Sujas3xZ2Aw5rFkktUKv3N_e4o8M',
sheet = 'Processed - Examples')
library(usethis)
library(googlesheets4)
# read in data from the sheet to process
collection_examples <- read_sheet('1iOQBNeGqRJ3yhA-Sujas3xZ2Aw5rFkktUKv3N_e4o8M',
sheet = 'Processed - Examples')
usethis::use_data(collection_examples, overwrite = TRUE)
View(collection_examples)
# devtools::install_github('sagesteppe/BarnebyLives')
library(tidyverse)
library(BarnebyLives)
library(googlesheets4)
googledrive::drive_auth("reedbenkendorf27@gmail.com")
# read in data from the sheet to process
df <- read_sheet('1iOQBNeGqRJ3yhA-Sujas3xZ2Aw5rFkktUKv3N_e4o8M',
sheet = 'Data Entry - Examples') %>%
mutate(UNIQUEID = paste0(Primary_Collector, Collection_number))
library(googlesheets4)
googledrive::drive_auth("reedbenkendorf27@gmail.com")
# read in data from the sheet to process
df <- read_sheet('1iOQBNeGqRJ3yhA-Sujas3xZ2Aw5rFkktUKv3N_e4o8M',
sheet = 'Data Entry - Examples') %>%
mutate(UNIQUEID = paste0(Primary_Collector, Collection_number))
# determine whether these data have already been processed by the script, using
# a unique combination of collection name and collection code.
processed <- read_sheet('1iOQBNeGqRJ3yhA-Sujas3xZ2Aw5rFkktUKv3N_e4o8M',
sheet = 'Processed - Examples') %>%
select(Collection_number, Primary_Collector) %>%
mutate(UNIQUEID = paste0(Primary_Collector, Collection_number))
input <- filter(df, ! UNIQUEID %in% processed$UNIQUEID ) %>%
select(-UNIQUEID)
rm(processed, df)
View(input)
data <- date_parser(input, coll_date = 'Date_digital', det_date = 'Determined_date')
dplyr::select(data, starts_with('Date')) %>%
utils::head()
data <- dms2dd(data, dms = F)
dplyr::select(data, starts_with(c('latitude', 'longitude'))) %>%
utils::head()
data <- coords2sf(data)
head(data) # now we can see that it is an sf object
p <- '/media/steppe/hdd/Barneby_Lives-dev/geodata'
data <- political_grabber(data, y = 'Collection_number', path = p)
data <- site_writer(data, path = p)
View(data)
data <- site_writer(data, path = p)
library(googlesheets4)
googledrive::drive_auth("reedbenkendorf27@gmail.com")
# read in data from the sheet to process
df <- read_sheet('1iOQBNeGqRJ3yhA-Sujas3xZ2Aw5rFkktUKv3N_e4o8M',
sheet = 'Data Entry - Examples') %>%
mutate(UNIQUEID = paste0(Primary_Collector, Collection_number))
# determine whether these data have already been processed by the script, using
# a unique combination of collection name and collection code.
processed <- read_sheet('1iOQBNeGqRJ3yhA-Sujas3xZ2Aw5rFkktUKv3N_e4o8M',
sheet = 'Processed - Examples') %>%
select(Collection_number, Primary_Collector) %>%
mutate(UNIQUEID = paste0(Primary_Collector, Collection_number))
input <- filter(df, ! UNIQUEID %in% processed$UNIQUEID ) %>%
select(-UNIQUEID)
rm(processed, df)
data <- date_parser(input, coll_date = 'Date_digital', det_date = 'Determined_date')
dplyr::select(data, starts_with('Date')) %>%
utils::head()
data <- dms2dd(data, dms = F)
dplyr::select(data, starts_with(c('latitude', 'longitude'))) %>%
utils::head()
data <- coords2sf(data)
head(data) # now we can see that it is an sf object
p <- '/media/steppe/hdd/Barneby_Lives-dev/geodata'
data <- political_grabber(data, y = 'Collection_number', path = p)
data <- site_writer(data, path = p)
View(data)
library(googlesheets4)
googledrive::drive_auth("reedbenkendorf27@gmail.com")
# read in data from the sheet to process
df <- read_sheet('1iOQBNeGqRJ3yhA-Sujas3xZ2Aw5rFkktUKv3N_e4o8M',
sheet = 'Data Entry - Examples') %>%
mutate(UNIQUEID = paste0(Primary_Collector, Collection_number))
# determine whether these data have already been processed by the script, using
# a unique combination of collection name and collection code.
processed <- read_sheet('1iOQBNeGqRJ3yhA-Sujas3xZ2Aw5rFkktUKv3N_e4o8M',
sheet = 'Processed - Examples') %>%
select(Collection_number, Primary_Collector) %>%
mutate(UNIQUEID = paste0(Primary_Collector, Collection_number))
input <- filter(df, ! UNIQUEID %in% processed$UNIQUEID ) %>%
select(-UNIQUEID)
rm(processed, df)
data <- date_parser(input, coll_date = 'Date_digital', det_date = 'Determined_date')
dplyr::select(data, starts_with('Date')) %>%
utils::head()
data <- dms2dd(data, dms = F)
dplyr::select(data, starts_with(c('latitude', 'longitude'))) %>%
utils::head()
data <- coords2sf(data)
head(data) # now we can see that it is an sf object
p <- '/media/steppe/hdd/Barneby_Lives-dev/geodata'
data <- political_grabber(data, y = 'Collection_number', path = p)
data <- site_writer(data, path = p)
data <- physical_grabber(data, path = p)
p <- '/media/steppe/hdd/Barneby_Lives-dev/taxonomic_data'
data <- spell_check(data, path = p)
data <- author_check(data, path = p)
names <- sf::st_drop_geometry(data) %>%
pull(Full_name)
pow_res <- lapply(names,
powo_searcher) %>%
bind_rows()
data <- bind_cols(data, pow_res)
rm(names, pow_res)
SoS_gkey = Sys.getenv("Sos_gkey")
directions <- directions_grabber(data, api_key = SoS_gkey)
# first ensure the columns are in the same order as google sheets
#processed <- read_sheet('1iOQBNeGqRJ3yhA-Sujas3xZ2Aw5rFkktUKv3N_e4o8M',
#                        sheet = 'Processed - Examples') %>%
#  colnames()
df <- sf::st_drop_geometry(directions) #%>%
#  select(all_of(processed))
# we will add these data onto our final sheet.
sheet_append('1iOQBNeGqRJ3yhA-Sujas3xZ2Aw5rFkktUKv3N_e4o8M',
sheet = 'Processed - Examples', data = df)
# read in data from the sheet to process
collection_examples <- read_sheet('1iOQBNeGqRJ3yhA-Sujas3xZ2Aw5rFkktUKv3N_e4o8M',
sheet = 'Processed - Examples')
usethis::use_data(collection_examples, overwrite = TRUE)
devtools::install_github('sagesteppe/BarnebyLives')
library(BarnebyLives)
data('collection_examples')
p <- '~/Documents/HerbariumLabels/raw'
p2libs <- .libPaths()[
grepl(paste0(version$major, '.', sub('\\..*', "", version$minor)),
.libPaths())]
folds <- c('BarnebyLives/rmarkdown/templates/labels/skeleton/skeleton.Rmd')
purrr::walk(
.x = collection_examples$Collection_number,
~ rmarkdown::render(
input = file.path( p2libs, folds),
output_file = file.path(p, glue::glue("{.x}.pdf")),
params = list(Collection_number = {.x})
)
)
View(collection_examples)
collection_examples$Collection_number
data('collection_examples')
ce <- collection_examples[14,]
collection_writer(ce)
View(ce)
colnames(ce) == Primary_Collector''
colnames(ce) == 'Primary_Collector'
which ( colnames(ce) == 'Primary_Collector' )
which ( colnames(ce) == 'Collection_number' )
which ( colnames(ce) == 'Date_digital_text' )
which ( colnames(ce) == 'Primary_Collector' )
which ( colnames(ce) == 'Associated_Collectors' )
colnames(ce) == 'Associated_Collectors'
collection_writer(ce)
#' format collector info and codes
#'
#' Format these data to have commas or periods as appropriate
#' @param x dataframe holding the values
#' @example
#' data('collection_examples')
#' ce <- collection_examples[14,]
#' collection_writer(ce)
#' @export
collection_writer <- function(x){
x$Associated_Collectors[x$Associated_Collectors==""] <- NA
if (is.na(x$Associated_Collectors)){
paste0(x$Primary_Collector, " ", x$Collection_number, '; ', x$Date_digital_text)
}# else {
#  paste0(x$Primary_Collector, " ",  x$Collection_number, ', ',
#                x$Associated_Collectors, '; ', x$Date_digital_text)
#         }
}
collection_writer(ce)
#' format collector info and codes
#'
#' Format these data to have commas or periods as appropriate
#' @param x dataframe holding the values
#' @example
#' data('collection_examples')
#' ce <- collection_examples[14,]
#' collection_writer(ce)
#' @export
collection_writer <- function(x){
x$Associated_Collectors[x$Associated_Collectors==""] <- NA
if (is.na(x$Associated_Collectors)){
paste0(x$Primary_Collector, " ", x$Collection_number, '; ', x$Date_digital_text)
} else {
paste0(x$Primary_Collector, " ",  x$Collection_number, ', ',
x$Associated_Collectors, '; ', x$Date_digital_text)
}
}
which ( colnames(ce) == 'Associated_Collectors' )
collection_writer(ce)
#' format collector info and codes
#'
#' Format these data to have commas or periods as appropriate
#' @param x dataframe holding the values
#' @example
#' data('collection_examples')
#' ce <- collection_examples[14,]
#' collection_writer(ce)
#' @export
collection_writer <- function(x){
x$Associated_Collectors[x$Associated_Collectors==""] <- NA
if (is.na(x$Associated_Collectors)){
paste0(x$Primary_Collector, " ", x$Collection_number, '; ', x$Date_digital_text)
} else {
paste0(x$Primary_Collector, " ",  x$Collection_number, ', ',
x$Associated_Collectors, '; ', x$Date_digital_text)
}
}
#' format collector info and codes
#'
#' Format these data to have commas or periods as appropriate
#' @param x dataframe holding the values
#' @example
#' data('collection_examples')
#' ce <- collection_examples[14,]
#' collection_writer(ce)
#' @export
collection_writer <- function(x){
x$Associated_Collectors[x$Associated_Collectors==""] <- NA
if (is.na(x$Associated_Collectors)){
paste0(x$Primary_Collector, " ", x$Collection_number, '; ', x$Date_digital_text)
} else {
paste0(x$Primary_Collector, " ",  x$Collection_number, ', ',
x$Associated_Collectors, '; ', x$Date_digital_text)
}
}
collection_writer(ce)
purrr::walk(
.x = collection_examples$Collection_number,
~ rmarkdown::render(
input = file.path( p2libs, folds),
output_file = file.path(p, glue::glue("{.x}.pdf")),
params = list(Collection_number = {.x})
)
)
googledrive::drive_auth("reedbenkendorf27@gmail.com")
# read in data from the sheet to process
collection_examples <- read_sheet('1iOQBNeGqRJ3yhA-Sujas3xZ2Aw5rFkktUKv3N_e4o8M',
sheet = 'Processed - Examples')
usethis::use_data(collection_examples, overwrite = TRUE)
devtools::install_github('sagesteppe/BarnebyLives')
library(BarnebyLives)
p <- '~/Documents/HerbariumLabels/raw'
p2libs <- .libPaths()[
grepl(paste0(version$major, '.', sub('\\..*', "", version$minor)),
.libPaths())]
folds <- c('BarnebyLives/rmarkdown/templates/labels/skeleton/skeleton.Rmd')
purrr::walk(
.x = collection_examples$Collection_number,
~ rmarkdown::render(
input = file.path( p2libs, folds),
output_file = file.path(p, glue::glue("{.x}.pdf")),
params = list(Collection_number = {.x})
)
)
devtools::install_github('sagesteppe/BarnebyLives')
# devtools::install_github('sagesteppe/BarnebyLives')
library(BarnebyLives)
data('collection_examples')
p <- '~/Documents/HerbariumLabels/raw'
p2libs <- .libPaths()[
grepl(paste0(version$major, '.', sub('\\..*', "", version$minor)),
.libPaths())]
folds <- c('BarnebyLives/rmarkdown/templates/labels/skeleton/skeleton.Rmd')
purrr::walk(
.x = collection_examples$Collection_number,
~ rmarkdown::render(
input = file.path( p2libs, folds),
output_file = file.path(p, glue::glue("{.x}.pdf")),
params = list(Collection_number = {.x})
)
)
View(collection_examples)
devtools::install_github('sagesteppe/BarnebyLives')
# devtools::install_github('sagesteppe/BarnebyLives')
library(BarnebyLives)
data('collection_examples')
View(collection_examples)
# read in data from the sheet to process
collection_examples <- read_sheet('1iOQBNeGqRJ3yhA-Sujas3xZ2Aw5rFkktUKv3N_e4o8M',
sheet = 'Processed - Examples')
View(collection_examples)
usethis::use_data(collection_examples, overwrite = TRUE)
devtools::install_github('sagesteppe/BarnebyLives')
library(BarnebyLives)
data('collection_examples')
View(collection_examples)
# read in data from the sheet to process
collection_examples <- read_sheet('1iOQBNeGqRJ3yhA-Sujas3xZ2Aw5rFkktUKv3N_e4o8M',
sheet = 'Processed - Examples')
usethis::use_data(collection_examples, overwrite = TRUE)
View(collection_examples)
