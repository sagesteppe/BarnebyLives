ggsave(
width = 4, height = 5.5, units = 'in',
file.path('..', 'graphics', 'plots', 'Accuracy_post_process.png')
)
ggsave(
width = 4.5, height = 5.5, units = 'in',
file.path('..', 'graphics', 'plots', 'Accuracy_post_process.png')
)
ggsave(
width = 5, height = 7, units = 'in',
file.path('..', 'graphics', 'plots', 'Accuracy_post_process.png')
)
ggsave(
width = 6, height = 7, units = 'in',
file.path('..', 'graphics', 'plots', 'Accuracy_post_process.png')
)
ggsave(
width = 5.5, height = 7, units = 'in',
file.path('..', 'graphics', 'plots', 'Accuracy_post_process.png')
)
pmorph
View(pmorph)
group_by(pmorph, sample.id)
length(group_by(pmorph, sample.id))
group_by(pmorph, sample.id) |>
count()
group_by(pmorph, sample.id) |>
count() |>
mutate(sd(n))
sd(grains_counted
grains_counted
grains_counted
blah <- group_by(pmorph, sample.id) |>
count()
sd(blah$n))
sd(blah$n)
knitr::opts_chunk$set(eval = FALSE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
#devtools::install_github('sagesteppe/BarnebyLives')
library(BarnebyLives)
library(tidyverse)
local <- file.path(path.expand('~'), 'Documents', 'assoRted', 'Barneby_Lives_dev', 'LabelStyles')
l.nevadense <- collection_examples |>
filter(Collection_number == 2823) |>
mutate(
Project_name = 'Research Notes',
Coordinate_uncertainty = '+/- 5m',
Notes = 'Permit No.: XXXXX from Agency ZYX, Date: XX.XX.2025. Collected under NSF XXXXX, "catchy project name". DNA extracted from silica gel dried leaf tissue (additional material in ZYX biorepository) accession No.: XXXXX. Sequences available on NCBI SRA as PRJXYZYXYXY.'
)
write.csv(l.nevadense, file.path(local, 'SoS-ExampleCollection.csv'), row.names = F)
p2lib <- file.path(
system.file(package = 'BarnebyLives'),
'rmarkdown', 'templates', 'labels', 'skeleton'
)
purrr::walk(
.x = l.nevadense$Collection_number,
~ rmarkdown::render(
input = file.path(local, 'skeleton-modern.Rmd'),
output_file = file.path(local, paste0('modern', glue::glue("{.x}.pdf"))),
params = list(Collection_number = {.x})
)
)
l.nevadense <- collection_examples |>
filter(Collection_number == 2823) |>
mutate(
Project_name = 'Research Notes',
Coordinate_uncertainty = '+/- 5m',
Notes = 'Permit No.: XXXXX from Agency ZYX, Date: XX.XX.2025. Collected under NSF XXXXX, "catchy project name". DNA extracted from silica gel dried leaf tissue (additional material in ZYX biorepository) accession No.: XXXXX. Sequences available on NCBI SRA as PRJXYZYXYXY.'
)
write.csv(l.nevadense, file.path(local, 'SoS-ExampleCollection.csv'), row.names = F)
l.nevadense
purrr::walk(
.x = l.nevadense$Collection_number,
~ rmarkdown::render(
input = file.path(local, 'skeleton-modern.Rmd'),
output_file = file.path(local, paste0('modern', glue::glue("{.x}.pdf"))),
params = list(Collection_number = {.x})
)
)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(dpi = 300)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(warning = FALSE)
collection_examples
record <- collection_examples |>
sf::st_drop_geometry() |>
data.frame() |>
mutate(
Coordinate_Uncertainty = '+/- 5m')
purrr::walk(
.x = l.nevadense$Collection_number,
~ rmarkdown::render(
input = file.path(local, 'skeleton-modern.Rmd'),
output_file = file.path(local, paste0('modern', glue::glue("{.x}.pdf"))),
params = list(Collection_number = {.x})
)
)
record <- collection_examples |>
sf::st_drop_geometry() |>
data.frame() |>
mutate(
Coordinate_Uncertainty = '+/- 5m') |>
dplyr::filter(Collection_number == params$Collection_number)
record <- collection_examples |>
sf::st_drop_geometry() |>
data.frame() |>
mutate(
Coordinate_Uncertainty = '+/- 5m')# |>
View(record)
l.nevadense
l.nevadense$Collection_number
getwd()
purrr::walk(
.x = l.nevadense$Collection_number,
~ rmarkdown::render(
input = file.path(local, 'skeleton-modern.Rmd'),
output_file = file.path(local, paste0('modern', glue::glue("{.x}.pdf"))),
params = list(Collection_number = {.x})
)
)
Collection_number
local <- file.path('~', 'Documents', 'assoRted', 'Barneby_Lives_dev', 'LabelStyles')
record <- collection_examples |>
sf::st_drop_geometry() |>
data.frame() |>
mutate(
Coordinate_Uncertainty = '+/- 5m'
) |>
dplyr::filter(Collection_number == params$Collection_number)
rm(parms)
rm(params)
purrr::walk(
.x = l.nevadense$Collection_number,
~ rmarkdown::render(
input = file.path(local, 'skeleton-modern.Rmd'),
output_file = file.path(local, paste0('modern', glue::glue("{.x}.pdf"))),
params = list(Collection_number = {.x})
)
)
purrr::walk(
.x = l.nevadense$Collection_number,
~ rmarkdown::render(
input = file.path(local, 'skeleton-research.Rmd'),
output_file = file.path(local, paste0('research', glue::glue("{.x}.pdf"))),
params = list(Collection_number = {.x})
)
)
record <- read.csv(file.path(local, 'SoS-ExampleCollection.csv')) |>
dplyr::filter(Collection_number == params$Collection_number)
record <- read.csv(file.path(local, 'SoS-ExampleCollection.csv')) |>
dplyr::filter(Collection_number == params$Collection_number)
purrr::walk(
.x = l.nevadense$Collection_number,
~ rmarkdown::render(
input = file.path(local, 'skeleton-modern.Rmd'),
output_file = file.path(local, paste0('modern', glue::glue("{.x}.pdf"))),
params = list(Collection_number = {.x})
)
)
purrr::walk(
.x = l.nevadense$Collection_number,
~ rmarkdown::render(
input = file.path(local, 'skeleton-modern.Rmd'),
output_file = file.path(local, paste0('modern', glue::glue("{.x}.pdf"))),
params = list(Collection_number = {.x})
)
)
l.nevadense <- collection_examples |>
filter(Collection_number == 2823) |>
mutate(
Project_name = 'Research Notes',
Coordinate_uncertainty = '+/- 5m',
Research_notes = 'Permit No.: XXXXX from Agency ZYX, Date: XX.XX.2025. Collected under NSF XXXXX, "catchy project name". DNA extracted from silica gel dried leaf tissue (additional material in ZYX biorepository) accession No.: XXXXX. Sequences available on NCBI SRA as PRJXYZYXYXY.'
)
write.csv(l.nevadense, file.path(local, 'SoS-ExampleCollection.csv'), row.names = F)
p2lib <- file.path(
system.file(package = 'BarnebyLives'),
'rmarkdown', 'templates', 'labels', 'skeleton'
)
purrr::walk(
.x = l.nevadense$Collection_number,
~ rmarkdown::render(
input = file.path(local, 'skeleton-research.Rmd'),
output_file = file.path(local, paste0('research', glue::glue("{.x}.pdf"))),
params = list(Collection_number = {.x})
)
)
purrr::walk(
.x = l.nevadense$Collection_number,
~ rmarkdown::render(
input = file.path(local, 'skeleton-modern.Rmd'),
output_file = file.path(local, paste0('modern', glue::glue("{.x}.pdf"))),
params = list(Collection_number = {.x})
)
)
l.nevadense <- l.nevadense |>
mutate(
Project_name = 'Modern'
)
write.csv(l.nevadense, file.path(local, 'SoS-ExampleCollection.csv'), row.names = F)
purrr::walk(
.x = l.nevadense$Collection_number,
~ rmarkdown::render(
input = file.path(local, 'skeleton-modern.Rmd'),
output_file = file.path(local, paste0('modern', glue::glue("{.x}.pdf"))),
params = list(Collection_number = {.x})
)
)
l.nevadense <- l.nevadense |>
mutate( Project_name = 'Modern' )
write.csv(l.nevadense, file.path(local, 'SoS-ExampleCollection.csv'), row.names = F)
purrr::walk(
.x = l.nevadense$Collection_number,
~ rmarkdown::render(
input = file.path(local, 'skeleton-modern.Rmd'),
output_file = file.path(local, paste0('modern', glue::glue("{.x}.pdf"))),
params = list(Collection_number = {.x})
)
)
![*Modern Label*](../man/figures/modern2823.png)
unique(database_templates$Database) # currently supported options.
system.file
p2libs <- system.file(package = 'BarnebyLives')
print(p2lbs)
print(p2lubs)
print(p2libs)
200 * 0.8
160*0.2
200 * 1.2
200 /1.2
dessert=10
cocktails=35
dessert=15
cocktails=40
tip=35
total=200
total - dessert - cocktials - tip
total - dessert - cocktials - tip
total - dessert - cocktails - tip
app=25
total - dessert - cocktails - tip - app
total - dessert - cocktails - tip - app
collection_examples
data('collection_examples')
# remotes::install_github('sagesteppe/BarnebyLives')
# OR devtools::install_github('sagesteppe/BarnebyLives')
library(BarnebyLives)
library(purrr)
library(dplyr)
library(glue)
data('collection_examples')
force(collection_examples)
View(collection_examples)
bl_dir
library(usethis)
library(googlesheets4)
# read in data from the sheet to process
collection_examples <- read_sheet(
'1iOQBNeGqRJ3yhA-Sujas3xZ2Aw5rFkktUKv3N_e4o8M', sheet = 'Data Entry - Examples')
# read in data from the sheet to process
collection_examples <- read_sheet(
'1iOQBNeGqRJ3yhA-Sujas3xZ2Aw5rFkktUKv3N_e4o8M', sheet = 'Data Entry - Examples')
1
# read in data from the sheet to process
collection_examples <- read_sheet(
'1iOQBNeGqRJ3yhA-Sujas3xZ2Aw5rFkktUKv3N_e4o8M', sheet = 'Data Entry - Examples')
library(usethis)
library(googlesheets4)
# read in data from the sheet to process
collection_examples <- read_sheet(
'1iOQBNeGqRJ3yhA-Sujas3xZ2Aw5rFkktUKv3N_e4o8M', sheet = 'Data Entry - Examples')
# read in data from the sheet to process
collection_examples <- read_sheet(
'1iOQBNeGqRJ3yhA-Sujas3xZ2Aw5rFkktUKv3N_e4o8M', sheet = 'Data Entry - Examples')
library(usethis)
library(googlesheets4)
# read in data from the sheet to process
collection_examples <- read_sheet(
'1iOQBNeGqRJ3yhA-Sujas3xZ2Aw5rFkktUKv3N_e4o8M', sheet = 'Data Entry - Examples')
# devtools::install_github('sagesteppe/BarnebyLives')
library(tidyverse)
library(BarnebyLives)
df <- uncleaned_collection_examples
data <- date_parser(df, coll_date = 'Date_digital', det_date = 'Determined_date')
dplyr::select(data, starts_with('Date')) %>%
utils::head()
data <- dms2dd(data, dms = F)
dplyr::select(data, starts_with(c('latitude', 'longitude'))) %>%
utils::head()
data <- autofill_checker(data)
dplyr::select(data, Long_AutoFill_Flag, Lat_AutoFill_Flag) |>
dplyr::drop_na() |>
utils::head()
dplyr::select(data, Long_AutoFill_Flag, Lat_AutoFill_Flag) |>
tidyr::drop_na() |>
utils::head()
data <- coords2sf(data)
head(data) # now we can see that it is an sf object
#' Set up the downloaded data for a BarnebyLives instance
#'
#' @description used within `data_setup`
#' @keywords internal
process_valleys <- function(path, pathOut, tile_cells) {
tile_cells <- sf::st_transform(tile_cells, 4269)
p <- file.path(path,  'Named_Valleys.gpkg')
valleys <- sf::st_read(p, quiet = T) |>
sf::st_make_valid() |>
sf::st_transform(4269)
sf::st_agr(valleys) = "constant"
sf::st_agr(tile_cells) <- 'constant'
####
mtns <- valleys |>
dplyr::select(MapName = transferred_tag) |>
sf::st_crop(sf::st_union(tile_cells))
sf::st_transform(4326)
mtns_gmba <-
bind_rows(
sf::st_read(file.path(pathOut, 'mountains', 'mountains.shp')),
mtns
)
sf::st_write(
mtns,
dsn = file.path(pathOut, 'mountains', 'mountains.shp'),
quiet = TRUE,
append = FALSE
)
message(crayon::green(
"Done writing `valleys` to the `mountains` data set. ",
format(Sys.time(), "%X")
))
}
#' Set up the downloaded data for a BarnebyLives instance
#'
#' @description used within `data_setup`
#' @keywords internal
process_valleys <- function(path, pathOut, tile_cells) {
tile_cells <- sf::st_transform(tile_cells, 4269)
p <- file.path(path,  'Named_Valleys.gpkg')
valleys <- sf::st_read(p, quiet = T) |>
sf::st_make_valid() |>
sf::st_transform(4269)
sf::st_agr(valleys) = "constant"
sf::st_agr(tile_cells) <- 'constant'
mtns <- valleys |>
dplyr::select(Feature = transferred_tag) |>
sf::st_crop(sf::st_union(tile_cells)) |>
sf::st_transform(4326) |>
sf::st_make_valid()
mtns_gmba <-
bind_rows(
sf::st_read(file.path(pathOut, 'mountains', 'mountains.shp'), quiet = T),
mtns
)
sf::st_write(
mtns,
dsn = file.path(pathOut, 'mountains', 'mountains.shp'),
quiet = TRUE,
append = FALSE
)
message(crayon::green(
"Done writing `valleys` to the `mountains` data set. ",
format(Sys.time(), "%X")
))
}
#' Set up the downloaded data for a BarnebyLives instance
#'
#' @description used within `data_setup`
#' @keywords internal
process_gmba <- function(path, pathOut, tile_cells) {
tile_cells <- sf::st_transform(tile_cells, 4269)
p <- file.path(path, 'GMBA', 'GMBA_Inventory_v2.0_standard_basic.shp')
mtns <- sf::st_read(p, quiet = T) |>
sf::st_make_valid() |>
sf::st_transform(4269)
sf::st_agr(mtns) = "constant"
sf::st_agr(tile_cells) <- 'constant'
mtns <- mtns |>
dplyr::select(MapName) |>
sf::st_crop(sf::st_union(tile_cells)) |>
dplyr::rename(Mountains = MapName) |>
dplyr::mutate(Feature = stringr::str_remove(Mountains, '[(]nn[])]')) |>
sf::st_transform(4326) |>
dplyr::select(-Mountains)
dir.create(file.path(pathOut, 'mountains'), showWarnings = FALSE)
sf::st_write(
mtns,
dsn = file.path(pathOut, 'mountains', 'mountains.shp'),
quiet = TRUE,
append = FALSE
)
message(crayon::green(
"Done writing `mountains` data set. ",
format(Sys.time(), "%X")
))
}
#' gather political site information
#'
#' @description this function grabs information on the state, county, and township of collections
#' @param x an sf data frame of collection points
#' @param y a variable which uniquely identifies each observation
#' @param path a path to the directory holding the BarnebyLivesGeodata
#' @examples # see the package vignette
#' @export
political_grabber <- function(x, y, path) {
y_quo <- rlang::enquo(y)
x <- dplyr::select(
x,
-any_of(c(
'Country',
'State',
'County',
'Mang_Name',
'Unit_Nm',
'trs',
'Allotment'
))
)
political <- sf::st_read(
file.path(path, 'political', 'political.shp'),
quiet = T
)
feature <- sf::st_read(
file.path(p2geo, 'mountains', 'mountains.shp'),
quiet = T
) |>
dplyr::rename(Feature = Mountains)
allotment <- sf::st_read(
file.path(path, 'allotments', 'allotments.shp'),
quiet = T
)
plss <- sf::st_read(file.path(path, 'plss', 'plss.shp'), quiet = T)
ownership <- sf::st_read(file.path(path, 'pad', 'pad.shp'), quiet = T)
# write attributes to data set
x <- sf::st_join(x, political)
x <- sf::st_join(x, allotment)
x <- sf::st_join(x, ownership)
x <- sf::st_join(x, feature)
x_plss <- sf::st_transform(x, sf::st_crs(plss))
x_plss <- sf::st_join(x_plss, plss) |>
sf::st_drop_geometry() |>
dplyr::select(any_of(c(y, 'trs')))
x_vars <- dplyr::left_join(x, x_plss, by = y) |>
dplyr::mutate(Country = 'U.S.A.') |>
dplyr::relocate(
any_of(
c(
'Country',
'State',
'County',
'Feature',
'Mang_Name',
'Unit_Nm',
'trs',
'Allotment'
)
),
.before = geometry
) |>
dplyr::distinct(.keep_all = T) |>
# with large enough sample size some points fall on an exact border
dplyr::group_by(.data[[y]]) |>
dplyr::slice_head(n = 1) |>
dplyr::ungroup()
x_vars <- x_vars |>
dplyr::mutate(
Gen = paste0(
Country,
', ',
State,
', ',
County,
' Co., ',
Feature,
', ',
Mang_Name,
" ",
Unit_Nm,
" ",
trs
),
Gen = stringr::str_replace_all(Gen, "NA", ""),
Gen = stringr::str_replace_all(Gen, "  ", ""),
Gen = stringr::str_replace_all(Gen, ", ,", ","),
Gen = stringr::str_trim(Gen),
Gen = stringr::str_remove(Gen, ",$"),
.before = geometry
)
return(x_vars)
rm(political, allotment, plss, ownership)
}
library(usethis)
library(googlesheets4)
#setwd('/media/steppe/hdd/BarnebyLives/data-raw')
setwd('~/Documents/assoRted/BarnebyLives/data-raw')
googledrive::drive_auth("reedbenkendorf27@gmail.com")
# read in data from the sheet to process
collection_examples <- read_sheet(
'1iOQBNeGqRJ3yhA-Sujas3xZ2Aw5rFkktUKv3N_e4o8M', sheet = 'Processed - Examples')
# read in data from the sheet to process
collection_examples <- read_sheet(
'1iOQBNeGqRJ3yhA-Sujas3xZ2Aw5rFkktUKv3N_e4o8M', sheet = 'Processed - Examples')
View(collection_examples)
# read in data from the sheet to process
collection_examples <- read_sheet(
'1iOQBNeGqRJ3yhA-Sujas3xZ2Aw5rFkktUKv3N_e4o8M', sheet = 'Processed - Examples') |>
drop_na(Full_name)
# read in data from the sheet to process
collection_examples <- read_sheet(
'1iOQBNeGqRJ3yhA-Sujas3xZ2Aw5rFkktUKv3N_e4o8M', sheet = 'Processed - Examples') |>
tidyr::drop_na(Full_name)
usethis::use_data(collection_examples, overwrite = TRUE)
