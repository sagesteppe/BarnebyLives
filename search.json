[{"path":"https://sagesteppe.github.io/BarnebyLives/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 BarnebyLives authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/articles/creating_labels.html","id":"exporting-a-digital-copy-of-the-data","dir":"Articles","previous_headings":"","what":"Exporting a digital copy of the data","title":"Printing herbarium labels and exporting a digital copy of data","text":"normally time also make digital copy data direct accessioning herbarium side. Currently BL supports writing data mass upload formats herbaria(e.g. Symbiota, Jepson, Chicago Botanic Garden), always eager add , PLEASE hesitate ask want something supported! lot code, realistically replacing NA values ’’, empty contents, best format people get NULL values databases.","code":"unique(database_templates$Database) # currently supported options.   dat_import <- format_database_import(collection_examples, 'Symbiota') |>    dplyr::mutate( # KEEP THIS AROUND! Instead of writing explicit NA's # we     dplyr::across( # just return blank cells, this helps with import on most       dplyr::everything(), ~ as.character(.)), # users ends.      dplyr::across(       dplyr::everything(), ~ tidyr::replace_na(., '')))    write.csv(dat_import, 'Symbiota_format_collections_2024.csv', row.names = F)"},{"path":"https://sagesteppe.github.io/BarnebyLives/articles/custom_label_fonts.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Custom Label Fonts","text":"Obviously, everyone wants able customize label templates! go bother installing running BarnebyLives ! Note labels made using LaTeX, awesome guide LaTeX (relevant level using ) Overleaf.org, check links side bar ! vignette replace default LaTeX fonts add-fonts using fontspec package. Also note previously may able scrape using old LaTeX installation, point definitely need make sure either XelaTex lualatext installed. ‘tinytex’ installable directly R accomplish operating systems. vignette assumes able get Custom Label Templates. can check successfully installed linux sake compatibility vignette, please install ton Windows fonts. seems Mac - start hitting errors, maybe give go. can code , give part soul Bill Gates yesteryear. can click tab enter keyboard debconf pops accept giving Bill Gates yesteryear soul. doubly verify Tex install can access may get messages loops, fine long last line reads something like fc-cache: succeeded","code":"install.packages(\"tinytex\") tinytex::install_tinytex() tinytex::is_tinytex() echo \"ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true\" | sudo debconf-set-selections sudo apt install -y ttf-mscorefonts-installer sudo apt install ttf-mscorefonts-installer fc-list | grep \"Times New Roman\" sudo fc-cache -fv"},{"path":"https://sagesteppe.github.io/BarnebyLives/articles/custom_label_fonts.html","id":"prepare-workspace","dir":"Articles","previous_headings":"","what":"Prepare workspace","title":"Custom Label Fonts","text":"labels can copied original locations using following code.","code":"library(BarnebyLives) library(tidyverse)  local <- file.path('~', 'Documents', 'assoRted', 'Barneby_Lives_dev', 'LabelStyles')  l.nevadense <- collection_examples |>   filter(Collection_number == 2823) |>   mutate(     Project_name = 'Custom Fonts',      Coordinate_uncertainty = '5m'     )   write.csv(l.nevadense, file.path(local, 'SoS-ExampleCollection.csv'), row.names = F) p2lib <- file.path(   system.file(package = 'BarnebyLives'),   'rmarkdown', 'templates', 'labels', 'skeleton'   )  # here we copy over one of the skeletons which we are going to modify in this example file.copy(   from = file.path(p2lib, 'skeleton-customfont.Rmd'),    to = file.path(local, 'skeleton-customfont.Rmd')   )  rm(p2lib)"},{"path":"https://sagesteppe.github.io/BarnebyLives/articles/custom_label_fonts.html","id":"render-labels","dir":"Articles","previous_headings":"","what":"Render Labels","title":"Custom Label Fonts","text":"look header file, ’ll notice going skeletons. likely end wanting merge multiple label components together single skeleton (eventually), sure use preamble. Note last line preamble : command ‘setmainfont’ set font ‘Georgia’ used.","code":"output:    pdf_document:     latex_engine: xelatex # or lualatex     keep_text: true params:   Collection_number: Collection_number geometry: paperheight=4in,paperwidth=4in,margin=0.1in header-includes:   - \\pagenumbering{gobble}   - \\usepackage{setspace}   - \\usepackage{fontspec}   - \\setmainfont{Georgia}"},{"path":"https://sagesteppe.github.io/BarnebyLives/articles/custom_label_fonts.html","id":"examples-with-common-fonts","dir":"Articles","previous_headings":"","what":"Examples with Common Fonts","title":"Custom Label Fonts","text":"However, can use multiple fonts (…desired… ) importing additional font, specifying use . edit portions skeletons body ! Notice new font applied whole group just braced contents, can bypass custom macros - won’t discuss support package. TBH ’m sure often really two fonts per label anyways…","code":"output:    ... header-includes:   ...   - \\usepackage{fontspec}   - \\setmainfont{Georgia}   - \\newfontfamily\\couriernew{Courier New} ... \\textcouriernew{`r writer(data[['Habitat']])`. `r data[['physical_environ']]`} Veg.: `r species_font(record[['Vegetation']])` `r associates_writer(record[['Associates']])` `r writer(record[['Notes']])`   \\endgroup ..."},{"path":"https://sagesteppe.github.io/BarnebyLives/articles/custom_label_logos_maps.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Custom label logos and maps","text":"Obviously, everyone wants able customize label templates! go bother installing running BarnebyLives ! section embedding maps logos onto labels. Note labels made using LaTeX, awesome guide LaTeX (relevant level using ) Overleaf.org, check links side bar ! vignette assumes able get Custom Label Templates.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/articles/custom_label_logos_maps.html","id":"prepare-workspace","dir":"Articles","previous_headings":"","what":"Prepare workspace","title":"Custom label logos and maps","text":"Label templates can copied original locations using following code. also make map embed label.","code":"library(BarnebyLives) library(tidyverse)  local <- file.path('~', 'Documents', 'assoRted', 'Barneby_Lives_dev', 'LabelStyles')  l.nevadense <- collection_examples |>   filter(Collection_number == 2823) |>   mutate(     Project_name = 'Custom Fonts',      Coordinate_uncertainty = '5m'     )   write.csv(l.nevadense, file.path(local, 'SoS-ExampleCollection.csv'), row.names = F) p2lib <- file.path(   system.file(package = 'BarnebyLives'),   'rmarkdown', 'templates', 'labels', 'skeleton'   )  # here we copy over one of the skeletons which we are going to modify in this example file.copy(   from = file.path(p2lib, 'skeleton-maps.Rmd'),    to = file.path(local, 'skeleton-maps.Rmd')   )  # copy an image to use for a logo file.copy(   from =      file.path(     system.file(package = 'BarnebyLives'),      'rmarkdown', 'templates', 'transmittal', 'skeleton', 'logo.png'),   to = file.path(local, 'logo.png')   )  rm(p2lib) st <- tigris::states()  l.nevadense.sf <- sf::st_as_sf(   l.nevadense,    coords = c('longitude_dd', 'latitude_dd'),   crs = 4326   )  # create a simple dot map of the state.  map_maker(   l.nevadense.sf,    st,    path = local,   collection_col = 'Collection_number'   )"},{"path":[]},{"path":"https://sagesteppe.github.io/BarnebyLives/articles/custom_label_templates.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Custom Label Templates","text":"Obviously, everyone wants able customize label templates! go bother installing running BarnebyLives ! couple examples tweaking around default skeleton get labels … Look familiar. Note labels made using LaTeX, awesome guide LaTeX (relevant level using ) Overleaf.org, check links side bar ! vignette, show three default templates look like, make slight customizations .","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/articles/custom_label_templates.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"Custom Label Templates","text":"reminder, standard template (skeleton.Rmd) looks like . Another included template, Seeds Success program (skeletonSOS.Rmd), looks like . Seeds Success rad program plant science save planet. collection didn’t lead collection, largely indebted ton testing data whole slew collectors (holla @ Chicago Botanic Garden & University Nevada Reno !) final default template (skeleton-new.Rmd) looks like ","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/articles/custom_label_templates.html","id":"modifications","dir":"Articles","previous_headings":"","what":"Modifications","title":"Custom Label Templates","text":"labels can copied original locations using following code. using program need copy template ’s location within package ‘local’ location. always need modify small part skeleton defines document look data put labels, see ‘creating_labels’ vignette details. changes make skeleton’s package directory lost anytime update package. file location can easily opened safe editing. ‘local’ basically mean put file location computer overwritten update package, may happen without knowledge becomes dependency another package (seems highly unlikely ). Obviously ’s good try place skeletons location don’t much hunting around find , ‘spaces’ LaTeX formatting can make things go haywire quick, ’s nice backup version tailoring version. busy next years happy accept pull requests BL greater variety herbarium templates, likewise can make writer_* type functions push package. questions , many good github resources/guides exist, happy try help incorporating materials. One final note LaTeX uses spaces, ’ ’ controlling content. particular two spaces force text onto new line. hard illustrate examples, ’ll try best mention relevant. example focus final default template, pretty middle road design. Hmm ’s busy label, try reduce directions manually… , can just rid ! Around line 50 can just remove following details. Delete !  looks better! now can, want open space habitat notes vegetation information. ’s simple, need empty blank line document Can become chunk . enter blank line ‘r writer()…’ ‘Veg.’ ’s better! “want breathe ’m thin” “Won’t breathe ?” “Find little space, can move --” “keep one step ahead, .” Now let’s change line controls size font project name. making font size smaller shifting LARGE large argument.  change location family label (currently aligned right). Let’s make family left aligned. Note calls R single set smart quotes, ‘R’, allows us run R commands without create code chunk common markdown syntax. created commands help format writing output making labels like nice. remove flushright commands basically end : requires us delete first three lines copy family ‘group’. brings good point, ‘groups’ used less create elements held together like paragraphs. omitted bring family group, smidge space scientific name (exemplified habitat vegetation alterations.)  may also decide want put determination information right species. can just moving elements around. (sure delete call writer_fide chunk located way near bottom skeleton!). bring scientific name printed, make font det info smaller.  Obviously, way enter data determination bad ! using initials full name makes sense, context, hell “RCB” wonder? one sea botanists named ‘Reed’, certainly - illustrious - RCB’s .","code":"library(BarnebyLives) library(tidyverse)  local <- file.path('~', 'Documents', 'assoRted', 'Barneby_Lives_dev', 'LabelStyles')  l.nevadense <- collection_examples |>   filter(Collection_number == 2823)  write.csv(l.nevadense, file.path(local, 'SoS-ExampleCollection.csv')) p2lib <- file.path(   system.file(package = 'BarnebyLives'),   'rmarkdown', 'templates', 'labels', 'skeleton'   )  # here we copy over one of the skeletons which we are going to modify in this example file.copy(   from = file.path(p2lib, 'SoS-skeleton.Rmd'),    to = file.path(local, 'SoS-skeleton.Rmd')   )  rm(p2lib) \\begingroup \\begin{spacing}{0.1} {\\scriptsize `r data$Directions_BL`} \\end{spacing} \\endgroup \\begingroup `r data$Gen`. `r writer(data$Site)` `r data$latitude_dd` `r data$longitude_dd` (`r data$Datum` `r writer(data$Coordinate_Uncertainty)`).  `r writer(data$Habitat)`. `r data$physical_environ`   Veg.: `r species_font(data$Vegetation)` `r associates_writer(data$Associates)` `r writer(data$Notes)`   \\endgroup \\begingroup `r data$Gen`. `r writer(data$Site)` `r data$latitude_dd` `r data$longitude_dd` (`r data$Datum` `r writer(data$Coordinate_Uncertainty)`).  `r writer(data$Habitat)`. `r data$physical_environ`    Veg.: `r species_font(data$Vegetation)` `r associates_writer(data$Associates)` `r writer(data$Notes)`   \\endgroup \\textbf{\\LARGE `r writer(data$Project_Name)`} \\textbf{\\large `r writer(data$Project_Name)`} \\begin{flushright} \\uppercase{`r data$Family`} \\end{flushright}  \\begingroup \\large `r writer(paste(data$Genus, data$Epithet), italics = TRUE)` `r writer(data$Binomial_authority)` `r writer(data$Infrarank)` `r  writer(data$Infraspecies, italics = TRUE)` `r writer(data$Infraspecific_authority)`   \\endgroup \\normalsize \\large \\uppercase{`r data$Family`}   \\begingroup `r writer(paste(data$Genus, data$Epithet), italics = TRUE)` `r writer(data$Binomial_authority)` `r writer(data$Infrarank)` `r  writer(data$Infraspecies, italics = TRUE)` `r writer(data$Infraspecific_authority)`   \\endgroup \\normalsize \\begingroup `r collection_writer(data)`. `r writer_fide(data)` \\endgroup \\begingroup \\large `r writer(paste(data$Genus, data$Epithet), italics = TRUE)` `r writer(data$Binomial_authority)` `r writer(data$Infrarank)` `r  writer(data$Infraspecies, italics = TRUE)` `r writer(data$Infraspecific_authority)`   \\normalsize `r writer_fide(data)` \\endgroup"},{"path":"https://sagesteppe.github.io/BarnebyLives/articles/custom_label_templates.html","id":"in-summary","dir":"Articles","previous_headings":"","what":"In summary","title":"Custom Label Templates","text":"odd vignette create relies multiple languages, especially one ’ ’ spaces important. Just bear mind can make big changes labels small steps (maybe small?)! overleaf guide https://www.overleaf.com/learn everything need, ’ll probably realize pales comparision.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/articles/running_pipeline.html","id":"purpose","dir":"Articles","previous_headings":"","what":"Purpose","title":"BarnebyLives! Running pipeline","text":"purpose script assist botanical collectors accessioning collections. central component entire package. go ensuring values printed onto herbarium labels uploaded databases accurate. experience many herbaria now request digital copies collection information format. script aims alleviate investment time requires, allow collector time less onerous tasks; collection study. theory tasks script automated, unconscionable action local taxonomic authorities. several database options updating collections (spell checking names) current well curated (e.g. Kew Plants World) exist, feel many proposals combinations require interpretation regions attempting understand material hand. script perform following tasks.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/articles/running_pipeline.html","id":"geographic","dir":"Articles","previous_headings":"Purpose","what":"Geographic","title":"BarnebyLives! Running pipeline","text":"1) Convert coordinates Decimal Degrees format, needed (e.g. DMS 72*17.55 -> 72.29861).2) Retrieve appropriate political place names. (.e. State, County).3) Retrieve accurate elevation values coordinates.4) Retrieve Public Land Ownership (e.g. United States Forest Service, Bureau Land Management).5) Project coordinates one system another, needed (e.g. UTM zone WGS84).6) Retrieve Cadastral data PLSS Township, Range, Section (TRS)","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/articles/running_pipeline.html","id":"temporal","dir":"Articles","previous_headings":"Purpose","what":"Temporal","title":"BarnebyLives! Running pipeline","text":"1) Provide ‘written’ date style choosing. (e.g. 12th May 2021), purpose labeling.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/articles/running_pipeline.html","id":"taxonomic","dir":"Articles","previous_headings":"Purpose","what":"Taxonomic","title":"BarnebyLives! Running pipeline","text":"1) Provide ‘spell check’ family.2) Provide ‘spell check’ genus.3) Provide ‘spell check’ epithet.4) Provide ‘spell check’ authorities.5) addition may check synonymy taxonomic levels, accept reject suggestions.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/articles/running_pipeline.html","id":"directions","dir":"Articles","previous_headings":"Purpose","what":"Directions","title":"BarnebyLives! Running pipeline","text":"preface observation good deal collectors curators consider data non-essential now. Regardless, inclined gain access free google maps account services provided. 1) Write directions, town notable size repute, closet parking spot collection locality. Note directions may reflect actual route traveled collectors, rather Google Maps thinks optimal - time query. Caveat emptor.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/articles/running_pipeline.html","id":"usage","dir":"Articles","previous_headings":"","what":"Usage","title":"BarnebyLives! Running pipeline","text":"Files required use script: PAD-US database retrieving land ownership information needed (note include identities Private owners). World Flora Online static copy database. example going showcase loading data want run pipeline using Google Sheets. can allow collectors team readily contribute preparing transcribing notes expedition simultaneously. Loading data local CSV excel type file easy read.csv readxl::read_excel instead. use package googlesheets4, part tidyverse, install default remainder ’verse. feed last part URL link path. first time using googlesheets4, walk steps log google account can access data securely. googlesheets4 actually really straightforward use, note use drive_auth function . function makes non-interactive use easy, used vignette renders non-interactive format.","code":"# devtools::install_github('sagesteppe/BarnebyLives') library(tidyverse) library(BarnebyLives) # install.packages('googlesheets4') library(googlesheets4)  googledrive::drive_auth(\"reedbenkendorf27@gmail.com\") # read in data from the sheet to process df <- read_sheet('1iOQBNeGqRJ3yhA-Sujas3xZ2Aw5rFkktUKv3N_e4o8M',                      sheet = 'Data Entry - Examples') %>%    mutate(UNIQUEID = paste0(Primary_Collector, Collection_number))"},{"path":"https://sagesteppe.github.io/BarnebyLives/articles/running_pipeline.html","id":"only-process-data-which-have-not-yet-run-through-the-pipeline-","dir":"Articles","previous_headings":"Usage","what":"only process data which have not yet run through the pipeline.","title":"BarnebyLives! Running pipeline","text":"BarnebyLives takes little bit time run, also requires usage Google Developer credits directions portion. may want ensure re-running files already processed. can simply using combination collectors name’s collection numbers. processing many many people , worried people may names, collecting range numbers, can add data required make UNIQUEID, likely component date. Even though coded functionality, essentially never use . reason don’t use directions much, just get start cup tea pipeline running.","code":"# determine whether these data have already been processed by the script, using # a unique combination of collection name and collection code.  # these are the data which have gone through the pipeline already processed <- read_sheet('1iOQBNeGqRJ3yhA-Sujas3xZ2Aw5rFkktUKv3N_e4o8M',                         sheet = 'Processed - Examples') %>%    select(Collection_number, Primary_Collector) %>%    mutate(UNIQUEID = paste0(Primary_Collector, Collection_number))  # here we look for any 'input' files which are present in the processed files and  # drop them.  input <- filter(df, ! UNIQUEID %in% processed$UNIQUEID ) %>%    select(-UNIQUEID)  rm(processed, df)"},{"path":"https://sagesteppe.github.io/BarnebyLives/articles/running_pipeline.html","id":"ensure-coordinates-and-dates-and-formatted-appropriately","dir":"Articles","previous_headings":"Usage","what":"Ensure Coordinates and Dates and formatted appropriately","title":"BarnebyLives! Running pipeline","text":"Date parsing, e.g. convert date congruent museum formats (month roman numerals, spelled ). step assumes recording dates American format (month/day/year), rather internationally common format (day/month/year). also parse day month, month year, year, used multiple possible downstream software.","code":"data <- date_parser(input, coll_date = 'Date_digital', det_date = 'Determined_date')  dplyr::select(data, starts_with('Date')) %>%    utils::head()"},{"path":"https://sagesteppe.github.io/BarnebyLives/articles/running_pipeline.html","id":"conversion-of-degrees-minutes-seconds-dms-to-decimal-degrees-dd-","dir":"Articles","previous_headings":"Usage > Ensure Coordinates and Dates and formatted appropriately","what":"Conversion of Degrees Minutes Seconds (DMS) to Decimal Degrees (DD).","title":"BarnebyLives! Running pipeline","text":"DMS format still used applications convert generally utilized DD format. Although DMS certainly prettier read, DD just used much often change everything . Sad. maintain formats data set, others readily available uses aside creating herbarium labels. Several spreadsheet software auto-increment numeric columns default. try identify issue . internal usage data acquisition make data set explicitly spatial, rather just holding coordinates column. also required write data format readable Google Earth another Geographic Information System.","code":"data <- dms2dd(data, dms = F)  dplyr::select(data, starts_with(c('latitude', 'longitude'))) %>%    utils::head() data <- autofill_checker(data)  dplyr::select(data, Long_AutoFill_Flag, Lat_AutoFill_Flag) |>    dplyr::drop_na() |>   utils::head() data <- coords2sf(data) head(data) # now we can see that it is an sf object"},{"path":"https://sagesteppe.github.io/BarnebyLives/articles/running_pipeline.html","id":"retrieve-politicaladministrative-information","dir":"Articles","previous_headings":"Usage","what":"Retrieve Political/Administrative Information","title":"BarnebyLives! Running pipeline","text":"BarnebyLives! retrieve various components political administrative information. data include: state, county collection, township, range, section (TRS) Public Land Survey System (PLSS). also determine whether Federal State Agency manages owns land collected , return name . either United States Forest Service Bureau Land Management manage land, return information grazing allotments. Retrieve State, County, Ownership, TRS, allotment information","code":"p <- '/media/steppe/hdd/Barneby_Lives-dev/geodata'  data <- political_grabber(data, y = 'Collection_number', path = p)"},{"path":"https://sagesteppe.github.io/BarnebyLives/articles/running_pipeline.html","id":"geographic-information-for-locality-info","dir":"Articles","previous_headings":"Usage","what":"Geographic Information for Locality info","title":"BarnebyLives! Running pipeline","text":"Many younger collectors use Site Names quite broad, advocate usage locality names. locality name going provide relation site actual collection area distance azimuth. sites use prospective identifiers Geographic Names Information System, names undergone standardization, general cleaning better reflect currently acceptable naming practices (.e. misogynistic racist names largely - entirely - removed). Using GNIS allows places unambiguously related . hate saying collection site XX km river 121 degrees, well - just think , seems people want. Retrieve Nearest GNIS place name, azimuth .","code":"data <- site_writer(data, path = p)"},{"path":"https://sagesteppe.github.io/BarnebyLives/articles/running_pipeline.html","id":"site-characteristics","dir":"Articles","previous_headings":"Usage","what":"Site characteristics","title":"BarnebyLives! Running pipeline","text":"BarnebyLives acquires range characteristics useful describe physical environment, : elevation (meters feet), slope, aspect, surficial geology, geomorphons. BarnebyLives dedicated towards addressing peeves curators much time hands, module . generally see, people even describe site , laser focused tiny micro-environment collected individual plant - characteristics population even general area population seeing. don’t dislike notes, fact find utmost value. However, even inclusions exist within broader context, much habitat filtering , without relation obscurity certain habitats can lost. details data sets using. elevation data come DEM90, name implies data set roughly 90 meters roughly X Y dimensions. product used derive slope (degrees) aspect (degrees) information. Slope conveys change elevation adjacent cells, aspect discusses way water flow downslope. aspect East states water flow downslope east. Surficial geology data acquired United States Geological Survey, works well characterizing major geology types area, although may minor inclusion within material. Geomorphons bit peculiar, may refer several things, refer 10 standardized landform positions Geomorpho90m, useful characterizing landform position. useful spatial ecology describe landscape population broadly located. Generally ‘Valleys’ tend eat land cover , often extending alluvial fans, find useful describing roughly landscape population .","code":"data <- physical_grabber(data, path = p)"},{"path":"https://sagesteppe.github.io/BarnebyLives/articles/running_pipeline.html","id":"taxonomic-1","dir":"Articles","previous_headings":"Usage","what":"Taxonomic","title":"BarnebyLives! Running pipeline","text":"BarnebyLives performs multiple operations related taxonomy nomenclature. function spell_check(), attempt determine whether supplied binomial scientific name, family spelled correctly offer suggestions . function requires first letters generic name epithet spelled correctly. run spell check nearly published plant name spellings, search similar spelling within lists material found. operate pieces binomial separately, can work identify species within context genus. similar check determine author cited describing species, transferring another genus, spelled using standard author abbreviations. check operates similar manner spell_check(). list consults comprehensive, within years, taxonomists published plant species. final process taxonomic step ensure spellings species noted vegetation, associates fields accurate. submitted Kew, fields quickly overwhelm API. Remove collected species list associated species. Many collectors include focal collection list associated species performing data entry site. can remove . BarnebyLives! verified spelling species submit Plants World Online determine whether current accepted name applied. BL! automatically -write submitted species, important interpret results query. Especially possible spell_check mis-matched material another name. Searches synonym species","code":"p <- '/media/steppe/hdd/Barneby_Lives-dev/taxonomic_data' data <- spell_check(data, path = p)  data <- spell_check(data = data, column = 'Full_name', path = p) data <- family_spell_check(data, path = p) data <- author_check(data, path = p) data <- associates_spell_check(data, 'Associates', path = p) # we can run on both columns.  data <- associates_spell_check(data, 'Vegetation', path = p) data <- associate_dropper(data, 'Full_name', col  = 'Associates') data <- associate_dropper(data, 'Full_name', col  = 'Vegetation') names <- sf::st_drop_geometry(data) %>%    pull(Full_name)  pow_res <- lapply(names,       powo_searcher) %>%    bind_rows() data <- bind_cols(data, pow_res)  rm(names, pow_res)"},{"path":"https://sagesteppe.github.io/BarnebyLives/articles/running_pipeline.html","id":"directions-1","dir":"Articles","previous_headings":"Usage","what":"Directions","title":"BarnebyLives! Running pipeline","text":"Directions parking spot can acquired Google Maps; however implies location can driven first place. may require interactive alterations user.","code":"SoS_gkey = Sys.getenv(\"Sos_gkey\") directions <- directions_grabber(data, api_key = SoS_gkey)"},{"path":"https://sagesteppe.github.io/BarnebyLives/articles/running_pipeline.html","id":"export-collections","dir":"Articles","previous_headings":"","what":"Export collections","title":"BarnebyLives! Running pipeline","text":"write data Google sheets examples. can also export collections either (!) ‘shapefile’ KML use GIS GoogleEarth.","code":"# first ensure the columns are in the same order as google sheets  processed <- read_sheet('1iOQBNeGqRJ3yhA-Sujas3xZ2Aw5rFkktUKv3N_e4o8M',                         sheet = 'Processed - Examples') %>%    colnames()   df <- sf::st_drop_geometry(directions) %>%    dplyr::select(dplyr::all_of(processed))  # we will add these data onto our final sheet. sheet_append('1iOQBNeGqRJ3yhA-Sujas3xZ2Aw5rFkktUKv3N_e4o8M',               sheet = 'Processed - Examples', data = df) geodata_writer(data, path = 'someplace',                 filename = 'Herbarium_Collections_2023',                filetype = 'kml')"},{"path":"https://sagesteppe.github.io/BarnebyLives/articles/setting_up_files.html","id":"helper-functions","dir":"Articles","previous_headings":"","what":"Helper functions","title":"Preparing to use BarnebyLives!","text":"Unfortunately, setting BL instance totally automated package. data come wide variety sources, two life figure download . One strange Minio server, minio expert please make issue GH repo let’s try figure !","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/articles/setting_up_files.html","id":"taxonomic-data","dir":"Articles","previous_headings":"","what":"Taxonomic Data","title":"Preparing to use BarnebyLives!","text":"Worldwide Checklist Vascular Plants provides local taxonomic information required perform much name matching. utilize ensure queries sent Plants World Online spelled correctly, order reduce number queries make . “World Checklist Vascular Plants, continuously updated resource exploring global plant diversity” serves basis Kews Plants Worlds, publication details process behind data set. large file, downloaded couple minutes. function simply take name output directory like save data. way BarnebyLives matches spellings names simple. creates three tables, one large table contains species WFO database, one moderately small table contains infraspecific taxa (varieties subspecies), small table genera. However, genus specific epithet tables abbreviated. find results tables based leading first two three characters. gives rises one BarnebyLives(!) limitations, assumption first two characters genus, first three letters specific epithet spelled correctly. Now also prepare author abbreviations data set. data come IPNI, minimally processed end, see script within data-raw directory github details. save copy taxonomy directory well.","code":"TaxUnpack(path = '/media/steppe/hdd/BL_sandbox/taxdata-MI', bound = bound) data('ipni_authors', package='BarnebyLives') p2 <- '/media/steppe/hdd/BL_sandbox/taxdata-MI' write.csv(ipni_authors, file.path(p2, 'ipni_author_abbreviations.csv'))"},{"path":"https://sagesteppe.github.io/BarnebyLives/articles/setting_up_files.html","id":"download-all-geographic-data-and-set-up-an-instance","dir":"Articles","previous_headings":"","what":"Download all geographic data and set up an instance","title":"Preparing to use BarnebyLives!","text":"package one function, data_download able download data need automatically. second function tile_selector help determine files need download manually. define geographic extent covers area interest. simple square, grabbing coordinates Open Street Maps, similar service, suffice. download attributes Geomorpho90m Minio page. need ‘aspect’ (‘sine’ ‘cosine’) ‘geom’ , able control find respective directories manually download quickly. files downloaded copy location data_download save files. Halfway ! Now also need manually download data elevation MERIT-DEM. Yes technically need register , automatically get log password email enter, works! tiles follow naming convention formed data set - fact previous data set derived one. Also save files location data_download save files. Now data can set instance, need run following function. Specify downloaded data ‘path’, save date ‘pathOut’, square (bounding box) around study area ‘bound’, whether remove raw downloaded files ‘cleanup’. always leave cleanup = FALSE, 100% certain everything good, means running data pipeline printing labels couple times.","code":"# I am using R markdown so want to be really sure save data to the correct location # so I will use an absolute path data_download(path = '/media/steppe/hdd/BL_sandbox/raw_data')  # if you are using an interactive R script. (file.R) you should be able to do something # similar or even just cd into the directory where you want to save everything and  # run the function ala `download-data()` bound <- data.frame(    y = c( 48,  48,  41,  41,  48),    x = c(-91, -82, -82, -91, -91)  ) # note that the 5th pair of coordinates is the same # as the first pair (48, -91), this is required to 'close' # the square.   tileSelector(bound) data_setup( # this one will take maybe 30 minutes or so - can't recall but a start   # and walk away or do emails type event.    path = '/media/steppe/hdd/BL_sandbox/geodata_raw',    pathOut = '/media/steppe/hdd/BL_sandbox/geodata-MI',   bound = bound, cleanup = FALSE   )"},{"path":"https://sagesteppe.github.io/BarnebyLives/articles/setting_up_files.html","id":"finishing-up-","dir":"Articles","previous_headings":"","what":"Finishing up.","title":"Preparing to use BarnebyLives!","text":"’s ! runs system feel free delete raw data, can hand, initializing instance using ‘data_setup’ function; kind seems like overkill!","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Reed Clark Benkendorf. Maintainer, author.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Benkendorf R (2025). BarnebyLives: Tools collecting digital data herbarium specimens. R package version 0.3.0, https://sagesteppe.github.io/BarnebyLives/.","code":"@Manual{,   title = {BarnebyLives: Tools for collecting digital data on herbarium specimens},   author = {Reed Clark Benkendorf},   year = {2025},   note = {R package version 0.3.0},   url = {https://sagesteppe.github.io/BarnebyLives/}, }"},{"path":"https://sagesteppe.github.io/BarnebyLives/data-sources.html","id":null,"dir":"","previous_headings":"","what":"Alternative Data Sources","title":"Alternative Data Sources","text":"BarnebyLives relies considerable amounts data developed, maintained, downloaded US Federal Government. However, concerns availability spatial data US Federal Government exist. list sources data used BL, indicating sourced directly federal government, possible list alternatives may need used drop replacements. Please note BL utilizes local compute, data sources removed Federal government effect existing instances.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/index.html","id":"overview-","dir":"","previous_headings":"","what":"Overview","title":"Tools for collecting digital data on herbarium specimens","text":"BarnebyLives! R program serves help botanical collectors Western North America. BarnebyLives! runs multiple types queries acquire political administrative, geographic, taxonomic data recently collected herbarium specimens. also limited abilities search taxonomic synonyms, check spelling family, genus, species names, well author abbreviations. BarnebyLives! serves entirety flora western conterminous US, coincides Mississippi River. also includes entirety state Illinois, portions Indiana. However, area bounded ’s North Canada South Mexico, essentially covers western portion Conterminous United States (excludes Alaska). covers range, variables focused supporting botanists working West Rocky Mountain Front Range, especially operating Bureau Land Management Forest Service administered lands. BarnebyLives! meant supplement, supplant, collectors field note endeavors. Variables BarnebyLives! may produce, automatically, collection includes: Political - State - County - Township - Public Land Survey System (township, range, section) Geographic - Mountain Range (relevant) - Nearest Geographic Names Information System (GNIS) place name, distance azimuth Site characteristics - Elevation (meters feet) - Slope - Aspect - Surficial geology - Geomorphon (major landform elements) Taxonomic - Spell check Family, Genus, specific epithet - Searches synonym species - Spell checks taxonomic authorities - Spell check associated species Directions - directions parking spot can acquired Google Maps; however implies location can driven first place. features include - Date parsing, e.g. convert date congruent museum formats (month European style) - Conversion Degrees Minutes Seconds (DMS) Decimal Degrees (DD) - Exporting collection data ‘shapefile’ KML use GIS GoogleEarth Label shipping manifest generation - Herbarium Labels autopopulate script output - Manifests autopopulate script outputs - Herbarium labels retro dot municipality maps Electronic data mass digital specimen upload - Puts data formats congruent Symbiota, Darwincore, Rocky Moutain Herbarium, Consortium Pacific Northwest Herbaria. Currently BarnebyLives! run juiced computer either Rogers Park Chicago Reno. amount data queries large. Please let know query run . collect smaller portion West, e.g. certain state, FS/BLM Unit/Field Office, able set local instance. Although, documentation endeavor nascent endeavor simple, see “crop2boundary” workflow.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools for collecting digital data on herbarium specimens","text":"BarnebyLives! beta testing, can currently installed 0.1.0 github. generation labels requires Rmarkdown succesfully set render PDF via LaTeX distribution pdflatex, lualatex, xelatex. Labels require two programs, pdfjam pdftk. can installed Debian flavors Linux : hope collaborate others treat CONUS create multiformat data e.g. Darwincore, CPNWH, etc., push product onto CRAN well publish short piece APPS! backburner, still simmering! Stay tuned dropped !","code":"devtools::install_github('sagesteppe/BarnebyLives') sudo apt-get update sudo apt-get install pdfjam -y sudo apt-get install pdftk -y"},{"path":"https://sagesteppe.github.io/BarnebyLives/index.html","id":"input-data-column-names","dir":"","previous_headings":"","what":"Input Data Column Names","title":"Tools for collecting digital data on herbarium specimens","text":"columns top table required run functions BarnebyLives. columns middle table suggested increase quality collections. columns lower table optional, blunt, BarnebyLives generate values. Ficticious examples provided , links real examples (~100) contained vignettes. Suggested columns! Unnecessary columns!","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/index.html","id":"general-workflow","dir":"","previous_headings":"","what":"General Workflow","title":"Tools for collecting digital data on herbarium specimens","text":"Suggested Workflow","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/index.html","id":"geodata-directory-structure","dir":"","previous_headings":"","what":"Geodata directory structure","title":"Tools for collecting digital data on herbarium specimens","text":"setting local instance directory structure geodata flat. Several sub-directories quite large. total local instance takes around 16gb data. can see data regarding site physical characteristics take space. can download data directory find suitable. Personally, slap hdd.","code":"$ tree -d geodata ├── allotments ├── aspect ├── elevation ├── geology ├── geomorphons ├── mountains ├── pad ├── places ├── plss ├── political └── slope $ du -h 708M    ./geology 73M ./political 3.8M    ./mountains 136M    ./allotments 435M    ./pad 4.6G    ./slope 81M ./places 816M    ./plss 4.2G    ./elevation 4.1G    ./aspect 455M    ./geomorphons 16G ."},{"path":"https://sagesteppe.github.io/BarnebyLives/index.html","id":"rendering-labels","dir":"","previous_headings":"","what":"Rendering Labels","title":"Tools for collecting digital data on herbarium specimens","text":"BL provides three template labels, distributed within package copied final location using following commands R. need print labels sheets. use purrr walk create 4x4in individuals labels pdf’s using Rmarkdown. combine using bash. bash script, render_labels.sh distributed package accomplish . can copy location, R, like . , can run like (shell!) Note , ’ve difficulty calling script ’s default install location :/, can easily copied elsewhere ran location. reminder, need chmod +x file don’t call ‘bash’ start argument… Also reminder can check paths via $PATH, can install somewhere path! e.g. ‘/usr/local/bin’, can simply call … ’m sure find dir looking . instances script meant call following location: labels end ‘final’ subfolder within raw (‘Dwight-raw’) deleted. want re-render ’ll need run purrr::walk . Note ‘collector’ need match (..exactly…) output purrr::walk files collector name.","code":"p2libs <- system.file(package = 'BarnebyLives') folds <- file.path('rmarkdown', 'templates', 'labels', 'skeleton', 'SoS-skeleton.Rmd')   file.copy(from = file.path(p2libs, folds),            to = '.') # change for wherever you want the label to go. p2libs <- system.file(package = 'BarnebyLives') folds <- file.path('rmarkdown', 'render_labels.sh')   file.copy(from = file.path(p2libs, folds),            to = '/media/steppe/hdd/Barneby_Lives-dev/manuscript/labels/raw') bash render_labels.sh collector='Dwight' chmod +x render_labels.sh path2file/render_labels.sh collector='Dwight' render_labels.sh collector='Dwight' ├── HerbariumLabels │  ├── final ## <- products will go in here!!!  │  └── raw ## <- call render_labels.sh from here!!! │       └── Dwight-raw"},{"path":"https://sagesteppe.github.io/BarnebyLives/index.html","id":"trouble-printing","dir":"","previous_headings":"","what":"Trouble printing?","title":"Tools for collecting digital data on herbarium specimens","text":"printers (maybe updating drivers enough?) trouble printing LaTeX (general, related package). worked . BarnebyLives(!) named Rupert Charles Barneby, botanist extraordinaire, artist, socialite, kind hearted human . hero West needs Hayduke. Hence, BarnebyLives!","code":"ps2pdf labels_in.pdf labels_out-ps2pdf.pdf"},{"path":"https://sagesteppe.github.io/BarnebyLives/news.html","id":null,"dir":"","previous_headings":"","what":"BarnebyLives 0.3.0","title":"BarnebyLives 0.3.0","text":"bash fns wrapped calling R r cmd check testing across common OS functional support data product downloads data setup","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/GMBA_dl.html","id":null,"dir":"Reference","previous_headings":"","what":"download data — GMBA_dl","title":"download data — GMBA_dl","text":"dl data.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/GMBA_dl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"download data — GMBA_dl","text":"","code":"GMBA_dl(path)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/GNIS_dl.html","id":null,"dir":"Reference","previous_headings":"","what":"download data — GNIS_dl","title":"download data — GNIS_dl","text":"dl data.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/GNIS_dl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"download data — GNIS_dl","text":"","code":"GNIS_dl(path)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/PAD_dl.html","id":null,"dir":"Reference","previous_headings":"","what":"download data — PAD_dl","title":"download data — PAD_dl","text":"dl data. Honestly, downloading single object takes much hassle worth. just dowload : https://www.sciencebase.gov/catalog/item/652ef930d34edd15305a9b03 captcha, just download 'Geodatabase.zip' place directory .","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/PAD_dl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"download data — PAD_dl","text":"","code":"PAD_dl(path)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/PLSS_dl.html","id":null,"dir":"Reference","previous_headings":"","what":"download data — PLSS_dl","title":"download data — PLSS_dl","text":"dl data.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/PLSS_dl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"download data — PLSS_dl","text":"","code":"PLSS_dl(path)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/SGMC_dl.html","id":null,"dir":"Reference","previous_headings":"","what":"download data — SGMC_dl","title":"download data — SGMC_dl","text":"dl data.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/SGMC_dl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"download data — SGMC_dl","text":"","code":"SGMC_dl(path)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/TaxUnpack.html","id":null,"dir":"Reference","previous_headings":"","what":"a function to subset the WCVP data set to an area of focus — TaxUnpack","title":"a function to subset the WCVP data set to an area of focus — TaxUnpack","text":"function run WCVP compressed archive downloaded 'wcvp_update', requires input user specifies geographic area establish taxonomic look table .","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/TaxUnpack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a function to subset the WCVP data set to an area of focus — TaxUnpack","text":"","code":"TaxUnpack(path, bound)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/TaxUnpack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"a function to subset the WCVP data set to an area of focus — TaxUnpack","text":"path Character vector.  Location taxonomic data saved, recommend asubdirectory folder, level, geographic data. bound Dataframe x y coordinates, argument data_setup. Coordinates assumed WG84, NAD83, googles absurd projection. Coordinate specifications precise later process, level three effectively equivalent.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/TaxUnpack.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"a function to subset the WCVP data set to an area of focus — TaxUnpack","text":"","code":"if (FALSE) { # \\dontrun{  bound <- bound |>   sf::st_as_sf(coords = c('x', 'y'), crs = 4326) |>   sf::st_bbox() |>   sf::st_as_sfc()  oupu <- TaxUnpack(path = '/media/steppe/hdd/BL_sandbox/taxdata-MI', bound = bound) } # }"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/WCVP_dl.html","id":null,"dir":"Reference","previous_headings":"","what":"download data — WCVP_dl","title":"download data — WCVP_dl","text":"dl data.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/WCVP_dl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"download data — WCVP_dl","text":"","code":"WCVP_dl(path)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/all_authors.html","id":null,"dir":"Reference","previous_headings":"","what":"retrieve author results for autonyms — all_authors","title":"retrieve author results for autonyms — all_authors","text":"function internal result_grabber, ensures author collected KEW API infra-species autonyms.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/all_authors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"retrieve author results for autonyms — all_authors","text":"","code":"all_authors(genus, epithet, infrarank, infraspecies)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/all_authors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"retrieve author results for autonyms — all_authors","text":"genus derived result_grabber epithet derived result_grabber infrarank derived result_grabber infraspecies derived result_grabber","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/allotments_dl.html","id":null,"dir":"Reference","previous_headings":"","what":"download data — allotments_dl","title":"download data — allotments_dl","text":"dl data.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/allotments_dl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"download data — allotments_dl","text":"","code":"allotments_dl(path)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/associate_dropper.html","id":null,"dir":"Reference","previous_headings":"","what":"remove collection from associated species — associate_dropper","title":"remove collection from associated species — associate_dropper","text":"Removes collected species list associated species","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/associate_dropper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"remove collection from associated species — associate_dropper","text":"","code":"associate_dropper(x, Binomial, col)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/associate_dropper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"remove collection from associated species — associate_dropper","text":"x data frame containing collection info Binomial Character. column containing name collection, without authorship. Defaults 'Full_name'. col Character. column species checked","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/associate_dropper.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"remove collection from associated species — associate_dropper","text":"","code":"ce <- data.frame( Full_name = c(   'Microseris gracilis', 'Alyssum desertorum', 'Ceratocephala testiculata'), Associates = rep(    'Microseris gracilis, Lupinus lepidus, Alyssum desertorum, Ceratocephala testiculata',  times = 3) )  associate_dropper(ce, col = 'Associates') #> Argument to `Binomial` not supplied, defaulting to `Full_name` #>                   Full_name #> 1       Microseris gracilis #> 2        Alyssum desertorum #> 3 Ceratocephala testiculata #>                                                        Associates #> 1  Lupinus lepidus, Alyssum desertorum, Ceratocephala testiculata #> 2 Microseris gracilis, Lupinus lepidus, Ceratocephala testiculata #> 3        Microseris gracilis, Lupinus lepidus, Alyssum desertorum"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/associates_spell_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Format associated species, and spell check them internally — associates_spell_check","title":"Format associated species, and spell check them internally — associates_spell_check","text":"Apply proper capitalization species, spell check components.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/associates_spell_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format associated species, and spell check them internally — associates_spell_check","text":"","code":"associates_spell_check(x, column, path)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/associates_spell_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format associated species, and spell check them internally — associates_spell_check","text":"x data frame containing collection info column column containing family information path path folder containing taxonomic data.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/associates_spell_check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format associated species, and spell check them internally — associates_spell_check","text":"","code":"if (FALSE) { # \\dontrun{ df <- data.frame('Vegetation' = 'Cypers sp., Persicara spp.,   Eupatorium occidentalis, Eryngium articuatum, Menta canadense') p2tax <- '/media/steppe/hdd/Barneby_Lives-dev/taxonomic_data' associates_spell_check(df, column = 'Vegetation', path = p2tax) } # }"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/associates_writer.html","id":null,"dir":"Reference","previous_headings":"","what":"do or don't write the associated plant species — associates_writer","title":"do or don't write the associated plant species — associates_writer","text":"functions determines whether write information associated plant species. used final step formatting labels.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/associates_writer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"do or don't write the associated plant species — associates_writer","text":"","code":"associates_writer(x)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/associates_writer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"do or don't write the associated plant species — associates_writer","text":"x data frame holding values","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/associates_writer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"do or don't write the associated plant species — associates_writer","text":"","code":"library(BarnebyLives) hilaria <- collection_examples[73,] associates_writer(hilaria$Vegetation) #> [1] \"Ass.: *Artemisia nova, Kochia* sp., *Pleuraphis rigida, Elymus multisetus*.\" agoseris <- collection_examples[82,] associates_writer(agoseris$Associates) #> [1] \"Ass.: *Lupinus* sp., *Perideridia* sp., *Phlox hoodii*.\""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/author_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Check spelling of botanical author abbreviations — author_check","title":"Check spelling of botanical author abbreviations — author_check","text":"Determine whether spelling botanical author abbreviation matches one IPNI index. function seek correct spelling, rather flag spellings present abbreviations section IPNI database","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/author_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check spelling of botanical author abbreviations — author_check","text":"","code":"author_check(x, path)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/author_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check spelling of botanical author abbreviations — author_check","text":"x sf/dataframe/tibble species identities including Authority column path path directory containing abbrevation data","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/author_check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check spelling of botanical author abbreviations — author_check","text":"","code":"if (FALSE) { # \\dontrun{ df <- data.frame(   Genus = c('Lomatium', 'Linnaea', 'Angelica', 'Mentzelia', 'Castilleja'),   Epithet = c('dissectum', 'borealis', 'capitellata', 'albicaulis', 'pilosa'),   Binomial_authority = c('(Pursh) J.M. Coult & Rose', 'L.',                          '(A. Gray) Spalik, Reduron & S.R.Downie',                          '(Douglas ex Hook.) Douglas ex Torr. & A. Gray', NA),   Infrarank = c(NA, 'var.', NA, NA, 'var.'),   Infraspecies  =c(NA, 'americana', NA, NA, 'pilosa'),   Infraspecific_authority = c(NA, '(J. Forbes) Rehder', NA, NA, '(S. Watson) Rydb.')   ) head(df) author_check(df, path = '/hdd/Barneby_Lives-dev/taxonomic_data') # we know that the proper abbreviation is 'J.M. Coult.' short for 'Coulter' # and 'S.R. Downie' is more human readable than 'S.R.Downie' (no space) } # }"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/autofill_checker.html","id":null,"dir":"Reference","previous_headings":"","what":"Search for accidental auto-increments from spreadsheet autofills — autofill_checker","title":"Search for accidental auto-increments from spreadsheet autofills — autofill_checker","text":"Spreadsheets like automatically increment everything time. try detect may effected coordinates. function operates observation, incrementation occurs 'integers' degrees","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/autofill_checker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search for accidental auto-increments from spreadsheet autofills — autofill_checker","text":"","code":"autofill_checker(x)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/autofill_checker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search for accidental auto-increments from spreadsheet autofills — autofill_checker","text":"x data frame undergone 'dms2dd' BarnebyLives","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/autofill_checker.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search for accidental auto-increments from spreadsheet autofills — autofill_checker","text":"","code":"coords <- data.frame(   longitude_dd = c(rep(42.3456, times = 5), 43.3456),   latitude_dd = c(rep(-116.7890, times = 5), -115.7890) ) autofill_checker(coords) # note that all values in the column will #>   longitude_dd latitude_dd Long_AutoFill_Flag Lat_AutoFill_Flag #> 1      42.3456    -116.789               <NA>              <NA> #> 2      42.3456    -116.789               <NA>              <NA> #> 3      42.3456    -116.789               <NA>              <NA> #> 4      42.3456    -116.789               <NA>              <NA> #> 5      42.3456    -116.789               <NA>              <NA> #> 6      43.3456    -115.789            Flagged           Flagged # flagged after the occurrence (see 'Lat_AutoFill_Flag')"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/collection_examples.html","id":null,"dir":"Reference","previous_headings":"","what":"Collection examples for a shipping manifest — collection_examples","title":"Collection examples for a shipping manifest — collection_examples","text":"small data frame species information use shipping/transferal notes well label makers.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/collection_examples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collection examples for a shipping manifest — collection_examples","text":"","code":"data(collection_examples)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/collection_examples.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Collection examples for a shipping manifest — collection_examples","text":"data frame","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/collection_writer.html","id":null,"dir":"Reference","previous_headings":"","what":"format collector info and codes — collection_writer","title":"format collector info and codes — collection_writer","text":"Format data commas periods appropriate","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/collection_writer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"format collector info and codes — collection_writer","text":"","code":"collection_writer(x)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/collection_writer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"format collector info and codes — collection_writer","text":"x dataframe holding values","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/collection_writer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"format collector info and codes — collection_writer","text":"","code":"data('collection_examples') ce <- collection_examples[14,] collection_writer(ce) #> [1] \"Reed Clark Benkendorf 2833, Linda Martin, Payton Lott; 8 Jun, 2023\""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/coords2sf.html","id":null,"dir":"Reference","previous_headings":"","what":"create an sf object row by row to reflect different datum — coords2sf","title":"create an sf object row by row to reflect different datum — coords2sf","text":"function creates sf/tibble/dataframe supporting spatial operations BarnebyLives implements","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/coords2sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create an sf object row by row to reflect different datum — coords2sf","text":"","code":"coords2sf(x, datum)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/coords2sf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create an sf object row by row to reflect different datum — coords2sf","text":"x data frame undergone dms2dd function datum column, holding datum values observation, works WGS84, NAD83, NAD27","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/coords2sf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create an sf object row by row to reflect different datum — coords2sf","text":"sf/tibble/data frame points WGS84 coordinate reference system","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/coords2sf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"create an sf object row by row to reflect different datum — coords2sf","text":"","code":"mixed_datum <- data.frame(  datum = (rep(c('nad27', 'NAD83', 'wGs84'), each = 5)),  longitude_dd = runif(15, min = -120, max = -100),  latitude_dd = runif(15, min = 35, max = 48)  )  wgs84_dat <- coords2sf( mixed_datum ) str(wgs84_dat) #> Classes ‘sf’ and 'data.frame':\t15 obs. of  4 variables: #>  $ datum       : chr  \"WGS84\" \"WGS84\" \"WGS84\" \"WGS84\" ... #>  $ longitude_dd: num  -112 -119 -112 -100 -114 ... #>  $ latitude_dd : num  37.9 38.9 43.3 41.2 40.6 ... #>  $ geometry    :sfc_POINT of length 15; first list element:  'XY' num  -111.9 37.9 #>  - attr(*, \"sf_column\")= chr \"geometry\" #>  - attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA #>   ..- attr(*, \"names\")= chr [1:3] \"datum\" \"longitude_dd\" \"latitude_dd\" sf::st_crs(wgs84_dat) #> Coordinate Reference System: #>   User input: EPSG:4326  #>   wkt: #> GEOGCRS[\"WGS 84\", #>     ENSEMBLE[\"World Geodetic System 1984 ensemble\", #>         MEMBER[\"World Geodetic System 1984 (Transit)\"], #>         MEMBER[\"World Geodetic System 1984 (G730)\"], #>         MEMBER[\"World Geodetic System 1984 (G873)\"], #>         MEMBER[\"World Geodetic System 1984 (G1150)\"], #>         MEMBER[\"World Geodetic System 1984 (G1674)\"], #>         MEMBER[\"World Geodetic System 1984 (G1762)\"], #>         MEMBER[\"World Geodetic System 1984 (G2139)\"], #>         ELLIPSOID[\"WGS 84\",6378137,298.257223563, #>             LENGTHUNIT[\"metre\",1]], #>         ENSEMBLEACCURACY[2.0]], #>     PRIMEM[\"Greenwich\",0, #>         ANGLEUNIT[\"degree\",0.0174532925199433]], #>     CS[ellipsoidal,2], #>         AXIS[\"geodetic latitude (Lat)\",north, #>             ORDER[1], #>             ANGLEUNIT[\"degree\",0.0174532925199433]], #>         AXIS[\"geodetic longitude (Lon)\",east, #>             ORDER[2], #>             ANGLEUNIT[\"degree\",0.0174532925199433]], #>     USAGE[ #>         SCOPE[\"Horizontal component of 3D system.\"], #>         AREA[\"World.\"], #>         BBOX[-90,-180,90,180]], #>     ID[\"EPSG\",4326]]"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/counties_dl.html","id":null,"dir":"Reference","previous_headings":"","what":"download data — counties_dl","title":"download data — counties_dl","text":"dl data.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/counties_dl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"download data — counties_dl","text":"","code":"counties_dl(path)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/data_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Download the data required to establish a BL instance — data_download","title":"Download the data required to establish a BL instance — data_download","text":"function download data required set instance BarnebyLives. data must processed data_process function set directory structures appropriately. Note function test data already exist location, downloaded . Elevation data available http://hydro.iis.u-tokyo.ac.jp/~yamadai/MERIT_DEM/ require free automatically approved account download. Download second set data, 'GeoTiff format' header","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/data_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download the data required to establish a BL instance — data_download","text":"","code":"data_download(path)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/data_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download the data required to establish a BL instance — data_download","text":"path root directory save data . Please specify location, suggest make directory . specified default working directory. PADUS Boolean. Defaults FALSE. Honestly, downloading single object takes much hassle worth. just download : https://www.sciencebase.gov/catalog/item/652ef930d34edd15305a9b03 captcha, just download 'Geodatabase.zip' place directory files. Rename 'PADUS.zip' good go.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/data_download.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download the data required to establish a BL instance — data_download","text":"","code":"if (FALSE) { # \\dontrun{ # setwd('/media/steppe/hdd/BL_sandbox/geodata_raw') # download_data(path = '/media/steppe/hdd/BL_sandbox') } # }"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/data_setup.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up the downloaded data for a BarnebyLives instance — data_setup","title":"Set up the downloaded data for a BarnebyLives instance — data_setup","text":"data downloaded BarnebyLives use function set used pipeline.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/data_setup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up the downloaded data for a BarnebyLives instance — data_setup","text":"","code":"data_setup(path, pathOut, bound, cleanup)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/data_setup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up the downloaded data for a BarnebyLives instance — data_setup","text":"path Character. path folder output data_download downloaded. Defaults subfolder within working directory ('./geodata_raw'). pathOut Character. Path folder final spatial data placed. Defaults ('.'), create 'geodata' directory within store results. bound Data frame. 'x' 'y' coordinates extent BL instance cover. cleanup Boolean. Whether remove original zip files downloaded. Defaults FALSE. Either mode running function delete uncompressed zip files generated process. FALSE, also bundle downloaded topographic variables directories, e.g. directories 'aspect' rasters go single 'aspect' directory.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/data_setup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set up the downloaded data for a BarnebyLives instance — data_setup","text":"","code":"if (FALSE) { # \\dontrun{ bound <- data.frame(   y = c(42, 42, 44, 44, 42),   x = c(-117, -119, -119, -117, -117) )   setwd('/media/steppe/hdd/BL_sandbox/geodata_raw') data_setup(path = '.', pathOut = '../geodata', bound = bound, cleanup = FALSE) } # }"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/database_templates.html","id":null,"dir":"Reference","previous_headings":"","what":"database_templates — database_templates","title":"database_templates — database_templates","text":"Culled list templates different herbarium database management systems.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/database_templates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"database_templates — database_templates","text":"","code":"database_templates"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/database_templates.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"database_templates — database_templates","text":"data frame","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/database_templates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"database_templates — database_templates","text":"data.frame opportunistically gathered variety herbaria. shows formats spreadsheet document can ordered mass uploads.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/database_templates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"database_templates — database_templates","text":"","code":"head(database_templates) #>   Database                  OutputField          BarnebyLives #> 1 Symbiota               Catalog Number                  <NA> #> 2 Symbiota Additional Identifier Values                  <NA> #> 3 Symbiota                    Collector     Primary_Collector #> 4 Symbiota        Associated Collectors Associated_Collectors #> 5 Symbiota                       Number     Collection_number #> 6 Symbiota                         Date          Date_digital"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/date2text.html","id":null,"dir":"Reference","previous_headings":"","what":"take mdy format date and make it written herbarium label format — date2text","title":"take mdy format date and make it written herbarium label format — date2text","text":"take 'month day year' date format, popular North America, place museum compliant text format","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/date2text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"take mdy format date and make it written herbarium label format — date2text","text":"","code":"date2text(x)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/date2text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"take mdy format date and make it written herbarium label format — date2text","text":"x data frame dates","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/date2text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"take mdy format date and make it written herbarium label format — date2text","text":"","code":"first50dates <- paste0(sample(3:9, size = 10, replace = TRUE), '-',    sample(1:29, size = 10, replace = TRUE), '-',    rep(2023, times = 10)  ) head(first50dates) #> [1] \"9-5-2023\"  \"3-8-2023\"  \"8-1-2023\"  \"4-12-2023\" \"5-19-2023\" \"8-28-2023\" first50dates <- date2text(first50dates) head(first50dates) #> [1] \"5 Sep, 2023\"  \"8 Mar, 2023\"  \"1 Aug, 2023\"  \"12 Apr, 2023\" \"19 May, 2023\" #> [6] \"28 Aug, 2023\""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/date_parser.html","id":null,"dir":"Reference","previous_headings":"","what":"create herbarium format dates for specimens — date_parser","title":"create herbarium format dates for specimens — date_parser","text":"function return two additional columns x. 'coll_date_text' text format date collection 'det_date_text\" shorter text format date identification","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/date_parser.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create herbarium format dates for specimens — date_parser","text":"","code":"date_parser(x, coll_date, det_date)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/date_parser.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create herbarium format dates for specimens — date_parser","text":"x (sf/tibble/) data frame collection date determination date coll_date date collection, expected format 'MM/DD/YYYY', minor checks compliance format carried returning error. det_date date determination, format processes .","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/date_parser.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create herbarium format dates for specimens — date_parser","text":"original data frame plus: x_dmy, x_day, x_month, x_year, x_text, det_date_text, columns parameters supplied inputs","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/date_parser.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"create herbarium format dates for specimens — date_parser","text":"","code":"first50dates <- data.frame(    collection_date = paste0(    sample(3:9, size = 10, replace = TRUE), '-',    sample(1:29, size = 10, replace  = TRUE), '-',    rep(2023, times = 10 ))) dates <- date_parser(first50dates, coll_date = 'collection_date') head(dates) #>   collection_date collection_date_ymd collection_date_day collection_date_mo #> 1       9-19-2023          2023-09-19                  19                  9 #> 2       4-25-2023          2023-04-25                  25                  4 #> 3        5-2-2023          2023-05-02                   2                  5 #> 4        8-8-2023          2023-08-08                   8                  8 #> 5        6-1-2023          2023-06-01                   1                  6 #> 6       4-28-2023          2023-04-28                  28                  4 #>   collection_date_yr collection_date_text #> 1               2023         19 Sep, 2023 #> 2               2023         25 Apr, 2023 #> 3               2023          2 May, 2023 #> 4               2023          8 Aug, 2023 #> 5               2023          1 Jun, 2023 #> 6               2023         28 Apr, 2023"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/directions_grabber.html","id":null,"dir":"Reference","previous_headings":"","what":"Have Google maps help you write directions to a site — directions_grabber","title":"Have Google maps help you write directions to a site — directions_grabber","text":"function helps users write directions site somewhat near roads.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/directions_grabber.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Have Google maps help you write directions to a site — directions_grabber","text":"","code":"directions_grabber(x, api_key)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/directions_grabber.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Have Google maps help you write directions to a site — directions_grabber","text":"x sf/tibble/data frame locations api_key Google developer api key use googleway","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/directions_grabber.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Have Google maps help you write directions to a site — directions_grabber","text":"","code":"# see package vignette"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/directions_overview.html","id":null,"dir":"Reference","previous_headings":"","what":"return a quick route summary from googleway::google_directions — directions_overview","title":"return a quick route summary from googleway::google_directions — directions_overview","text":"function creates quick abstract google maps route, contains travel time, starting location route overview. function operates entirely within 'directions_grabber'.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/directions_overview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"return a quick route summary from googleway::google_directions — directions_overview","text":"","code":"directions_overview(x)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/directions_overview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"return a quick route summary from googleway::google_directions — directions_overview","text":"x results googleway::google_directions API query","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/directions_overview.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"return a quick route summary from googleway::google_directions — directions_overview","text":"","code":"# see 'directions_grabber'"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/dms2dd.html","id":null,"dir":"Reference","previous_headings":"","what":"this function parses coordinates from DMS to decimal degrees — dms2dd","title":"this function parses coordinates from DMS to decimal degrees — dms2dd","text":"function parses coordinates DMS decimal degrees","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/dms2dd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"this function parses coordinates from DMS to decimal degrees — dms2dd","text":"","code":"dms2dd(x, lat, long, dms)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/dms2dd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"this function parses coordinates from DMS to decimal degrees — dms2dd","text":"x input data frame apply operations lat name column holding latitude values long name colymn holding longitude values dms coordinates degrees minutes seconds? TRUE yes, FALSE decimal degrees","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/dms2dd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"this function parses coordinates from DMS to decimal degrees — dms2dd","text":"data frame(/tibble) coordinates unambiguously labeled degrees, minutes, seconds (_dms) decimal degrees (_dd).","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/dms2dd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"this function parses coordinates from DMS to decimal degrees — dms2dd","text":"","code":"coords <- data.frame(   longitude_dd = runif(15, min = -120, max = -100),   latitude_dd = runif(15, min = 35, max = 48) ) coords_formatted <- dms2dd( coords ) head(coords_formatted) #>    longitude_dd latitude_dd latitude_dms longitude_dms #>           <num>       <num>       <char>        <char> #> 1:   -111.63277    43.24169   N 43°14'30   W 111°37'58 #> 2:   -106.62259    46.16266    N 46°9'46   W 106°37'21 #> 3:   -109.84699    42.36963   N 42°22'11   W 109°50'49 #> 4:   -106.79281    38.28896   N 38°17'20   W 106°47'34 #> 5:   -109.76417    46.94444   N 46°56'40   W 109°45'51 #> 6:   -103.28895    46.27555   N 46°16'32   W 103°17'20 colnames(coords_formatted) #> [1] \"longitude_dd\"  \"latitude_dd\"   \"latitude_dms\"  \"longitude_dms\""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/family_spell_check.html","id":null,"dir":"Reference","previous_headings":"","what":"check that family is spelledcorrectly. — family_spell_check","title":"check that family is spelledcorrectly. — family_spell_check","text":"function attempts verify spelling user submitted taxonomic name.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/family_spell_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check that family is spelledcorrectly. — family_spell_check","text":"","code":"family_spell_check(x, path)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/family_spell_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check that family is spelledcorrectly. — family_spell_check","text":"x data frame/ tibble /sf object containing names spell check path path folder containing taxonomic data.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/family_spell_check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"check that family is spelledcorrectly. — family_spell_check","text":"","code":"if (FALSE) { # \\dontrun{ names <- data.frame(  Collection_number = 1:3,  Family = c('Asteracea', 'Flabaceae', 'Onnagraceae') ) spelling <- family_spell_check(names, path = '../taxonomic_data') } # }"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/format_database_import.html","id":null,"dir":"Reference","previous_headings":"","what":"Export a spreadsheet for mass upload to an herbariums database — format_database_import","title":"Export a spreadsheet for mass upload to an herbariums database — format_database_import","text":"schemas currently supported, always seek add .","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/format_database_import.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export a spreadsheet for mass upload to an herbariums database — format_database_import","text":"","code":"format_database_import(x, format)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/format_database_import.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export a spreadsheet for mass upload to an herbariums database — format_database_import","text":"x data frame holding final output BarnebyLives format character vector indicating database create output .","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/format_database_import.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export a spreadsheet for mass upload to an herbariums database — format_database_import","text":"","code":"library(BarnebyLives) dat4import <- format_database_import(collection_examples, format = 'JEPS')  # we also know a bit about our material and can populate it here by hand # dat4import |>   dplyr::mutate(    Label_Footer = 'Collected under the auspices of the Bureau of Land Management',    Coordinate_Uncertainty_In_Meters = 5,     Coordinate_Source = 'iPad') #> # A tibble: 113 × 28 #>    Locality    Coll_Num Coll_Date Main_Collector Other_Collectors ScientificName #>    <chr>          <dbl> <chr>     <chr>          <chr>            <chr>          #>  1 Jumbo.          2819 6 May, 2… Reed Clark Be… NA               Poa secunda J… #>  2 Jumbo.          2820 6 May, 2… Reed Clark Be… NA               Prunus anders… #>  3 Jumbo.          2821 6 May, 2… Reed Clark Be… NA               Layia glandul… #>  4 Jumbo.          2822 6 May, 2… Reed Clark Be… NA               Phlox longifo… #>  5 Washoe Sum…     2823 6 May, 2… Reed Clark Be… NA               Lomatium neva… #>  6 Washoe Sum…     2824 6 May, 2… Reed Clark Be… NA               Camissonia co… #>  7 Washoe Sum…     2825 15 May, … Reed Clark Be… NA               Lomatium neva… #>  8 Washoe Sum…     2826 15 May, … Reed Clark Be… NA               Viola purpure… #>  9 Washoe Sum…     2827 15 May, … Reed Clark Be… NA               Agoseris retr… #> 10 Washoe Sum…     2828 15 May, … Reed Clark Be… NA               Purshia tride… #> # ℹ 103 more rows #> # ℹ 22 more variables: DeterminedBy <chr>, Det_Date_Display <chr>, #> #   Label_Header <chr>, Label_Footer <chr>, Plant_Description <chr>, #> #   Comments <lgl>, Habitat <chr>, Associated_Taxa <chr>, Country <chr>, #> #   State_Province <chr>, County <chr>, Latitude <dbl>, Longitude <dbl>, #> #   Datum <chr>, Coordinate_Uncertainty_In_Meters <dbl>, #> #   Coordinate_Source <chr>, Elevation <chr>, Elevation_Units <chr>, …"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/format_degree.html","id":null,"dir":"Reference","previous_headings":"","what":"ASCII compliant degree symbol — format_degree","title":"ASCII compliant degree symbol — format_degree","text":"function required pass R CMD CHECKS via generating appropriately encoded degree symbol line.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/format_degree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ASCII compliant degree symbol — format_degree","text":"","code":"format_degree(x, symbol = \"°\")"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/format_degree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ASCII compliant degree symbol — format_degree","text":"x value add symbol onto. symbol fixed degree symbol","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/format_degree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ASCII compliant degree symbol — format_degree","text":"","code":"format_degree(180) #> [1] \"180°\""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/geodata_writer.html","id":null,"dir":"Reference","previous_headings":"","what":"write out spatial data for collections to Google Earth or QGIS — geodata_writer","title":"write out spatial data for collections to Google Earth or QGIS — geodata_writer","text":"function write simple labeled vector data (ala 'shapefile') containing just collection number. data (e.g. species) can written using sf::st_write directly. See ?sf details. function defaults writing Google Earth KML files can viewed online without local install program.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/geodata_writer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"write out spatial data for collections to Google Earth or QGIS — geodata_writer","text":"","code":"geodata_writer(x, path, filename, filetype)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/geodata_writer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"write out spatial data for collections to Google Earth or QGIS — geodata_writer","text":"x data frame(/sf/tibble) least undergone 'dms2dd' 'coords2sf' functions BarnebyLives. path location save data . supplied defaults current working directory. filename name file. supplied defaults appending todays date 'Collections' filetype file format save data . wrapper sf::st_write support drivers used . supplied defaults kml use Google Earth.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/geological_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up the downloaded data for a BarnebyLives instance — geological_map","title":"Set up the downloaded data for a BarnebyLives instance — geological_map","text":"used within data_setup","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/geological_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up the downloaded data for a BarnebyLives instance — geological_map","text":"","code":"geological_map(path, pathOut, tile_cells)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/get_google_directions.html","id":null,"dir":"Reference","previous_headings":"","what":"identify a populated place near a collection and get directions from there — get_google_directions","title":"identify a populated place near a collection and get directions from there — get_google_directions","text":"function identifies closest populated place, makes google API call via 'googleway' package get directions collection site. function operates entirely within 'directions_grabber'","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/get_google_directions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"identify a populated place near a collection and get directions from there — get_google_directions","text":"","code":"get_google_directions(x, api_key)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/get_google_directions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"identify a populated place near a collection and get directions from there — get_google_directions","text":"x sf/tibble/dataframe locations api_key google developer api key use googleway","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/get_google_directions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"identify a populated place near a collection and get directions from there — get_google_directions","text":"","code":"# see 'directions_grabber'"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/google_towns.html","id":null,"dir":"Reference","previous_headings":"","what":"This is a reproduced and slightly curated list of populated places. — google_towns","title":"This is a reproduced and slightly curated list of populated places. — google_towns","text":"sf/tibble/data.frame data set derived U.S. Census Bureaus tigris::places() data set. centroid place rounded three decimal places reduce size.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/google_towns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This is a reproduced and slightly curated list of populated places. — google_towns","text":"","code":"data(google_towns)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/google_towns.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"This is a reproduced and slightly curated list of populated places. — google_towns","text":"tibble two variables three observations","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/herbaria_info.html","id":null,"dir":"Reference","previous_headings":"","what":"herbaria_info — herbaria_info","title":"herbaria_info — herbaria_info","text":"small data frame herbaria contact info","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/herbaria_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"herbaria_info — herbaria_info","text":"","code":"herbaria_info"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/herbaria_info.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"herbaria_info — herbaria_info","text":"data frame columns relevant letter heads","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/herbaria_info.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"herbaria_info — herbaria_info","text":"data.frame data set derived Index Herbariorum features places many collectors send specimens .","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/herbaria_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"herbaria_info — herbaria_info","text":"","code":"head(herbaria_info) #>   Abbreviation         Contact                      Name1 #> 1           US   Erika Gardner    U.S. National Herbarium #> 2         RENO     Jerry Tiehm                  Herbarium #> 3          UTC Kristian Valles    Intermountain Herbarium #> 4          OSC   James Mickley                  Herbarium #> 5         CHIC    Nyree Zerega Nancy Rich Poole Herbarium #> 6         NSDA     Jeff Knight                  Herbarium #>                                                       Name2    State #> 1                             Smithsonian Institution, NMNH          #> 2 Department of Natural Resources and Environmental Science   Nevada #> 3                                        College of Science     Utah #> 4                     Botany and Plant Pathology Department   Oregon #> 5                         Plant Conservation Science Center Illinois #> 6                            Nevada Division of Agriculture   Nevada #>               City    ZipCode                       Street #> 1 Washington, D.C.      20560 10th & Constitution Ave., NW #> 2             Reno      89557 1664 N. Virginia St., MS-186 #> 3            Logan 84322-5305           5305 Old Main Hill #> 4        Corvallis      97331           2701 SW Campus Way #> 5          Glencoe      60022          1000 Lake Cook Road #> 6           Sparks      89431            405 S 21st Street"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/ipni_authors.html","id":null,"dir":"Reference","previous_headings":"","what":"IPNI author abbreviations — ipni_authors","title":"IPNI author abbreviations — ipni_authors","text":"vector ipni standard author abbreviations","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/ipni_authors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IPNI author abbreviations — ipni_authors","text":"","code":"data(ipni_authors)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/ipni_authors.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"IPNI author abbreviations — ipni_authors","text":"character vector","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/label_writer.html","id":null,"dir":"Reference","previous_headings":"","what":"write herbarium labels to pdf — label_writer","title":"write herbarium labels to pdf — label_writer","text":"function uses BarnebyLives custom template write labels ala mail merge. label written separate file dimensions 4x4 inches.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/label_writer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"write herbarium labels to pdf — label_writer","text":"","code":"label_writer(x, outdir)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/label_writer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"write herbarium labels to pdf — label_writer","text":"x path csv labels cleaned BL, analyst evaluated conflicts. outdir output directory hold files.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/label_writer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"write herbarium labels to pdf — label_writer","text":"","code":"if (FALSE) { # \\dontrun{ label_writer(collection_examples, BL_label_example) } # }"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/make_it_political.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up the downloaded data for a BarnebyLives instance — make_it_political","title":"Set up the downloaded data for a BarnebyLives instance — make_it_political","text":"used within data_setup","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/make_it_political.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up the downloaded data for a BarnebyLives instance — make_it_political","text":"","code":"make_it_political(path, pathOut, tile_cells)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/make_tiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up the downloaded data for a BarnebyLives instance — make_tiles","title":"Set up the downloaded data for a BarnebyLives instance — make_tiles","text":"used within data_setup","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/make_tiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up the downloaded data for a BarnebyLives instance — make_tiles","text":"","code":"make_tiles(bound, bb_vals)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/map_maker.html","id":null,"dir":"Reference","previous_headings":"","what":"make a quick county dot map to display the location of the collection — map_maker","title":"make a quick county dot map to display the location of the collection — map_maker","text":"use sf create 20th centtury style 'dot map' features state boundary county lines.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/map_maker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"make a quick county dot map to display the location of the collection — map_maker","text":"","code":"map_maker(x, states, path, collection_col)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/map_maker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"make a quick county dot map to display the location of the collection — map_maker","text":"x sf dataframe coordinates make maps , requires collection number spatial attributes states sf object united states ala tigris::states() path directory store map images merging collection_col column specify collection number UNIQUE id collection","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/map_maker.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"make a quick county dot map to display the location of the collection — map_maker","text":"","code":"# see the package vignette"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/mason.html","id":null,"dir":"Reference","previous_headings":"","what":"a wrapper around terra::makeTiles for setting the domain of a project — mason","title":"a wrapper around terra::makeTiles for setting the domain of a project — mason","text":"projects large spatial domains using relatively high resolution data, help make virtual tiles need held memory project.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/mason.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a wrapper around terra::makeTiles for setting the domain of a project — mason","text":"","code":"mason(path, pathOut, tile_cellsV)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/mason.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"a wrapper around terra::makeTiles for setting the domain of a project — mason","text":"path input directory geographic data. pathOut output directory final data product go. Fn automatically create folders product type. tile_cellsV output make_tiles","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/notFound.html","id":null,"dir":"Reference","previous_headings":"","what":"notify user if an entry had any results not found in POWO — notFound","title":"notify user if an entry had any results not found in POWO — notFound","text":"simple function run 'powo_searcher' results show species found ","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/notFound.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"notify user if an entry had any results not found in POWO — notFound","text":"","code":"notFound(x)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/notFound.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"notify user if an entry had any results not found in POWO — notFound","text":"x output 'powo_searcher' binding rows","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/notFound.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"notify user if an entry had any results not found in POWO — notFound","text":"messages consoles indicating search terms, status failed found. desirable 'powo_searcher' squashes errors.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/notFound.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"notify user if an entry had any results not found in POWO — notFound","text":"","code":"library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union library(crayon) if (FALSE) { # \\dontrun{ names_vec <- data(names_vec) # 10 random species from taxize, usually 1 or 2 species are not found in Plants of the world online pow_results <- lapply(names_vec, powo_searcher) |>   dplyr::bind_rows() # pow_results[,1:5] # if there is not a family which is 'NOT FOUND', reshuffle the random species from taxize. notFound(pow_results) # little message. } # }"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/physical_grabber.html","id":null,"dir":"Reference","previous_headings":"","what":"gather physical characteristics of the site — physical_grabber","title":"gather physical characteristics of the site — physical_grabber","text":"function grabs information elevation, azimuth, geomorphon, geology site","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/physical_grabber.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gather physical characteristics of the site — physical_grabber","text":"","code":"physical_grabber(x, path)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/physical_grabber.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"gather physical characteristics of the site — physical_grabber","text":"x sf data frame collection points path path directory holding BarnebyLivesGeodata","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/physical_grabber.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"gather physical characteristics of the site — physical_grabber","text":"","code":"#see the package vignette"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/places_and_spaces.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up the downloaded data for a BarnebyLives instance — places_and_spaces","title":"Set up the downloaded data for a BarnebyLives instance — places_and_spaces","text":"used within data_setup","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/places_and_spaces.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up the downloaded data for a BarnebyLives instance — places_and_spaces","text":"","code":"places_and_spaces(path, pathOut, bound)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/political_grabber.html","id":null,"dir":"Reference","previous_headings":"","what":"gather political site information — political_grabber","title":"gather political site information — political_grabber","text":"function grabs information state, county, township collections","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/political_grabber.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gather political site information — political_grabber","text":"","code":"political_grabber(x, y, path)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/political_grabber.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"gather political site information — political_grabber","text":"x sf data frame collection points y variable uniquely identifies observation path path directory holding BarnebyLivesGeodata","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/political_grabber.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"gather political site information — political_grabber","text":"","code":"# see the package vignette"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/powNAce.html","id":null,"dir":"Reference","previous_headings":"","what":"Easily compare POW column to input columns — powNAce","title":"Easily compare POW column to input columns — powNAce","text":"pronounced 'pounce'. querying POW database via 'powo_searcher' function mark POW cells identical input (verified cleaned) NA ideally making easier person process results prepare data sharing via labels digitally.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/powNAce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Easily compare POW column to input columns — powNAce","text":"","code":"powNAce(x)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/powNAce.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Easily compare POW column to input columns — powNAce","text":"x sf/data frame/tibble input POW ran data ","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/powNAce.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Easily compare POW column to input columns — powNAce","text":"","code":"if (FALSE) { # \\dontrun{ df <- data.frame(  POW_Genus = c('Castilleja', 'Linnaea', 'Dimeresia'),  POW_Epithet = c('pilosa', 'borealis', 'howellii'),  POW_Infrarank = c('var.', 'var.', NA),  POW_Infraspecies =  c('pilosa', 'americana', NA),  POW_Authority =  c('(S. Watson) Rydb.', '(J. Forbes) Rehder', 'A. Gray') ) powNAce(df) } # }"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/powo_searcher.html","id":null,"dir":"Reference","previous_headings":"","what":"query plants of the world online for taxonomic information — powo_searcher","title":"query plants of the world online for taxonomic information — powo_searcher","text":"wrapper kewr::search_powo","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/powo_searcher.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"query plants of the world online for taxonomic information — powo_searcher","text":"","code":"powo_searcher(x)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/powo_searcher.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"query plants of the world online for taxonomic information — powo_searcher","text":"x vector species names submit, clean spelling notes: results observed fail valid infraspecies Kew's end, seem mention valid infraspecies.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/powo_searcher.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"query plants of the world online for taxonomic information — powo_searcher","text":"","code":"library(dplyr) pow_results <- lapply(       c('Linnaea borealis var. borealis', 'Linnaea borealis var. americana',       'Astragalus purshii', 'Pinus ponderosa'),       powo_searcher) |>    dplyr::bind_rows() head(pow_results) #>                         POW_Query     POW_Family #> 1  Linnaea borealis var. borealis Caprifoliaceae #> 2 Linnaea borealis var. americana Caprifoliaceae #> 3              Astragalus purshii       Fabaceae #> 4                 Pinus ponderosa       Pinaceae #>                                     POW_Name_authority #> 1                    Linnaea borealis L. var. borealis #> 2 Linnaea borealis L. var. americana (J.Forbes) Rehder #> 3                  Astragalus purshii Douglas ex G.Don #> 4                  Pinus ponderosa Douglas ex C.Lawson #>                     POW_Full_name POW_Binom_authority  POW_Genus POW_Epithet #> 1  Linnaea borealis var. borealis                  L.    Linnaea    borealis #> 2 Linnaea borealis var. americana                  L.    Linnaea    borealis #> 3              Astragalus purshii    Douglas ex G.Don Astragalus     purshii #> 4                 Pinus ponderosa Douglas ex C.Lawson      Pinus   ponderosa #>   POW_Infrarank POW_Infraspecies POW_Infra_authority #> 1          var.         borealis                <NA> #> 2          var.        americana   (J.Forbes) Rehder #> 3          <NA>             <NA>                <NA> #> 4          <NA>             <NA>                <NA>"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/process_gmba.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up the downloaded data for a BarnebyLives instance — process_gmba","title":"Set up the downloaded data for a BarnebyLives instance — process_gmba","text":"used within data_setup","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/process_gmba.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up the downloaded data for a BarnebyLives instance — process_gmba","text":"","code":"process_gmba(path, pathOut, tile_cells)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/process_gnis.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up the downloaded data for a BarnebyLives instance — process_gnis","title":"Set up the downloaded data for a BarnebyLives instance — process_gnis","text":"used within data_setup","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/process_gnis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up the downloaded data for a BarnebyLives instance — process_gnis","text":"","code":"process_gnis(path, pathOut, bound)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/process_grazing_allot.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up the downloaded data for a BarnebyLives instance — process_grazing_allot","title":"Set up the downloaded data for a BarnebyLives instance — process_grazing_allot","text":"used within data_setup","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/process_grazing_allot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up the downloaded data for a BarnebyLives instance — process_grazing_allot","text":"","code":"process_grazing_allot(path, pathOut, tile_cells)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/process_padus.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up the downloaded data for a BarnebyLives instance — process_padus","title":"Set up the downloaded data for a BarnebyLives instance — process_padus","text":"used within data_setup","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/process_padus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up the downloaded data for a BarnebyLives instance — process_padus","text":"","code":"process_padus(path, pathOut, bound, tile_cells)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/process_plss.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up the downloaded data for a BarnebyLives instance — process_plss","title":"Set up the downloaded data for a BarnebyLives instance — process_plss","text":"used within data_setup","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/process_plss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up the downloaded data for a BarnebyLives instance — process_plss","text":"","code":"process_plss(path, pathOut, tile_cells)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/project_examples.html","id":null,"dir":"Reference","previous_headings":"","what":"project_examples — project_examples","title":"project_examples — project_examples","text":"small data frame examples collection projects","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/project_examples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"project_examples — project_examples","text":"","code":"project_examples"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/project_examples.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"project_examples — project_examples","text":"data frame projects contact info","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/project_examples.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"project_examples — project_examples","text":"small data frame examples collection projects","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/project_examples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"project_examples — project_examples","text":"","code":"head(project_examples) #>   Project             Name           Organization          Person        Phone #> 1     SOS Seeds of Success Chicago Botanic Garden Reed Benkendorf 815-355-0631 #>                            Email #> 1 rbenkendorf@chicagobotanic.org"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/randomNames.html","id":null,"dir":"Reference","previous_headings":"","what":"10 random plant names from taxize — randomNames","title":"10 random plant names from taxize — randomNames","text":"vector taxize::names_list(rank = 'species', size = 10)","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/randomNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"10 random plant names from taxize — randomNames","text":"","code":"data(names_vec)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/randomNames.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"10 random plant names from taxize — randomNames","text":"character vector","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/result_grabber.html","id":null,"dir":"Reference","previous_headings":"","what":"collect the results of a successful powo search — result_grabber","title":"collect the results of a successful powo search — result_grabber","text":"function used within 'powo_searcher' retrieve results successful POWO query.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/result_grabber.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"collect the results of a successful powo search — result_grabber","text":"","code":"result_grabber(x)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/result_grabber.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"collect the results of a successful powo search — result_grabber","text":"x successful powo search query","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/shipping_examples.html","id":null,"dir":"Reference","previous_headings":"","what":"shipping_examples — shipping_examples","title":"shipping_examples — shipping_examples","text":"list set specimens package author shipped.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/shipping_examples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"shipping_examples — shipping_examples","text":"","code":"shipping_examples"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/shipping_examples.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"shipping_examples — shipping_examples","text":"data frame","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/shipping_examples.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"shipping_examples — shipping_examples","text":"data.frame based specimens sent somewhere, randomly sampled collection.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/shipping_examples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"shipping_examples — shipping_examples","text":"","code":"head(shipping_examples) #>   Collection_number     Primary_Collector                     Full_name #> 1              2833 Reed Clark Benkendorf              Elymus elymoides #> 2              2834 Reed Clark Benkendorf                   Poa secunda #> 3              2835 Reed Clark Benkendorf       Nothocalais troximoides #> 4              2836 Reed Clark Benkendorf Castilleja pilosa var. pilosa #> 5              2837 Reed Clark Benkendorf          Neoholmgrenia andina #> 6              2838 Reed Clark Benkendorf             Allium acuminatum"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/site_writer.html","id":null,"dir":"Reference","previous_headings":"","what":"gather distance and azimuth from site to center of town — site_writer","title":"gather distance and azimuth from site to center of town — site_writer","text":"Help provide simple context building ","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/site_writer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gather distance and azimuth from site to center of town — site_writer","text":"","code":"site_writer(x, path)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/site_writer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"gather distance and azimuth from site to center of town — site_writer","text":"x sf/tibble/dataframe locations associated nearest locality data path path gnis_places","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/site_writer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"gather distance and azimuth from site to center of town — site_writer","text":"","code":"if (FALSE) { # \\dontrun{ library(sf) sites <- data.frame(  longitude_dd = runif(15, min = -120, max = -100),  latitude_dd = runif(15, min = 35, max = 48)  ) |>  sf::st_as_sf(coords = c('longitude_dd', 'latitude_dd'), crs = 4326)  head(sites) distaze_results <- site_writer(sites) # takes some time head(distaze_results) } # }"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/species_font.html","id":null,"dir":"Reference","previous_headings":"","what":"ensure proper italicization of a associated species — species_font","title":"ensure proper italicization of a associated species — species_font","text":"function works time label creation ensure abbreviations 'species' 'variety' italicized, per convention.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/species_font.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ensure proper italicization of a associated species — species_font","text":"","code":"species_font(x)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/species_font.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ensure proper italicization of a associated species — species_font","text":"x value feed label merge","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/species_font.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ensure proper italicization of a associated species — species_font","text":"","code":"associates <- c('Eriogonum ovalifolium var. purpureum, Castilleja sp., Crepis spp.') species_font(associates) #> [1] \"*Eriogonum ovalifolium* var. *purpureum, Castilleja* sp., *Crepis* spp.\""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/specificDirections.html","id":null,"dir":"Reference","previous_headings":"","what":"Import Google directions to a site — specificDirections","title":"Import Google directions to a site — specificDirections","text":"Use Google Maps write directions site, people re-locating site need use Google Maps write directions site. crude require refinement relevant applications. function operates entirely within 'directions_grabber'","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/specificDirections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import Google directions to a site — specificDirections","text":"","code":"specificDirections(x)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/specificDirections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import Google directions to a site — specificDirections","text":"x output directions_grabber","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/specificDirections.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import Google directions to a site — specificDirections","text":"","code":"# see 'directions_grabber'#"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/spell_check.html","id":null,"dir":"Reference","previous_headings":"","what":"check that genera and specific epithets are spelled (almost) correctly — spell_check","title":"check that genera and specific epithets are spelled (almost) correctly — spell_check","text":"function attempts verify spelling user submitted taxonomic name. necessary proceed step-wise name pieces attempting place .","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/spell_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check that genera and specific epithets are spelled (almost) correctly — spell_check","text":"","code":"spell_check(data, column, path)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/spell_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check that genera and specific epithets are spelled (almost) correctly — spell_check","text":"data data frame/ tibble /sf object containing names spell check column column containing full name, genus, species, infraspecific rank information relevant. path path folder containing taxonomic data.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/spell_check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"check that genera and specific epithets are spelled (almost) correctly — spell_check","text":"","code":"if (FALSE) { # \\dontrun{ names <- data.frame(  Full_name = c('Astagalus purshii', 'Linnaeus borealius ssp. borealis',   'Heliumorus multifora', NA, 'Helianthus annuus'),  Genus = c('Astagalus', 'Linnaeus', 'Heliumorus', NA, 'Helianthus'),  Epithet = c('purshii', 'borealius', 'multifora', NA, 'annuus')) names_l <- split(names, f = 1:nrow(names)) r <- lapply(names_l, spell_check, column = 'Full_name', path = p2tax) } # }"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/split_scientificName.html","id":null,"dir":"Reference","previous_headings":"","what":"split out a scientific input column to pieces — split_scientificName","title":"split out a scientific input column to pieces — split_scientificName","text":"function attempts split scientific name component pieces. Given input scientific, scientific scientific authorities infraspecies function parse columns used BarnebyLives pipeline.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/split_scientificName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"split out a scientific input column to pieces — split_scientificName","text":"","code":"split_scientificName(x, sciName_col, overwrite)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/split_scientificName.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"split out a scientific input column to pieces — split_scientificName","text":"x Dataframe collection information. sciName_col Character. Column containing data parse overwrite Boolean. Whether overwrite original input columns, simply append spell checked columns.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/split_scientificName.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"split out a scientific input column to pieces — split_scientificName","text":"","code":"library(BarnebyLives) ce <- collection_examples ce <- data.frame(   Collection_number = ce$Collection_number[sample(1:nrow(ce), size = 100, replace = FALSE)],   Binomial = c(ce$Full_name, ce$Name_authority)[sample(1:nrow(ce)*2, size = 100, replace = FALSE)],   Binomial_authority = ce$Binomial_authority[sample(1:nrow(ce), size = 100, replace = FALSE)] ) # extra columns to challenge name search - values are meaningless  split_scientificName(ce)|> head() #> `sciName_col` argument not supplied, using: Binomial #>   Collection_number                  x...sciName_col.        Genus    Epithet #> 1              2858              Cordylanthus ramosus Cordylanthus    ramosus #> 2              2829          Scutellaria nana A. Gray  Scutellaria       nana #> 3              2861                Astragalus filipes   Astragalus    filipes #> 4              2859              Sphaeralcea munroana  Sphaeralcea   munroana #> 5              2928                    Diplacus nanus     Diplacus      nanus #> 6              2834 Bromus sitchensis var. marginatus       Bromus sitchensis #>         Binomial_authority       Name_authority Infraspecific_rank Infraspecies #> 1     Cordylanthus ramosus Cordylanthus ramosus               <NA>         <NA> #> 2 Scutellaria nana A. Gray              A. Gray               <NA>         <NA> #> 3       Astragalus filipes   Astragalus filipes               <NA>         <NA> #> 4     Sphaeralcea munroana Sphaeralcea munroana               <NA>         <NA> #> 5           Diplacus nanus       Diplacus nanus               <NA>         <NA> #> 6        Bromus sitchensis    Bromus sitchensis               <NA>         <NA> #>   Infraspecific_authority #> 1                    <NA> #> 2                    <NA> #> 3                    <NA> #> 4                    <NA> #> 5                    <NA> #> 6                    <NA> split_scientificName(ce, sciName_col = 'Binomial') |> head() #>   Collection_number                  x...sciName_col.        Genus    Epithet #> 1              2858              Cordylanthus ramosus Cordylanthus    ramosus #> 2              2829          Scutellaria nana A. Gray  Scutellaria       nana #> 3              2861                Astragalus filipes   Astragalus    filipes #> 4              2859              Sphaeralcea munroana  Sphaeralcea   munroana #> 5              2928                    Diplacus nanus     Diplacus      nanus #> 6              2834 Bromus sitchensis var. marginatus       Bromus sitchensis #>         Binomial_authority       Name_authority Infraspecific_rank Infraspecies #> 1     Cordylanthus ramosus Cordylanthus ramosus               <NA>         <NA> #> 2 Scutellaria nana A. Gray              A. Gray               <NA>         <NA> #> 3       Astragalus filipes   Astragalus filipes               <NA>         <NA> #> 4     Sphaeralcea munroana Sphaeralcea munroana               <NA>         <NA> #> 5           Diplacus nanus       Diplacus nanus               <NA>         <NA> #> 6        Bromus sitchensis    Bromus sitchensis               <NA>         <NA> #>   Infraspecific_authority #> 1                    <NA> #> 2                    <NA> #> 3                    <NA> #> 4                    <NA> #> 5                    <NA> #> 6                    <NA>"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/tileSelector.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine which raster tiles to download for topographic variables — tileSelector","title":"Determine which raster tiles to download for topographic variables — tileSelector","text":"Given bounding box, defining spatial extent study area, return list tiles names need downloaded cover area.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/tileSelector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine which raster tiles to download for topographic variables — tileSelector","text":"","code":"tileSelector(bound)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/tileSelector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine which raster tiles to download for topographic variables — tileSelector","text":"bound Data frame. 'x' 'y' coordinates extent BL instance cover.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/tileSelector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine which raster tiles to download for topographic variables — tileSelector","text":"","code":"if (FALSE) { # \\dontrun{ bound <- data.frame(   y = c(30.1, 30.1, 49.5, 49.5, 30.1),   x = c(-126, -82, -82, -126, -126) )  bound <- data.frame(   y = c(15, 50, 75, 44, 15),   x = c(-63, -64, -180, -180, -180) )  tileSelector(bound) } # }"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/try_again.html","id":null,"dir":"Reference","previous_headings":"","what":"try to download from Kew again, with just the binomial — try_again","title":"try to download from Kew again, with just the binomial — try_again","text":"several infra species fail POWO, retry query just base name. accessed directly user used inside 'powo_searcher'","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/try_again.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"try to download from Kew again, with just the binomial — try_again","text":"","code":"try_again(x)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/try_again.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"try to download from Kew again, with just the binomial — try_again","text":"x output first step 'powo_searcher'","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/wcvp_update.html","id":null,"dir":"Reference","previous_headings":"","what":"install or update World Vascular Plants Checklist — wcvp_update","title":"install or update World Vascular Plants Checklist — wcvp_update","text":"function checks see whether version WCVP current, , re-download WCVP set BL taxonomy structure.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/wcvp_update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"install or update World Vascular Plants Checklist — wcvp_update","text":"","code":"wcvp_update(tax_dat_p)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/wcvp_update.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"install or update World Vascular Plants Checklist — wcvp_update","text":"tax_dat_p path taxonomic data, raw wcvp.zip .","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/wcvp_update.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"install or update World Vascular Plants Checklist — wcvp_update","text":"","code":"if (FALSE) { # \\dontrun{ wcvp_update('/home/sagesteppe/Downloads') } # }"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/writer.html","id":null,"dir":"Reference","previous_headings":"","what":"write values and collapse NAs — writer","title":"write values and collapse NAs — writer","text":"function determine whether print variable onto labels hide ","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/writer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"write values and collapse NAs — writer","text":"","code":"writer(x, italics)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/writer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"write values and collapse NAs — writer","text":"x input character length 1 italics italicize ? Boolean, defaults FALSE","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/writer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"write values and collapse NAs — writer","text":"","code":"writer(collection_examples[9,'Binomial_authority'] ) #> # A tibble: 1 × 1 #>   Binomial_authority #>   <chr>              #> 1 Greene             writer(collection_examples[9, 'Infraspecies'], italics = TRUE ) #> [1] \"\""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/writer2.html","id":null,"dir":"Reference","previous_headings":"","what":"write values and collapse NAs — writer2","title":"write values and collapse NAs — writer2","text":"function determine whether print variable onto labels hide ","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/writer2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"write values and collapse NAs — writer2","text":"","code":"writer2(x, italics, period)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/writer2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"write values and collapse NAs — writer2","text":"x input character length 1 italics italicize ? Boolean, defaults FALSE period Boolean, whether add period end string. Defaults FALSE.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/writer2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"write values and collapse NAs — writer2","text":"","code":"writer(collection_examples[9,'Binomial_authority'] ) #> # A tibble: 1 × 1 #>   Binomial_authority #>   <chr>              #> 1 Greene             writer(collection_examples[9, 'Infraspecies'], italics = TRUE ) #> [1] \"\""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/writer_fide.html","id":null,"dir":"Reference","previous_headings":"","what":"do or don't write determination information — writer_fide","title":"do or don't write determination information — writer_fide","text":"functions determines whether write information determined specimen , via texts. used final step formatting labels.","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/writer_fide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"do or don't write determination information — writer_fide","text":"","code":"writer_fide(x)"},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/writer_fide.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"do or don't write determination information — writer_fide","text":"x data frame holding values","code":""},{"path":"https://sagesteppe.github.io/BarnebyLives/reference/writer_fide.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"do or don't write determination information — writer_fide","text":"","code":"text <- data.frame( Fide = c('Michigan Flora Book (emphatic)',         'Michigan Flora Book (emphatic) verbose',         'Michigan Flora Book'), Determined_by = rep('Marabeth', 3), Determined_date_text = rep('a day in time', 3) ) |>  split(f = 1:3)  lapply(text, writer_fide) #> $`1` #> [1] \"Fide: *Michigan Fl. Book *(emphatic), det.: Marabeth, a day in time.\" #>  #> $`2` #> [1] \"Fide: *Michigan Fl. Book *(emphatic)* verbose*, det.: Marabeth, a day in time.\" #>  #> $`3` #> [1] \"Fide: *Michigan Fl. Book*, det.: Marabeth, a day in time.\" #>"}]
