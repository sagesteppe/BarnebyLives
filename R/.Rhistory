library(BarnebyLives)
lapply(data$Full_name[1:4], powo_searcher) |>
bind_rows()
library(tidyverse)
library(BarnebyLives)
library(googlesheets4)
googledrive::drive_auth("reedbenkendorf27@gmail.com")
# read in data from the sheet to process
input <- googlesheets4::read_sheet('1iOQBNeGqRJ3yhA-Sujas3xZ2Aw5rFkktUKv3N_e4o8M',
sheet = 'Data Entry - Examples') %>%
mutate(UNIQUEID = paste0(Primary_Collector, Collection_number))
data <- date_parser(input, 'Date_digital')
dplyr::select(data, starts_with('Date')) %>%
utils::head()
data <- dms2dd(data, dms = F)
dplyr::select(data, starts_with(c('latitude', 'longitude'))) %>%
utils::head()
data <- coords2sf(data)
head(data) # now we can see that it is an sf object
data <- political_grabber(data, y = 'UNIQUEID', path = '/hdd/Barneby_Lives-dev/geodata')
data <- site_writer(data, path = '/hdd/Barneby_Lives-dev/geodata')
data <- physical_grabber(data, path = '/hdd/Barneby_Lives-dev/geodata')
spell_check(x = names_vec, path = '/hdd/Barneby_Lives-dev/taxonomic_data')
View(data)
data$
spell_check(x = data, path = '/hdd/Barneby_Lives-dev/taxonomic_data')
spell_check(x = data, path = '/hdd/Barneby_Lives-dev/taxonomic_data')
data <- author_check(data, path = '/hdd/Barneby_Lives-dev/taxonomic_data')
devtools::install_github('sagesteppe/BarnebyLives')
library(BarnebyLives)
spell_check(x = data, path = '/hdd/Barneby_Lives-dev/taxonomic_data')
data <- author_check(data, path = '/hdd/Barneby_Lives-dev/taxonomic_data')
lapply(data$Full_name[1:4], powo_searcher) |>
bind_rows()
#' @examples
#' data.frame(
#'   Genus = c('Castilleja', 'Linnaea')
#'   Epithet = c('pilosa', 'borealis'),
#'   Infrarank = c('var.', 'var.'),
#'   Infraspecies =  c('pilosa', americana'),
#'   Authority =  c(0)
#' )
#'
#' @export
powNAce <- function(x){
compareNA <- function(v1,v2) {
same <- (v1 == v2)  |  (is.na(v1) & is.na(v2))
same[is.na(same)] <- FALSE
return(same)
} # @ BEN STACK O 16822426
# work on identifying whether the author is for the species or infra species
if(!is.na(x$POW_Infrarank)) {  # ... check if infraspecies exists in first place ? it not default species
x$POW_Binomial_authority = x$POW_authority} else if (x$POW_Epithet == x$POW_Infraspecies){
# check if autonym is present
x$POW_Binomial_authority = x$POW_authority}
if(is.na(x$POW_Infrarank) & x$POW_Infrarank != x$POW_Epithet){
x$POW_Infraspecies_authority = x$POW_Epithet
} # if infraspecies present which != species, than author is presumed infra
#  x[compareNA(x$POW_Name_authority, x$Name_authority ), 'POW_Name_authority'] <- NA
#  x[compareNA(x$POW_Full_name, x$Full_name ), 'POW_Full_name'] <- NA
#  x[compareNA(x$POW_Genus, x$Genus ), 'POW_Genus'] <- NA
#  x[compareNA(x$POW_Epithet, x$Epithet ), 'POW_Epithet'] <- NA
#  x[compareNA(x$POW_Infrarank, x$Infrarank ), 'POW_Infrarank'] <- NA
#  x[compareNA(x$POW_Infraspecies, x$Infraspecies ), 'POW_Infraspecies'] <- NA
#  x[compareNA(x$POW_Family, x$Family ), 'POW_Family'] <- NA
#   return(x)
}
df <- data.frame(
Genus = c('Castilleja', 'Linnaea', 'Dimeresia')
Epithet = c('pilosa', 'borealis', 'howellii'),
df <- data.frame(
Genus = c('Castilleja', 'Linnaea', 'Dimeresia')
Epithet = c('pilosa', 'borealis', 'howellii'),
df <- data.frame(
Genus = c('Castilleja', 'Linnaea', 'Dimeresia'),
Epithet = c('pilosa', 'borealis', 'howellii'),
Infrarank = c('var.', 'var.', NA),
Infraspecies =  c('pilosa', 'americana', NA),
Authority =  c('(S. Watson) Rydb.', '(J. Forbes) Rehder', 'A. Gray')
)
df <- data.frame(
Genus = c('Castilleja', 'Linnaea', 'Dimeresia'),
Epithet = c('pilosa', 'borealis', 'howellii'),
Infrarank = c('var.', 'var.', NA),
Infraspecies =  c('pilosa', 'americana', NA),
Authority =  c('(S. Watson) Rydb.', '(J. Forbes) Rehder', 'A. Gray')
)
df <- data.frame(
POW_Genus = c('Castilleja', 'Linnaea', 'Dimeresia'),
POW_Epithet = c('pilosa', 'borealis', 'howellii'),
POW_Infrarank = c('var.', 'var.', NA),
POW_Infraspecies =  c('pilosa', 'americana', NA),
POW_Authority =  c('(S. Watson) Rydb.', '(J. Forbes) Rehder', 'A. Gray')
)
powNAce(df)
powNAce(df)
!is.na(df$POW_Infrarank)
powNAce(df)
!is.na(df$POW_Infrarank)
x$POW_Binomial_authority = x$POW_authority}
df$POW_Binomial_authority = df$POW_authority}
if( !is.na(df$POW_Infrarank)) {   df$POW_Binomial_authority = df$POW_authority}
col_creator <- function(x){
if(!is.na(x$POW_Infrarank)) {  # ... check if infraspecies exists in first place ? it not default species
x$POW_Binomial_authority = x$POW_authority} else if (x$POW_Epithet == x$POW_Infraspecies){
# check if autonym is present
x$POW_Binomial_authority = x$POW_authority}
if(is.na(x$POW_Infrarank) & x$POW_Infrarank != x$POW_Epithet){
x$POW_Infraspecies_authority = x$POW_Epithet
} # if infraspecies present which != species, than author is presumed infra
}
apply(df, MARGIN = 2, FUN = col_creator())
apply(X = df, MARGIN = 2, FUN = col_creator())
apply
?apply
apply(X = df, MARGIN = 2, FUN = col_creator)
apply(X = df, MARGIN = 2, FUN = col_creator)
apply(X = df, MARGIN = 1, FUN = col_creator)
apply(X = df, MARGIN = 1, FUN = col_creator)
col_creator <- function(x){
if(!is.na(x$POW_Infrarank)) {  # ... check if infraspecies exists in first place ? it not default species
x$POW_Binomial_authority = x$POW_authority} else if (x$POW_Epithet == x$POW_Infraspecies){
# check if autonym is present
x$POW_Binomial_authority = x$POW_authority}
#     if(is.na(x$POW_Infrarank) & x$POW_Infrarank != x$POW_Epithet){
#       x$POW_Infraspecies_authority = x$POW_Epithet
#    } # if infraspecies present which != species, than author is presumed infra
}
apply(X = df, MARGIN = 1, FUN = col_creator)
View(df)
!is.na(x$POW_Infrarank))
!is.na(x$POW_Infrarank)
!is.na(x$POW_Infrarank)
!is.na(df$POW_Infrarank)
!is.na(df$POW_Infrarank[1])
bong <- function(x){print(x)}
apply(X= DF, MARGIN = 1, FUN = col_creator)
apply(X= df, MARGIN = 1, FUN = col_creator)
apply(X= df, MARGIN = 2, FUN = col_creator)
df <- data.frame(
POW_Genus = c('Castilleja', 'Linnaea', 'Dimeresia'),
POW_Epithet = c('pilosa', 'borealis', 'howellii'),
POW_Infrarank = c('var.', 'var.', NA),
POW_Infraspecies =  c('pilosa', 'americana', NA),
POW_Authority =  c('(S. Watson) Rydb.', '(J. Forbes) Rehder', 'A. Gray')
)
#' @examples
#' df <- data.frame(
#'   Genus = c('Castilleja', 'Linnaea', 'Dimeresia'),
#'   Epithet = c('pilosa', 'borealis', 'howellii'),
#'   Infrarank = c('var.', 'var.', NA),
#'   Infraspecies =  c('pilosa', 'americana', NA),
#'   Authority =  c('(S. Watson) Rydb.', '(J. Forbes) Rehder', 'A. Gray')
#' )
#'
#' @export
powNAce <- function(x){
compareNA <- function(v1,v2) {
same <- (v1 == v2)  |  (is.na(v1) & is.na(v2))
same[is.na(same)] <- FALSE
return(same)
} # @ BEN STACK O 16822426
# work on identifying whether the author is for the species or infra species
if(!is.na(x$POW_Infrarank)) {  # ... check if infraspecies exists in first place ? it not default species
x$POW_Binomial_authority = x$POW_authority} else if (x$POW_Epithet == x$POW_Infraspecies){
# check if autonym is present
x$POW_Binomial_authority = x$POW_authority}
if(is.na(x$POW_Infrarank) & x$POW_Infrarank != x$POW_Epithet){
x$POW_Infraspecies_authority = x$POW_Epithet
} # if infraspecies present which != species, than author is presumed infra
#  x[compareNA(x$POW_Name_authority, x$Name_authority ), 'POW_Name_authority'] <- NA
#  x[compareNA(x$POW_Full_name, x$Full_name ), 'POW_Full_name'] <- NA
#  x[compareNA(x$POW_Genus, x$Genus ), 'POW_Genus'] <- NA
#  x[compareNA(x$POW_Epithet, x$Epithet ), 'POW_Epithet'] <- NA
#  x[compareNA(x$POW_Infrarank, x$Infrarank ), 'POW_Infrarank'] <- NA
#  x[compareNA(x$POW_Infraspecies, x$Infraspecies ), 'POW_Infraspecies'] <- NA
#  x[compareNA(x$POW_Family, x$Family ), 'POW_Family'] <- NA
#   return(x)
}
apply(X= df, MARGIN = 2, FUN = col_creator)
apply(X = df, MARGIN = 1, FUN = col_creator)
apply(X= df, MARGIN = 2, FUN = col_creator)
#' @examples
#' df <- data.frame(
#'   Genus = c('Castilleja', 'Linnaea', 'Dimeresia'),
#'   Epithet = c('pilosa', 'borealis', 'howellii'),
#'   Infrarank = c('var.', 'var.', NA),
#'   Infraspecies =  c('pilosa', 'americana', NA),
#'   Authority =  c('(S. Watson) Rydb.', '(J. Forbes) Rehder', 'A. Gray')
#' )
#'
#' @export
powNAce <- function(x){
compareNA <- function(v1,v2) {
same <- (v1 == v2)  |  (is.na(v1) & is.na(v2))
same[is.na(same)] <- FALSE
return(same)
} # @ BEN STACK O 16822426
# work on identifying whether the author is for the species or infra species
if(!is.na(x$POW_Infrarank)) {  # ... check if infraspecies exists in first place ? it not default species
x$POW_Binomial_authority = x$POW_authority} else if (x$POW_Epithet == x$POW_Infraspecies){
# check if autonym is present
x$POW_Binomial_authority = x$POW_authority}
if(is.na(x$POW_Infrarank) & x$POW_Infrarank != x$POW_Epithet){
x$POW_Infraspecies_authority = x$POW_Epithet
} # if infraspecies present which != species, than author is presumed infra
#  x[compareNA(x$POW_Name_authority, x$Name_authority ), 'POW_Name_authority'] <- NA
#  x[compareNA(x$POW_Full_name, x$Full_name ), 'POW_Full_name'] <- NA
#  x[compareNA(x$POW_Genus, x$Genus ), 'POW_Genus'] <- NA
#  x[compareNA(x$POW_Epithet, x$Epithet ), 'POW_Epithet'] <- NA
#  x[compareNA(x$POW_Infrarank, x$Infrarank ), 'POW_Infrarank'] <- NA
#  x[compareNA(x$POW_Infraspecies, x$Infraspecies ), 'POW_Infraspecies'] <- NA
#  x[compareNA(x$POW_Family, x$Family ), 'POW_Family'] <- NA
#   return(x)
}
sapply(X= df, MARGIN = 2, FUN = col_creator)
sapply(X= df, FUN = col_creator)
vapply(X= df, FUN = col_creator)
df %>%
mutate(avg_per_row = apply(X = df, MARGIN = 1, FUN = mean))
df |>
mutate(avg_per_row = apply(X = df, MARGIN = 1, FUN = mean))
df |>
dplyr:;mutate(avg_per_row = apply(X = df, MARGIN = 1, FUN = mean))
df |>
dplyr::mutate(avg_per_row = apply(X = df, MARGIN = 1, FUN = mean))
df |>
dplyr::mutate(avg_per_row = apply(X = df, MARGIN = 1, FUN = powNAce()))
df |>
dplyr::rowwise() |>
dplyr::mutate(avg_per_row = apply(X = df, MARGIN = 1, FUN = powNAce()))
powNAce(df)
infra_maker <- function(x){
if(!is.na(x$POW_Infrarank)) {  # ... check if infraspecies exists in first place ? it not default species
x$POW_Binomial_authority = x$POW_authority} else if (x$POW_Epithet == x$POW_Infraspecies){
# check if autonym is present
x$POW_Binomial_authority = x$POW_authority}
if(is.na(x$POW_Infrarank) & x$POW_Infrarank != x$POW_Epithet){
x$POW_Infraspecies_authority = x$POW_Epithet
} # if infraspecies present which != species, than author is presumed infra
}
lapply(x= df, fun= infra_maker)
lapply(x= df, FUN= infra_maker)
lapply(X= df, FUN= infra_maker)
sdf <- split(df, f = df$POW_Epithet)
lapply(X = sdf, FUN = infra_maker)
infra_maker <- function(x){
if(!is.na(x$POW_Infrarank)) {
# ... check if infraspecies exists in first place ? it not default species
x$POW_Binomial_authority = x$POW_authority} else {
# check if autonym is present
x$POW_Binomial_authority = x$POW_authority}
if(is.na(x$POW_Infrarank) & x$POW_Infrarank != x$POW_Epithet){
x$POW_Infraspecies_authority = x$POW_Epithet
} # if infraspecies present which != species, than author is presumed infra
}
lapply(X = sdf, FUN = infra_maker)
infra_maker <- function(x){
if(!is.na(x$POW_Infrarank)) {
# ... check if infraspecies exists in first place ? it not default species
x$POW_Binomial_authority = x$POW_authority} else {
# check if autonym is present
x$POW_Binomial_authority = x$POW_authority}
#     if(is.na(x$POW_Infrarank) & x$POW_Infrarank != x$POW_Epithet){
#       x$POW_Infraspecies_authority = x$POW_Epithet
#    } # if infraspecies present which != species, than author is presumed infra
}
lapply(X = sdf, FUN = infra_maker)
infra_maker <- function(x){
if(!is.na(x$POW_Infrarank)) {
# ... check if infraspecies exists in first place ? it not default species
x$POW_Binomial_authority = x$POW_authority} else {
# check if autonym is present
x$POW_Binomial_authority = x$POW_authority}
#     if(is.na(x$POW_Infrarank) & x$POW_Infrarank != x$POW_Epithet){
#       x$POW_Infraspecies_authority = x$POW_Epithet
#    } # if infraspecies present which != species, than author is presumed infra
return(x)
}
lapply(X = sdf, FUN = infra_maker)
!is.na(x$POW_Infrarank)
lapply(X = sdf, FUN = infra_maker)
!is.na(df$POW_Infrarank)
View(sdf)
infra_maker <- function(x){
if(!is.na(x$POW_Infrarank)) {
# ... check if infraspecies exists in first place ? it not default species
x$POW_Binomial_authority <- x$POW_authority} else {
# check if autonym is present
x$POW_Binomial_authority = x$POW_authority}
}
lapply(X = sdf, FUN = infra_maker)
!is.na(df$POW_Infrarank)
!is.na(sdf$POW_Infrarank)
lapply(X = sdf, FUN = !is.na(sdf$POW_Infrarank))
lapply(X = sdf, FUN = infra_maker)
sdf <- split(df, f = df$POW_Epithet)
View(sdf)
lapply(X = sdf, FUN = infra_maker)
lapply(X = df, FUN = infra_maker)
sdf <- split(df, f = df$POW_Epithet)
View(sdf)
infra_maker <- function(x){
if(is.na(x$POW_Infrarank)) {
# ... check if infraspecies exists in first place ? it not default species
x$POW_Binomial_authority <- x$POW_authority} else {
# check if autonym is present
x$POW_Binomial_authority = x$POW_authority}
}
lapply(X = df, FUN = infra_maker)
sdf <- split(df, f = df$POW_Epithet)
lapply(X = sdf, FUN = infra_maker)
infra_maker <- function(x){
if(is.na(x$POW_Infrarank)) {
# ... check if infraspecies exists in first place ? it not default species
x$POW_Binomial_authority <- x$POW_authority} else {
# check if autonym is present
x$POW_Binomial_authority = x$POW_authority}
#     if(is.na(x$POW_Infrarank) & x$POW_Infrarank != x$POW_Epithet){
#       x$POW_Infraspecies_authority = x$POW_Epithet
#    } # if infraspecies present which != species, than author is presumed infra
return(x)
}
sdf <- split(df, f = df$POW_Epithet)
lapply(X = sdf, FUN = infra_maker)
View(infra_maker)
infra_maker <- function(x){
if(is.na(x$POW_Infrarank)) { # ... check if infraspecies exists in first place ? it not default species
x$POW_Binomial_authority <- x$POW_authority} else {   # check if autonym is present
x$POW_Binomial_authority = x$POW_authority}
#     if(is.na(x$POW_Infrarank) & x$POW_Infrarank != x$POW_Epithet){
#       x$POW_Infraspecies_authority = x$POW_Epithet
#    } # if infraspecies present which != species, than author is presumed infra
return(x)
}
sdf <- split(df, f = df$POW_Epithet)
lapply(X = sdf, FUN = infra_maker)
infra_maker <- function(x){
if(is.na(x$POW_Infrarank)) { # ... check if infraspecies exists in first place ? it not default species
'crack rock'
#    x$POW_Binomial_authority <- x$POW_authority} else {   # check if autonym is present
#     x$POW_Binomial_authority = x$POW_authority}
#     if(is.na(x$POW_Infrarank) & x$POW_Infrarank != x$POW_Epithet){
#       x$POW_Infraspecies_authority = x$POW_Epithet
#    } # if infraspecies present which != species, than author is presumed infra
}
return(x)
}
sdf <- split(df, f = df$POW_Epithet)
lapply(X = sdf, FUN = infra_maker)
infra_maker <- function(x){
if(is.na(x$POW_Infrarank)) { # ... check if infraspecies exists in first place ? it not default species
ob <- 'crack rock'
#    x$POW_Binomial_authority <- x$POW_authority} else {   # check if autonym is present
#     x$POW_Binomial_authority = x$POW_authority}
#     if(is.na(x$POW_Infrarank) & x$POW_Infrarank != x$POW_Epithet){
#       x$POW_Infraspecies_authority = x$POW_Epithet
#    } # if infraspecies present which != species, than author is presumed infra
}
return(ob)
}
sdf <- split(df, f = df$POW_Epithet)
lapply(X = sdf, FUN = infra_maker)
lapply(X = sdf[3], FUN = infra_maker)
View(sdf)
lapply(X = sdf[2], FUN = infra_maker)
#' @examples
#' df <- data.frame(
#'   Genus = c('Castilleja', 'Linnaea', 'Dimeresia'),
#'   Epithet = c('pilosa', 'borealis', 'howellii'),
#'   Infrarank = c('var.', 'var.', NA),
#'   Infraspecies =  c('pilosa', 'americana', NA),
#'   Authority =  c('(S. Watson) Rydb.', '(J. Forbes) Rehder', 'A. Gray')
#' )
#'
#' @export
powNAce <- function(x){
compareNA <- function(v1,v2) {
same <- (v1 == v2)  |  (is.na(v1) & is.na(v2))
same[is.na(same)] <- FALSE
return(same)
} # @ BEN STACK O 16822426
# work on identifying whether the author is for the species or infra species
x$POW_Infraspecies_authority <- x$POW_authority
x$POW_Binomial_authority <- x$POW_authority
infra_maker <- function(x){
if(is.na(x$POW_Infrarank)) { # ... check if infraspecies exists in first place ? it not default species
x$POW_Binomial_authority <- x$POW_authority} else {   # check if autonym is present
x$POW_Binomial_authority = x$POW_authority}
#     if(is.na(x$POW_Infrarank) & x$POW_Infrarank != x$POW_Epithet){
#       x$POW_Infraspecies_authority = x$POW_Epithet
#    } # if infraspecies present which != species, than author is presumed infra
}
return(x)
}
lapply(X = sdf[2], FUN = infra_maker)
sdf <- split(df, f = df$POW_Epithet)
lapply(X = sdf[2], FUN = infra_maker)
#' @examples
#' df <- data.frame(
#'   Genus = c('Castilleja', 'Linnaea', 'Dimeresia'),
#'   Epithet = c('pilosa', 'borealis', 'howellii'),
#'   Infrarank = c('var.', 'var.', NA),
#'   Infraspecies =  c('pilosa', 'americana', NA),
#'   Authority =  c('(S. Watson) Rydb.', '(J. Forbes) Rehder', 'A. Gray')
#' )
#'
#' @export
powNAce <- function(x){
compareNA <- function(v1,v2) {
same <- (v1 == v2)  |  (is.na(v1) & is.na(v2))
same[is.na(same)] <- FALSE
return(same)
} # @ BEN STACK O 16822426
# work on identifying whether the author is for the species or infra species
x$POW_Infraspecies_authority <- x$POW_authority
x$POW_Binomial_authority <- x$POW_authority
infra_maker <- function(x){
if(is.na(x$POW_Infrarank)) { # ... check if infraspecies exists in first place ? it not default species
x$POW_Binomial_authority <- x$POW_authority} else {   # check if autonym is present
x$POW_Binomial_authority = x$POW_authority}
#     if(is.na(x$POW_Infrarank) & x$POW_Infrarank != x$POW_Epithet){
#       x$POW_Infraspecies_authority = x$POW_Epithet
#    } # if infraspecies present which != species, than author is presumed infra
}
return(x)
}
lapply(X = sdf[2], FUN = infra_maker)
infra_maker <- function(x){
if(is.na(x$POW_Infrarank)) { # ... check if infraspecies exists in first place ? it not default species
x$POW_Binomial_authority <- x$POW_authority} else {   # check if autonym is present
x$POW_Binomial_authority = x$POW_authority}
#     if(is.na(x$POW_Infrarank) & x$POW_Infrarank != x$POW_Epithet){
#       x$POW_Infraspecies_authority = x$POW_Epithet
#    } # if infraspecies present which != species, than author is presumed infra
}
#' @examples
#' df <- data.frame(
#'   Genus = c('Castilleja', 'Linnaea', 'Dimeresia'),
#'   Epithet = c('pilosa', 'borealis', 'howellii'),
#'   Infrarank = c('var.', 'var.', NA),
#'   Infraspecies =  c('pilosa', 'americana', NA),
#'   Authority =  c('(S. Watson) Rydb.', '(J. Forbes) Rehder', 'A. Gray')
#' )
#'
#' @export
powNAce <- function(x){
compareNA <- function(v1,v2) {
same <- (v1 == v2)  |  (is.na(v1) & is.na(v2))
same[is.na(same)] <- FALSE
return(same)
} # @ BEN STACK O 16822426
# work on identifying whether the author is for the species or infra species
x$POW_Infraspecies_authority <- x$POW_authority
x$POW_Binomial_authority <- x$POW_authority
infra_maker <- function(x){
x$POW_Binomial_authority <- NA
x$POW_Infraspecies_authority <- NA
if(is.na(x$POW_Infrarank)) { # ... check if infraspecies exists in first place ? it not default species
x$POW_Binomial_authority <- x$POW_authority} else {   # check if autonym is present
x$POW_Binomial_authority = x$POW_authority}
#     if(is.na(x$POW_Infrarank) & x$POW_Infrarank != x$POW_Epithet){
#       x$POW_Infraspecies_authority = x$POW_Epithet
#    } # if infraspecies present which != species, than author is presumed infra
}
return(x)
}
sdf <- split(df, f = df$POW_Epithet)
lapply(X = sdf[2], FUN = infra_maker)
lapply(X = sdf, FUN = infra_maker)
infra_maker <- function(x){
x$POW_Binomial_authority <- NA
x$POW_Infraspecies_authority <- NA
if(is.na(x$POW_Infrarank)) { # ... check if infraspecies exists in first place ? it not default species
x$POW_Binomial_authority <- x$POW_authority} else {   # check if autonym is present
x$POW_Binomial_authority = x$POW_authority}
#     if(is.na(x$POW_Infrarank) & x$POW_Infrarank != x$POW_Epithet){
#       x$POW_Infraspecies_authority = x$POW_Epithet
#    } # if infraspecies present which != species, than author is presumed infra
}
View(infra_maker)
sdf <- split(df, f = df$POW_Epithet)
lapply(X = sdf, FUN = infra_maker)
#' @examples
#' df <- data.frame(
#'   Genus = c('Castilleja', 'Linnaea', 'Dimeresia'),
#'   Epithet = c('pilosa', 'borealis', 'howellii'),
#'   Infrarank = c('var.', 'var.', NA),
#'   Infraspecies =  c('pilosa', 'americana', NA),
#'   Authority =  c('(S. Watson) Rydb.', '(J. Forbes) Rehder', 'A. Gray')
#' )
#'
#' @export
powNAce <- function(x){
compareNA <- function(v1,v2) {
same <- (v1 == v2)  |  (is.na(v1) & is.na(v2))
same[is.na(same)] <- FALSE
return(same)
} # @ BEN STACK O 16822426
# work on identifying whether the author is for the species or infra species
infra_maker <- function(x){
x$POW_Binomial_authority <- NA
x$POW_Infraspecies_authority <- NA
if(is.na(x$POW_Infrarank)) { # ... check if infraspecies exists in first place ? it not default species
x$POW_Binomial_authority <- x$POW_authority}
#     if(is.na(x$POW_Infrarank) & x$POW_Infrarank != x$POW_Epithet){
#       x$POW_Infraspecies_authority = x$POW_Epithet
#    } # if infraspecies present which != species, than author is presumed infra
}
return(x)
}
lapply(X = sdf, FUN = infra_maker)
