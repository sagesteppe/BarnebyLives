'infraspecies', 'taxon_name', 'accepted_plant_name_id', 'parent_plant_name_id')]
names <- dplyr::arrange(names, family, genus, species)
return(names)
}
View(oupu)
names <- read.table(unz(file.path(path, 'wcvp.zip'), 'wcvp_names.csv'),
sep = "|", header = TRUE, quote = "", fill = TRUE, encoding = "UTF-8")
path = '/home/sagesteppe/Downloads'
names <- read.table(unz(file.path(path, 'wcvp.zip'), 'wcvp_names.csv'),
sep = "|", header = TRUE, quote = "", fill = TRUE, encoding = "UTF-8")
View(names)
TaxUnpack <- function(path, continents, regions){
distributions <- read.table(unz(file.path(path, 'wcvp.zip'), 'wcvp_distribution.csv'),
sep = "|", header = TRUE, quote = "", fill = TRUE, encoding = "UTF-8")
distributions <- distributions[distributions$continent %in% continents
& distributions$region %in% regions, c('plant_name_id')]
distributions <- unique(distributions)
cat(crayon::green(length(distributions),
'names found in this domain.\nsit tight while we process them.'))
names <- read.table(unz(file.path(path, 'wcvp.zip'), 'wcvp_names.csv'),
sep = "|", header = TRUE, quote = "", fill = TRUE, encoding = "UTF-8")
names <- names[names$plant_name_id %in% distributions & names$taxon_rank != 'genus',
c('plant_name_id', 'taxon_rank', 'family', 'genus', 'species', 'infraspecific_rank',
'infraspecies', 'taxon_name', 'accepted_plant_name_id', 'parent_plant_name_id',
'taxon_rank', 'taxon_authors')]
names <- dplyr::arrange(names, family, genus, species)
return(names)
}
TaxUnpack <- function(path, continents, regions){
distributions <- read.table(unz(file.path(path, 'wcvp.zip'), 'wcvp_distribution.csv'),
sep = "|", header = TRUE, quote = "", fill = TRUE, encoding = "UTF-8")
distributions <- distributions[distributions$continent %in% continents
& distributions$region %in% regions, c('plant_name_id')]
distributions <- unique(distributions)
cat(crayon::green(length(distributions),
'names found in this domain.\nsit tight while we process them.'))
names <- read.table(unz(file.path(path, 'wcvp.zip'), 'wcvp_names.csv'),
sep = "|", header = TRUE, quote = "", fill = TRUE, encoding = "UTF-8")
names <- names[names$plant_name_id %in% distributions & names$taxon_rank != 'genus',
c('plant_name_id', 'taxon_rank', 'family', 'genus', 'species', 'infraspecific_rank',
'infraspecies', 'taxon_name', 'accepted_plant_name_id', 'parent_plant_name_id',
'taxon_rank', 'taxon_authors')]
names <- dplyr::arrange(names, family, genus, species)
return(names)
}
View(oupu)
TaxUnpack <- function(path, continents, regions){
distributions <- read.table(unz(file.path(path, 'wcvp.zip'), 'wcvp_distribution.csv'),
sep = "|", header = TRUE, quote = "", fill = TRUE, encoding = "UTF-8")
distributions <- distributions[distributions$continent %in% continents
& distributions$region %in% regions, c('plant_name_id')]
distributions <- unique(distributions)
cat(crayon::green(length(distributions),
'names found in this domain.\nsit tight while we process them.'))
names <- read.table(unz(file.path(path, 'wcvp.zip'), 'wcvp_names.csv'),
sep = "|", header = TRUE, quote = "", fill = TRUE, encoding = "UTF-8")
names <- names[names$plant_name_id %in% distributions & names$taxon_rank != 'genus',
c('plant_name_id', 'taxon_rank', 'family', 'genus', 'species', 'infraspecific_rank',
'infraspecies', 'taxon_name', 'accepted_plant_name_id', 'parent_plant_name_id',
'taxon_rank', 'taxon_authors')]
names <- dplyr::arrange(names, family, genus, species)
return(names)
}
reggs <- c('Northwestern U.S.A.', 'Southwestern U.S.A.',
'North-Central U.S.A.', 'South-Central U.S.A.')
oupu <- TaxUnpack(path = '/home/sagesteppe/Downloads',
continent = 'NORTHERN AMERICA', regions = reggs)
View(oupu)
View(names)
TaxUnpack <- function(path, continents, regions){
distributions <- read.table(unz(file.path(path, 'wcvp.zip'), 'wcvp_distribution.csv'),
sep = "|", header = TRUE, quote = "", fill = TRUE, encoding = "UTF-8")
distributions <- distributions[distributions$continent %in% continents
& distributions$region %in% regions, c('plant_name_id')]
distributions <- unique(distributions)
cat(crayon::green(length(distributions),
'names found in this domain.\nSit tight while we process them.'))
names <- read.table(unz(file.path(path, 'wcvp.zip'), 'wcvp_names.csv'),
sep = "|", header = TRUE, quote = "", fill = TRUE, encoding = "UTF-8")
names <- names[names$plant_name_id %in% distributions & names$taxon_rank != 'genus',
c('plant_name_id', 'taxon_rank', 'family', 'genus', 'species', 'infraspecific_rank',
'infraspecies', 'taxon_name', 'accepted_plant_name_id', 'parent_plant_name_id',
'taxon_status', 'taxon_authors')]
names <- dplyr::arrange(names, family, genus, species)
return(names)
}
reggs <- c('Northwestern U.S.A.', 'Southwestern U.S.A.',
'North-Central U.S.A.', 'South-Central U.S.A.')
oupu <- TaxUnpack(path = '/home/sagesteppe/Downloads',
continent = 'NORTHERN AMERICA', regions = reggs)
View(oupu)
TaxUnpack <- function(path, continents, regions){
distributions <- read.table(unz(file.path(path, 'wcvp.zip'), 'wcvp_distribution.csv'),
sep = "|", header = TRUE, quote = "", fill = TRUE, encoding = "UTF-8")
distributions <- distributions[distributions$continent %in% continents
& distributions$region %in% regions, c('plant_name_id')]
distributions <- unique(distributions)
cat(crayon::green(length(distributions),
'names found in this domain.\nSit tight while we process them.'))
names <- read.table(unz(file.path(path, 'wcvp.zip'), 'wcvp_names.csv'),
sep = "|", header = TRUE, quote = "", fill = TRUE, encoding = "UTF-8")
names <- names[names$accepted_plant_name_id %in% distributions & names$taxon_rank != 'genus',
c('plant_name_id', 'taxon_rank', 'family', 'genus', 'species', 'infraspecific_rank',
'infraspecies', 'taxon_name', 'accepted_plant_name_id', 'parent_plant_name_id',
'taxon_status', 'taxon_authors')]
names <- dplyr::arrange(names, family, genus, species)
return(names)
}
reggs <- c('Northwestern U.S.A.', 'Southwestern U.S.A.',
'North-Central U.S.A.', 'South-Central U.S.A.')
oupu <- TaxUnpack(path = '/home/sagesteppe/Downloads',
continent = 'NORTHERN AMERICA', regions = reggs)
View(oupu)
TaxUnpack <- function(path, continents, regions){
distributions <- read.table(unz(file.path(path, 'wcvp.zip'), 'wcvp_distribution.csv'),
sep = "|", header = TRUE, quote = "", fill = TRUE, encoding = "UTF-8")
distributions <- distributions[distributions$continent %in% continents
& distributions$region %in% regions, c('plant_name_id')]
distributions <- unique(distributions)
cat(crayon::green(length(distributions),
'accepted names found in this spatial domain.\nSit tight while we process all of the synonyms associated with them.'))
names <- read.table(unz(file.path(path, 'wcvp.zip'), 'wcvp_names.csv'),
sep = "|", header = TRUE, quote = "", fill = TRUE, encoding = "UTF-8")
names <- names[names$accepted_plant_name_id %in% distributions & names$taxon_rank != 'genus',
c('plant_name_id', 'taxon_rank', 'family', 'genus', 'species', 'infraspecific_rank',
'infraspecies', 'taxon_name', 'accepted_plant_name_id', 'parent_plant_name_id',
'taxon_status', 'taxon_authors')]
names <- dplyr::arrange(names, family, genus, species)
return(names)
}
reggs <- c('Northwestern U.S.A.', 'Southwestern U.S.A.',
'North-Central U.S.A.', 'South-Central U.S.A.')
oupu <- TaxUnpack(path = '/home/sagesteppe/Downloads',
continent = 'NORTHERN AMERICA', regions = reggs)
View(oupu)
View(oupu)
filter(oupu, taxon_status == 'Accepted')
acc <- filter(oupu, taxon_status == 'Accepted')
View(acc)
TaxUnpack <- function(path, continents, regions){
distributions <- read.table(unz(file.path(path, 'wcvp.zip'), 'wcvp_distribution.csv'),
sep = "|", header = TRUE, quote = "", fill = TRUE, encoding = "UTF-8")
distributions <- distributions[distributions$continent %in% continents
& distributions$region %in% regions, c('plant_name_id')]
distributions <- unique(distributions)
cat(crayon::green(length(distributions),
'accepted names found in this spatial domain.\nSit tight while we process all of the synonyms associated with them.'))
names <- read.table(unz(file.path(path, 'wcvp.zip'), 'wcvp_names.csv'),
sep = "|", header = TRUE, quote = "", fill = TRUE, encoding = "UTF-8")
names <- names[names$accepted_plant_name_id %in% distributions & names$taxon_rank != 'genus',
c('plant_name_id', 'taxon_rank', 'family', 'genus', 'species', 'infraspecific_rank',
'infraspecies', 'taxon_name', 'accepted_plant_name_id', 'parent_plant_name_id',
'taxon_status', 'taxon_authors')]
names <- dplyr::arrange(names, family, genus, species)
return(names)
}
reggs <- c('Northwestern U.S.A.', 'Southwestern U.S.A.',
'North-Central U.S.A.', 'South-Central U.S.A.')
oupu <- TaxUnpack(path = '/home/sagesteppe/Downloads',
continent = 'NORTHERN AMERICA', regions = reggs)
View(oupu)
TaxUnpack <- function(path, continents, regions){
distributions <- read.table(unz(file.path(path, 'wcvp.zip'), 'wcvp_distribution.csv'),
sep = "|", header = TRUE, quote = "", fill = TRUE, encoding = "UTF-8")
distributions <- distributions[distributions$continent %in% continents
& distributions$region %in% regions, c('plant_name_id')]
distributions <- unique(distributions)
cat(crayon::green(length(distributions),
'accepted names found in this spatial domain.\nSit tight while we process all of the synonyms associated with them.'))
names <- read.table(unz(file.path(path, 'wcvp.zip'), 'wcvp_names.csv'),
sep = "|", header = TRUE, quote = "", fill = TRUE, encoding = "UTF-8")
names <- names[names$accepted_plant_name_id %in% distributions & names$taxon_rank != 'Genus',
c('plant_name_id', 'taxon_rank', 'family', 'genus', 'species', 'infraspecific_rank',
'infraspecies', 'taxon_name', 'accepted_plant_name_id', 'parent_plant_name_id',
'taxon_status', 'taxon_authors')]
names <- dplyr::arrange(names, family, genus, species)
return(names)
}
oupu <- TaxUnpack(path = '/home/sagesteppe/Downloads',
continent = 'NORTHERN AMERICA', regions = reggs)
View(acc)
TaxUnpack <- function(path, continents, regions){
distributions <- read.table(unz(file.path(path, 'wcvp.zip'), 'wcvp_distribution.csv'),
sep = "|", header = TRUE, quote = "", fill = TRUE, encoding = "UTF-8")
distributions <- distributions[distributions$continent %in% continents
& distributions$region %in% regions, c('plant_name_id')]
distributions <- unique(distributions)
cat(crayon::green(length(distributions),
'accepted names found in this spatial domain.\nSit tight while we process all of the synonyms associated with them.'))
names <- read.table(unz(file.path(path, 'wcvp.zip'), 'wcvp_names.csv'),
sep = "|", header = TRUE, quote = "", fill = TRUE, encoding = "UTF-8")
names <- names[names$accepted_plant_name_id %in% distributions,
c('plant_name_id', 'taxon_rank', 'family', 'genus', 'species', 'infraspecific_rank',
'infraspecies', 'taxon_name', 'accepted_plant_name_id', 'parent_plant_name_id',
'taxon_status', 'taxon_authors')]
names <- names[names$taxon_rank != 'Genus',]
names <- dplyr::arrange(names, family, genus, species)
return(names)
}
oupu <- TaxUnpack(path = '/home/sagesteppe/Downloads',
continent = 'NORTHERN AMERICA', regions = reggs)
View(oupu)
TaxUnpack <- function(path, continents, regions){
distributions <- read.table(unz(file.path(path, 'wcvp.zip'), 'wcvp_distribution.csv'),
sep = "|", header = TRUE, quote = "", fill = TRUE, encoding = "UTF-8")
distributions <- distributions[distributions$continent %in% continents
& distributions$region %in% regions, c('plant_name_id')]
distributions <- unique(distributions)
cat(crayon::green(length(distributions),
'accepted names found in this spatial domain.\nSit tight while we process all of the synonyms associated with them.'))
names <- read.table(unz(file.path(path, 'wcvp.zip'), 'wcvp_names.csv'),
sep = "|", header = TRUE, quote = "", fill = TRUE, encoding = "UTF-8")
names <- names[names$accepted_plant_name_id %in% distributions,
c('plant_name_id', 'taxon_rank', 'family', 'genus', 'species', 'infraspecific_rank',
'infraspecies', 'taxon_name', 'accepted_plant_name_id', 'parent_plant_name_id',
'taxon_status', 'taxon_authors')]
names <- names[names$taxon_rank != 'Genus|f[.]',]
names <- dplyr::arrange(names, family, genus, species)
return(names)
}
reggs <- c('Northwestern U.S.A.', 'Southwestern U.S.A.',
'North-Central U.S.A.', 'South-Central U.S.A.')
oupu <- TaxUnpack(path = '/home/sagesteppe/Downloads',
continent = 'NORTHERN AMERICA', regions = reggs)
View(oupu)
TaxUnpack <- function(path, continents, regions){
distributions <- read.table(unz(file.path(path, 'wcvp.zip'), 'wcvp_distribution.csv'),
sep = "|", header = TRUE, quote = "", fill = TRUE, encoding = "UTF-8")
distributions <- distributions[distributions$continent %in% continents
& distributions$region %in% regions, c('plant_name_id')]
distributions <- unique(distributions)
cat(crayon::green(length(distributions),
'accepted names found in this spatial domain.\nSit tight while we process all of the synonyms associated with them.'))
names <- read.table(unz(file.path(path, 'wcvp.zip'), 'wcvp_names.csv'),
sep = "|", header = TRUE, quote = "", fill = TRUE, encoding = "UTF-8")
names <- names[names$accepted_plant_name_id %in% distributions,
c('plant_name_id', 'taxon_rank', 'family', 'genus', 'species', 'infraspecific_rank',
'infraspecies', 'taxon_name', 'accepted_plant_name_id', 'parent_plant_name_id',
'taxon_status', 'taxon_authors')]
names <- names[names$taxon_rank %in% c('Species', 'Subspecies', 'Variety'),]
names <- dplyr::arrange(names, family, genus, species)
return(names)
}
reggs <- c('Northwestern U.S.A.', 'Southwestern U.S.A.',
'North-Central U.S.A.', 'South-Central U.S.A.')
oupu <- TaxUnpack(path = '/home/sagesteppe/Downloads',
continent = 'NORTHERN AMERICA', regions = reggs)
View(oupu)
View(oupu)
acc <- filter(oupu, taxon_status == 'Accepted')
View(acc)
infra <- filter(oupu, taxon_rank %in% c('Variety', 'Subspecies'))
View(infra)
acc <- filter(oupu, taxon_status == 'Accepted')
infra <- filter(acc, taxon_rank %in% c('Variety', 'Subspecies'))
View(infra)
infra <- filter(acc, taxon_rank %in% c('Variety', 'Subspecies')) %>%
mutate(infraspecific_author = taxon_authors)
View(infra)
infra <- filter(acc, taxon_rank %in% c('Variety', 'Subspecies')) %>%
rename(infraspecific_author = taxon_authors)
View(infra)
species <- filter(acc, taxon_rank == 'Species') %>%
rename(infraspecific_author = taxon_authors)
View(species)
View(species)
View(infra)
species <- filter(acc, taxon_rank == 'Species') %>%
rename(specific_author = taxon_authors)
View(species)
View(species)
bases <- filter(species, plant_name_id %in% infra$parent_plant_name_id)
View(bases)
bases <- filter(species, plant_name_id %in% infra$parent_plant_name_id) %>%
select(plant_name_id, specific_author)
View(bases)
View(infra)
View(infra)
left_join(infra, bases, by = c('parent_plant_name_id', 'plant_name_id'))
View(infra)
left_join(infra, bases, by = c('parent_plant_name_id' = 'plant_name_id'))
bong <- left_join(infra, bases, by = c('parent_plant_name_id' = 'plant_name_id'))
View(bong)
View(bong)
bong <- left_join(infra, bases, by = c('parent_plant_name_id' = 'plant_name_id')) %>%
relocate(specific_author .after = species)
bong <- left_join(infra, bases, by = c('parent_plant_name_id' = 'plant_name_id')) %>%
relocate('specific_author' .after = species)
bong <- left_join(infra, bases, by = c('parent_plant_name_id' = 'plant_name_id')) %>%
relocate('specific_author', .after = species)
bong <- left_join(infra, bases, by = c('parent_plant_name_id' = 'plant_name_id')) %>%
relocate('specific_author', .after = species, 'infraspecific_author', .after = infraspecies)
?relocate
bong <- left_join(infra, bases, by = c('parent_plant_name_id' = 'plant_name_id')) %>%
relocate('specific_author', .after = species) %>%
relocate('infraspecific_author', .after = infraspecies)
View(bong)
TaxUnpack <- function(path, continents, regions){
distributions <- read.table(unz(file.path(path, 'wcvp.zip'), 'wcvp_distribution.csv'),
sep = "|", header = TRUE, quote = "", fill = TRUE, encoding = "UTF-8")
distributions <- distributions[distributions$continent %in% continents
& distributions$region %in% regions, c('plant_name_id')]
distributions <- unique(distributions)
cat(crayon::green(length(distributions),
'accepted names found in this spatial domain.\nSit tight while we process all of the synonyms associated with them.'))
names <- read.table(unz(file.path(path, 'wcvp.zip'), 'wcvp_names.csv'),
sep = "|", header = TRUE, quote = "", fill = TRUE, encoding = "UTF-8")
names <- names[names$accepted_plant_name_id %in% distributions,
c('plant_name_id', 'taxon_rank', 'family', 'genus', 'species', 'infraspecific_rank',
'infraspecies', 'taxon_name', 'accepted_plant_name_id', 'parent_plant_name_id',
'taxon_status', 'taxon_authors')]
names <- names[names$taxon_rank %in% c('Species', 'Subspecies', 'Variety'),]
names <- dplyr::arrange(names, family, genus, species)
return(names)
}
reggs <- c('Northwestern U.S.A.', 'Southwestern U.S.A.',
'North-Central U.S.A.', 'South-Central U.S.A.')
oupu <- TaxUnpack(path = '/home/sagesteppe/Downloads',
continent = 'NORTHERN AMERICA', regions = reggs)
acc <- filter(oupu, taxon_status == 'Accepted')
species <- filter(acc, taxon_rank == 'Species') %>%
rename(specific_author = taxon_authors)
infra <- filter(acc, taxon_rank %in% c('Variety', 'Subspecies')) %>%
rename(infraspecific_author = taxon_authors)
bases <- filter(species, plant_name_id %in% infra$parent_plant_name_id) %>%
select(plant_name_id, specific_author)
bong <- left_join(infra, bases, by = c('parent_plant_name_id' = 'plant_name_id')) %>%
relocate('specific_author', .after = species) %>%
relocate('infraspecific_author', .after = infraspecies)
View(bong)
bong <- left_join(infra, bases, by = c('parent_plant_name_id' = 'plant_name_id')) %>%
relocate('specific_author', .after = species) %>%
relocate('infraspecific_author', .after = infraspecies) %>%
bind_rows(., species)
View(bong)
rm(infra, species, bases)
acc <- filter(oupu, taxon_status == 'Accepted')
species <- filter(acc, taxon_rank == 'Species') %>%
rename(specific_author = taxon_authors)
infra <- filter(acc, taxon_rank %in% c('Variety', 'Subspecies')) %>%
rename(infraspecific_author = taxon_authors)
bases <- filter(species, plant_name_id %in% infra$parent_plant_name_id) %>%
select(plant_name_id, specific_author)
species <- left_join(infra, bases, by = c('parent_plant_name_id' = 'plant_name_id')) %>%
relocate('specific_author', .after = species) %>%
relocate('infraspecific_author', .after = infraspecies) %>%
bind_rows(., species)
rm(infra, species, bases)
acc <- filter(oupu, taxon_status == 'Accepted')
species <- filter(acc, taxon_rank == 'Species') %>%
rename(specific_author = taxon_authors)
infra <- filter(acc, taxon_rank %in% c('Variety', 'Subspecies')) %>%
rename(infraspecific_author = taxon_authors)
bases <- filter(species, plant_name_id %in% infra$parent_plant_name_id) %>%
select(plant_name_id, specific_author)
species <- left_join(infra, bases, by = c('parent_plant_name_id' = 'plant_name_id')) %>%
relocate('specific_author', .after = species) %>%
relocate('infraspecific_author', .after = infraspecies) %>%
bind_rows(., species)
rm(infra, acc, bases)
View(species)
acc <- filter(oupu, taxon_status == 'Accepted')
species <- filter(acc, taxon_rank == 'Species') %>%
rename(specific_author = taxon_authors)
infra <- filter(acc, taxon_rank %in% c('Variety', 'Subspecies')) %>%
rename(infraspecific_author = taxon_authors)
bases <- filter(species, plant_name_id %in% infra$parent_plant_name_id) %>%
select(plant_name_id, specific_author)
species <- left_join(infra, bases, by = c('parent_plant_name_id' = 'plant_name_id')) %>%
relocate('specific_author', .after = species) %>%
relocate('infraspecific_author', .after = infraspecies) %>%
bind_rows(., species) |>
arrange(family, genus, species)
rm(infra, acc, bases)
View(species)
species <- left_join(infra, bases, by = c('parent_plant_name_id' = 'plant_name_id')) %>%
relocate('specific_author', .after = species) %>%
relocate('infraspecific_author', .after = infraspecies) %>%
bind_rows(., species) |>
arrange(family, genus, species) %>%
unite(taxon_name_author = genus:infraspecific_author, remove = F)
species <- left_join(infra, bases, by = c('parent_plant_name_id' = 'plant_name_id')) %>%
relocate('specific_author', .after = species) %>%
relocate('infraspecific_author', .after = infraspecies) %>%
bind_rows(., species) |>
arrange(family, genus, species) %>%
unite('taxon_name_author', genus:infraspecific_author, remove = F)
species <- left_join(infra, bases, by = c('parent_plant_name_id' = 'plant_name_id')) %>%
relocate('specific_author', .after = species) %>%
relocate('infraspecific_author', .after = infraspecies) %>%
bind_rows(., species) |>
arrange(family, genus, species) %>%
unite('taxon_name_author', genus:infraspecific_author, remove = F)
?unite
acc <- filter(oupu, taxon_status == 'Accepted')
species <- filter(acc, taxon_rank == 'Species') %>%
rename(specific_author = taxon_authors)
infra <- filter(acc, taxon_rank %in% c('Variety', 'Subspecies')) %>%
rename(infraspecific_author = taxon_authors)
bases <- filter(species, plant_name_id %in% infra$parent_plant_name_id) %>%
select(plant_name_id, specific_author)
species <- left_join(infra, bases, by = c('parent_plant_name_id' = 'plant_name_id')) %>%
relocate('specific_author', .after = species) %>%
relocate('infraspecific_author', .after = infraspecies) %>%
bind_rows(., species) |>
arrange(family, genus, species) %>%
unite('taxon_name_author', genus:infraspecific_author, remove = FALSE)
View(species)
species <- left_join(infra, bases, by = c('parent_plant_name_id' = 'plant_name_id')) %>%
relocate('specific_author', .after = species) %>%
relocate('infraspecific_author', .after = infraspecies) %>%
bind_rows(., species) |>
arrange(family, genus, species) %>%
unite('taxon_name_author', genus:infraspecific_author, remove = FALSE, na.rm = TRUE)
species <- left_join(infra, bases, by = c('parent_plant_name_id' = 'plant_name_id')) %>%
relocate('specific_author', .after = species) %>%
relocate('infraspecific_author', .after = infraspecies) %>%
bind_rows(., species) |>
arrange(family, genus, species) %>%
unite('taxon_name_author', genus:infraspecific_author, remove = FALSE, na.rm = TRUE, sep = ' ')
rm(infra, acc, bases)
acc <- filter(oupu, taxon_status == 'Accepted')
species <- filter(acc, taxon_rank == 'Species') %>%
rename(specific_author = taxon_authors)
infra <- filter(acc, taxon_rank %in% c('Variety', 'Subspecies')) %>%
rename(infraspecific_author = taxon_authors)
bases <- filter(species, plant_name_id %in% infra$parent_plant_name_id) %>%
select(plant_name_id, specific_author)
species <- left_join(infra, bases, by = c('parent_plant_name_id' = 'plant_name_id')) %>%
relocate('specific_author', .after = species) %>%
relocate('infraspecific_author', .after = infraspecies) %>%
bind_rows(., species) |>
arrange(family, genus, species) %>%
unite('taxon_name_author', genus:infraspecific_author, remove = FALSE, na.rm = TRUE, sep = ' ')
species <- left_join(infra, bases, by = c('parent_plant_name_id' = 'plant_name_id')) %>%
relocate('specific_author', .after = species) %>%
relocate('infraspecific_author', .after = infraspecies) %>%
bind_rows(., species) |>
arrange(family, genus, species) %>%
unite('taxon_name_author', genus:infraspecific_author, remove = FALSE, na.rm = TRUE, sep = ' ') |>
mutate(taxon_name_author = str_trim(taxon_name_author, side = 'both'))
species <- left_join(infra, bases, by = c('parent_plant_name_id' = 'plant_name_id')) %>%
relocate('specific_author', .after = species) %>%
relocate('infraspecific_author', .after = infraspecies) %>%
bind_rows(., species) |>
arrange(family, genus, species) %>%
unite('taxon_name_author', genus:infraspecific_author, remove = FALSE, na.rm = TRUE, sep = ' ') |>
mutate(taxon_name_author = str_trim(taxon_name_author, side = 'both'),
across(.cols  = infraspecific_rank:infraspecific_author, ~ na_if(.x, ' ')))
species <- left_join(infra, bases, by = c('parent_plant_name_id' = 'plant_name_id')) %>%
relocate('specific_author', .after = species) %>%
relocate('infraspecific_author', .after = infraspecies) %>%
bind_rows(., species) |>
arrange(family, genus, species) %>%
unite('taxon_name_author', genus:infraspecific_author, remove = FALSE, na.rm = TRUE, sep = ' ') |>
mutate(taxon_name_author = str_trim(taxon_name_author, side = 'both'),
across(.cols  = infraspecific_rank:infraspecific_author, ~ na_if(.x, '')))
?na_if
species <- left_join(infra, bases, by = c('parent_plant_name_id' = 'plant_name_id')) %>%
relocate('specific_author', .after = species) %>%
relocate('infraspecific_author', .after = infraspecies) %>%
bind_rows(., species) |>
arrange(family, genus, species) %>%
unite('taxon_name_author', genus:infraspecific_author, remove = FALSE, na.rm = TRUE, sep = ' ') |>
mutate(taxon_name_author = str_trim(taxon_name_author, side = 'both'),
across(.cols  = infraspecific_rank:infraspecific_author, ~ na_if(.x, ' ')))
species <- left_join(infra, bases, by = c('parent_plant_name_id' = 'plant_name_id')) %>%
relocate('specific_author', .after = species) %>%
relocate('infraspecific_author', .after = infraspecies) %>%
bind_rows(., species) |>
arrange(family, genus, species) %>%
unite('taxon_name_author', genus:infraspecific_author, remove = FALSE, na.rm = TRUE, sep = ' ') |>
mutate(taxon_name_author = str_trim(taxon_name_author, side = 'both'),
across(.cols  = infraspecific_rank:infraspecific_author, ~ na_if(.x, ' ')))
TaxUnpack <- function(path, continents, regions){
distributions <- read.table(unz(file.path(path, 'wcvp.zip'), 'wcvp_distribution.csv'),
sep = "|", header = TRUE, quote = "", fill = TRUE, encoding = "UTF-8")
distributions <- distributions[distributions$continent %in% continents
& distributions$region %in% regions, c('plant_name_id')]
distributions <- unique(distributions)
cat(crayon::green(length(distributions),
'accepted names found in this spatial domain.\nSit tight while we process all of the synonyms associated with them.'))
names <- read.table(unz(file.path(path, 'wcvp.zip'), 'wcvp_names.csv'),
sep = "|", header = TRUE, quote = "", fill = TRUE, encoding = "UTF-8")
names <- names[names$accepted_plant_name_id %in% distributions,
c('plant_name_id', 'taxon_rank', 'family', 'genus', 'species', 'infraspecific_rank',
'infraspecies', 'taxon_name', 'accepted_plant_name_id', 'parent_plant_name_id',
'taxon_status', 'taxon_authors')]
names <- names[names$taxon_rank %in% c('Species', 'Subspecies', 'Variety'),]
names <- dplyr::arrange(names, family, genus, species)
return(names)
}
reggs <- c('Northwestern U.S.A.', 'Southwestern U.S.A.',
'North-Central U.S.A.', 'South-Central U.S.A.')
oupu <- TaxUnpack(path = '/home/sagesteppe/Downloads',
continent = 'NORTHERN AMERICA', regions = reggs)
acc <- filter(oupu, taxon_status == 'Accepted')
species <- filter(acc, taxon_rank == 'Species') %>%
rename(specific_author = taxon_authors)
infra <- filter(acc, taxon_rank %in% c('Variety', 'Subspecies')) %>%
rename(infraspecific_author = taxon_authors)
bases <- filter(species, plant_name_id %in% infra$parent_plant_name_id) %>%
select(plant_name_id, specific_author)
species <- left_join(infra, bases, by = c('parent_plant_name_id' = 'plant_name_id')) %>%
relocate('specific_author', .after = species) %>%
relocate('infraspecific_author', .after = infraspecies) %>%
bind_rows(., species) |>
arrange(family, genus, species) %>%
unite('taxon_name_author', genus:infraspecific_author, remove = FALSE, na.rm = TRUE, sep = ' ') |>
mutate(taxon_name_author = str_trim(taxon_name_author, side = 'both'),
across(.cols  = infraspecific_rank:infraspecific_author, ~ na_if(.x, ' ')))
View(species)
