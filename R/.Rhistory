Determined_date_text = 'jesus birthday + 2024'
)
writer_fide(text)
length(nchar(gsub('.*\\)', '', text$Fide))>1)
length(nchar(gsub('.*\\)', '', text$Fide))
nchar(gsub('.*\\)', '', text$Fide))
#' do or don't write determination information
#'
#' This functions determines whether to write information on whom determined the specimen
#' when, and via which texts. It used as a final step when formatting labels.
#' @param x data frame holding the values
#' @examples
#' phacelia <- collection_examples[31,]
#' writer_fide(phacelia)
#' @export
writer_fide <- function(x){
x$Fide[x$Fide==""] <- NA
# if their is nothing to write, simply return an empty string to avoid emitting
# the NA onto the label.
if (is.na(x$Fide)){""} else {
# buy a little bit more real estate. abbreviate Flora.
x$Fide <- sub(' Flora ', ' Fl. ', x$Fide)
# now consider this string "BOOK (emphatic) talkative". we need three dispatches
# to accommodate this. Dispatch 1 will test for (), if not present (most cases)
# we will run down the ELSE below.
# DISPATCH 1 check for both parentheses
if(grepl('\\(.*\\)', x$Fide)){
fide_base <- paste0( # write everything up to the parenthesis
paste0('Fide: *', gsub('\\(.*$', '', x$Fide), '*'),
paste0('(', gsub('.*\\(|\\).*', '', x$Fide), ')')
)
# now test for words after the last parenthesis
if(nchar(gsub('.*\\)', '', x$Fide)>1)){
message('words after )')
fide_base <- paste0(fide_base, paste0('*', gsub('.*\\)', '', x$Fide)))
} else { # return the string with parentheses here
message('no words after )')
fide_base <- paste0(fide_base,
', det.: ', x$Determined_by, ', ', x$Determined_date_text, '.')
}
} else { # IF dispatch 1 finds no '()' return a nice simple string.
# return a nice uncomplicated string without parentheses
fide_base <- paste0('Fide: *',
sub(' Flora ', ' Fl. ', x$Fide),
'*, det.: ', x$Determined_by, ', ', x$Determined_date_text, '.')
}
}
}
text <- data.frame(
Fide = 'Michigan Flora Book (yeezy) ya',
Determined_by = 'Liz',
Determined_date_text = 'jesus birthday + 2024'
)
writer_fide(text)
text <- data.frame(
Fide = 'Michigan Flora Book (yeezy)',
Determined_by = 'Liz',
Determined_date_text = 'jesus birthday + 2024'
)
writer_fide(text)
#' do or don't write determination information
#'
#' This functions determines whether to write information on whom determined the specimen
#' when, and via which texts. It used as a final step when formatting labels.
#' @param x data frame holding the values
#' @examples
#' phacelia <- collection_examples[31,]
#' writer_fide(phacelia)
#' @export
writer_fide <- function(x){
x$Fide[x$Fide==""] <- NA
# if their is nothing to write, simply return an empty string to avoid emitting
# the NA onto the label.
if (is.na(x$Fide)){""} else {
# buy a little bit more real estate. abbreviate Flora.
x$Fide <- sub(' Flora ', ' Fl. ', x$Fide)
# now consider this string "BOOK (emphatic) talkative". we need three dispatches
# to accommodate this. Dispatch 1 will test for (), if not present (most cases)
# we will run down the ELSE below.
# DISPATCH 1 check for both parentheses
if(grepl('\\(.*\\)', x$Fide)){
fide_base <- paste0( # write everything up to the parenthesis
paste0('Fide: *', gsub('\\(.*$', '', x$Fide), '*'),
paste0('(', gsub('.*\\(|\\).*', '', x$Fide), ')')
)
# now test for words after the last parenthesis
if(nchar(gsub('.*\\)', '', x$Fide))>1){
message('words after )')
fide_base <- paste0(fide_base, paste0('*', gsub('.*\\)', '', x$Fide)))
} else { # return the string with parentheses here
message('no words after )')
fide_base <- paste0(fide_base,
', det.: ', x$Determined_by, ', ', x$Determined_date_text, '.')
}
} else { # IF dispatch 1 finds no '()' return a nice simple string.
# return a nice uncomplicated string without parentheses
fide_base <- paste0('Fide: *',
sub(' Flora ', ' Fl. ', x$Fide),
'*, det.: ', x$Determined_by, ', ', x$Determined_date_text, '.')
}
}
}
text <- data.frame(
Fide = 'Michigan Flora Book (yeezy)',
Determined_by = 'Liz',
Determined_date_text = 'jesus birthday + 2024'
)
writer_fide(text)
#' do or don't write determination information
#'
#' This functions determines whether to write information on whom determined the specimen
#' when, and via which texts. It used as a final step when formatting labels.
#' @param x data frame holding the values
#' @examples
#' phacelia <- collection_examples[31,]
#' writer_fide(phacelia)
#' @export
writer_fide <- function(x){
x$Fide[x$Fide==""] <- NA
# if their is nothing to write, simply return an empty string to avoid emitting
# the NA onto the label.
if (is.na(x$Fide)){""} else {
# buy a little bit more real estate. abbreviate Flora.
x$Fide <- sub(' Flora ', ' Fl. ', x$Fide)
# now consider this string "BOOK (emphatic) talkative". we need three dispatches
# to accommodate this. Dispatch 1 will test for (), if not present (most cases)
# we will run down the ELSE below.
# DISPATCH 1 check for both parentheses
if(grepl('\\(.*\\)', x$Fide)){
fide_base <- paste0( # write everything up to the parenthesis
paste0('Fide: *', gsub('\\(.*$', '', x$Fide), '*'),
paste0('(', gsub('.*\\(|\\).*', '', x$Fide), ')')
)
# now test for words after the last parenthesis
if(nchar(gsub('.*\\)', '', x$Fide))>1){
message('words after )')
paste0(fide_base, paste0('*', gsub('.*\\)', '', x$Fide)))
} else { # return the string with parentheses here
message('no words after )')
paste0(fide_base,
', det.: ', x$Determined_by, ', ', x$Determined_date_text, '.')
}
} else { # IF dispatch 1 finds no '()' return a nice simple string.
# return a nice uncomplicated string without parentheses
paste0('Fide: *',
sub(' Flora ', ' Fl. ', x$Fide),
'*, det.: ', x$Determined_by, ', ', x$Determined_date_text, '.')
}
}
}
text <- data.frame(
Fide = 'Michigan Flora Book (yeezy)',
Determined_by = 'Liz',
Determined_date_text = 'jesus birthday + 2024'
)
writer_fide(text)
text <- data.frame(
Fide = 'Michigan Flora Book (yeezy) yay',
Determined_by = 'Liz',
Determined_date_text = 'jesus birthday + 2024'
)
writer_fide(text)
#' do or don't write determination information
#'
#' This functions determines whether to write information on whom determined the specimen
#' when, and via which texts. It used as a final step when formatting labels.
#' @param x data frame holding the values
#' @examples
#' phacelia <- collection_examples[31,]
#' writer_fide(phacelia)
#' @export
writer_fide <- function(x){
x$Fide[x$Fide==""] <- NA
# if their is nothing to write, simply return an empty string to avoid emitting
# the NA onto the label.
if (is.na(x$Fide)){""} else {
# buy a little bit more real estate. abbreviate Flora.
x$Fide <- sub(' Flora ', ' Fl. ', x$Fide)
# now consider this string "BOOK (emphatic) talkative". we need three dispatches
# to accommodate this. Dispatch 1 will test for (), if not present (most cases)
# we will run down the ELSE below.
# DISPATCH 1 check for both parentheses
if(grepl('\\(.*\\)', x$Fide)){
fide_base <- paste0( # write everything up to the parenthesis
paste0('Fide: *', gsub('\\(.*$', '', x$Fide), '*'),
paste0('(', gsub('.*\\(|\\).*', '', x$Fide), ')')
)
# now test for words after the last parenthesis
if(nchar(gsub('.*\\)', '', x$Fide))>1){
message('words after )')
paste0(fide_base, paste0('*', gsub('.*\\)', '', x$Fide), '*'))
} else { # return the string with parentheses here
message('no words after )')
paste0(fide_base,
', det.: ', x$Determined_by, ', ', x$Determined_date_text, '.')
}
} else { # IF dispatch 1 finds no '()' return a nice simple string.
# return a nice uncomplicated string without parentheses
paste0('Fide: *',
sub(' Flora ', ' Fl. ', x$Fide),
'*, det.: ', x$Determined_by, ', ', x$Determined_date_text, '.')
}
}
}
text <- data.frame(
Fide = 'Michigan Flora Book (yeezy) yay',
Determined_by = 'Liz',
Determined_date_text = 'jesus birthday + 2024'
)
writer_fide(text)
nchar(gsub('.*\\)', '', text$Fide))
text <- data.frame(
Fide = 'Michigan Flora Book',
Determined_by = 'Liz',
Determined_date_text = 'jesus birthday + 2024'
)
writer_fide(text)
text <- data.frame(
Fide = 'Michigan Flora Book (yeez) ',
Determined_by = 'Liz',
Determined_date_text = 'jesus birthday + 2024'
)
writer_fide(text)
text <- data.frame(
Fide = 'Michigan Flora Book (yeez)  ',
Determined_by = 'Liz',
Determined_date_text = 'jesus birthday + 2024'
)
writer_fide(text)
#' do or don't write determination information
#'
#' This functions determines whether to write information on whom determined the specimen
#' when, and via which texts. It used as a final step when formatting labels.
#' @param x data frame holding the values
#' @examples
#' phacelia <- collection_examples[31,]
#' writer_fide(phacelia)
#' @export
writer_fide <- function(x){
x$Fide[x$Fide==""] <- NA
# if their is nothing to write, simply return an empty string to avoid emitting
# the NA onto the label.
if (is.na(x$Fide)){""} else {
# buy a little bit more real estate. abbreviate Flora.
x$Fide <- sub(' Flora ', ' Fl. ', x$Fide)
# now consider this string "BOOK (emphatic) talkative". we need three dispatches
# to accommodate this. Dispatch 1 will test for (), if not present (most cases)
# we will run down the ELSE below.
# DISPATCH 1 check for both parentheses
if(grepl('\\(.*\\)', x$Fide)){
fide_base <- paste0( # write everything up to the parenthesis
paste0('Fide: *', gsub('\\(.*$', '', x$Fide), '*'),
paste0('(', gsub('.*\\(|\\).*', '', x$Fide), ')')
)
# now test for words after the last parenthesis
if(nchar(gsub('.*\\)', '', x$Fide))>1){
message('words after )')
paste0(fide_base,
paste0('*', gsub('.*\\)', '', x$Fide), '*'),
', det.: ', x$Determined_by, ', ', x$Determined_date_text, '.')
} else { # return the string with parentheses here
message('no words after )')
paste0(fide_base,
', det.: ', x$Determined_by, ', ', x$Determined_date_text, '.')
}
} else { # IF dispatch 1 finds no '()' return a nice simple string.
# return a nice uncomplicated string without parentheses
paste0('Fide: *',
sub(' Flora ', ' Fl. ', x$Fide),
'*, det.: ', x$Determined_by, ', ', x$Determined_date_text, '.')
}
}
}
text <- data.frame(
Fide = 'Michigan Flora Book (yeez)  ',
Determined_by = 'Liz',
Determined_date_text = 'jesus birthday + 2024'
)
writer_fide(text)
length(nchar(gsub('.*\\)', '', x$Fide))>1)
text <- data.frame(
Fide = 'Michigan Flora Book (yeez)',
Determined_by = 'Liz',
Determined_date_text = 'jesus birthday + 2024'
)
writer_fide(text)
length(nchar(gsub('.*\\)', '', x$Fide))>1)
writer_fide(text)
length(nchar(gsub('.*\\)', '', x$Fide))>1)
writer_fide(text)
#' do or don't write determination information
#'
#' This functions determines whether to write information on whom determined the specimen
#' when, and via which texts. It used as a final step when formatting labels.
#' @param x data frame holding the values
#' @examples
#' phacelia <- collection_examples[31,]
#' writer_fide(phacelia)
#' @export
writer_fide <- function(x){
x$Fide[x$Fide==""] <- NA
# if their is nothing to write, simply return an empty string to avoid emitting
# the NA onto the label.
if (is.na(x$Fide)){""} else {
# buy a little bit more real estate. abbreviate Flora.
x$Fide <- sub(' Flora ', ' Fl. ', x$Fide)
# now consider this string "BOOK (emphatic) talkative". we need three dispatches
# to accommodate this. Dispatch 1 will test for (), if not present (most cases)
# we will run down the ELSE below.
# DISPATCH 1 check for both parentheses
if(grepl('\\(.*\\)', x$Fide)){
fide_base <- paste0( # write everything up to the parenthesis
paste0('Fide: *', gsub('\\(.*$', '', x$Fide), '*'),
paste0('(', gsub('.*\\(|\\).*', '', x$Fide), ')')
)
# now test for words after the last parenthesis
if(nchar(gsub('.*\\)', '', x$Fide))>0){
message('words after )')
paste0(fide_base,
paste0('*', gsub('.*\\)', '', x$Fide), '*'),
', det.: ', x$Determined_by, ', ', x$Determined_date_text, '.')
} else { # return the string with parentheses here
message('no words after )')
paste0(fide_base,
', det.: ', x$Determined_by, ', ', x$Determined_date_text, '.')
}
} else { # IF dispatch 1 finds no '()' return a nice simple string.
# return a nice uncomplicated string without parentheses
paste0('Fide: *',
sub(' Flora ', ' Fl. ', x$Fide),
'*, det.: ', x$Determined_by, ', ', x$Determined_date_text, '.')
}
}
}
text <- data.frame(
Fide = 'Michigan Flora Book (yeez)',
Determined_by = 'Liz',
Determined_date_text = 'jesus birthday + 2024'
)
writer_fide(text)
rep('Liz', 3)
text <- data.frame(
Fide = c('Michigan Flora Book (yeez)', 'MI Flora (yeezy) ya', 'Mi flora book'),
Determined_by = rep('Liz', 3),
Determined_date_text = rep('a day', 3)
)
writer_fide(text)
apply(writer_fide, margin = 2)
apply(FUN = writer_fide, margin = 2)
apply(FUN = writer_fide, x = text, margin = 2)
apply(FUN = writer_fide, X = text, margin = 2)
apply(FUN = writer_fide, X = text, MARGIN = 2)
text
text <- data.frame(
Fide = c('Michigan Flora Book (yeez)', 'MI Flora (yeezy) ya', 'Mi flora book'),
Determined_by = rep('Liz', 3),
Determined_date_text = rep('a day', 3)
)
apply(FUN = writer_fide, X = text, MARGIN = 2)
apply(FUN = writer_fide, X = text, MARGIN = 1)
lapply(text, writer_fide)
text <- data.frame(
Fide = c('Michigan Flora Book (yeez)', 'MI Flora (yeezy) ya', 'Mi flora book'),
Determined_by = rep('Liz', 3),
Determined_date_text = rep('a day', 3)
) |>
split(f = 1:3)
lapply(text, writer_fide)
vapply(text, writer_fide)
lapply(text, writer_fide)
text <- data.frame(
Fide = c('Michigan Flora Book (emphatic)',
'Michigan Flora Book (emphatic) verbose',
'Michigan Flora Book'),
Determined_by = rep('Liz', 3),
Determined_date_text = rep('a day', 3)
) |>
split(f = 1:3)
lapply(text, writer_fide)
text <- data.frame(
Fide = c('Michigan Flora Book (emphatic)',
'Michigan Flora Book (emphatic) verbose',
'Michigan Flora Book'),
Determined_by = rep('Frank', 3),
Determined_date_text = rep('a day', 3)
) |>
split(f = 1:3)
lapply(text, writer_fide)
text <- data.frame(
Fide = c('Michigan Flora Book (emphatic)',
'Michigan Flora Book (emphatic) verbose',
'Michigan Flora Book'),
Determined_by = rep('Marabeth', 3),
Determined_date_text = rep('a day', 3)
) |>
split(f = 1:3)
lapply(text, writer_fide)
text <- data.frame(
Fide = c('Michigan Flora Book (emphatic)',
'Michigan Flora Book (emphatic) verbose',
'Michigan Flora Book'),
Determined_by = rep('Marabeth', 3),
Determined_date_text = rep('a day in time', 3)
) |>
split(f = 1:3)
lapply(text, writer_fide)
#' Fide = c('Michigan Flora Book (emphatic)',
#'         'Michigan Flora Book (emphatic) verbose',
#'         'Michigan Flora Book'),
#' Determined_by = rep('Marabeth', 3),
#' Determined_date_text = rep('a day in time', 3)
#' ) |>
#'  split(f = 1:3)
#'
#' lapply(text, writer_fide)
#' @export
writer_fide <- function(x){
x$Fide[x$Fide==""] <- NA
# if their is nothing to write, simply return an empty string to avoid emitting
# the NA onto the label.
if (is.na(x$Fide)){""} else {
# buy a little bit more real estate. abbreviate Flora.
x$Fide <- sub(' Flora ', ' Fl. ', x$Fide)
# now consider this string "BOOK (emphatic) talkative". we need three dispatches
# to accommodate this. Dispatch 1 will test for (), if not present (most cases)
# we will run down the ELSE below.
# DISPATCH 1 check for both parentheses
if(grepl('\\(.*\\)', x$Fide)){
fide_base <- paste0( # write everything up to the parenthesis
paste0('Fide: *', gsub('\\(.*$', '', x$Fide), '*'),
paste0('(', gsub('.*\\(|\\).*', '', x$Fide), ')')
)
# now test for words after the last parenthesis
if(nchar(gsub('.*\\)', '', x$Fide))>0){
message('words after )')
paste0(fide_base,
paste0('*', gsub('.*\\)', '', x$Fide), '*'),
', det.: ', x$Determined_by, ', ', x$Determined_date_text, '.')
} else { # return the string with parentheses here
message('no words after )')
paste0(fide_base,
', det.: ', x$Determined_by, ', ', x$Determined_date_text, '.')
}
} else { # IF dispatch 1 finds no '()' return a nice simple string.
# return a nice uncomplicated string without parentheses
paste0('Fide: *',
sub(' Flora ', ' Fl. ', x$Fide),
'*, det.: ', x$Determined_by, ', ', x$Determined_date_text, '.')
}
}
}
text <- data.frame(
Fide = c('Michigan Flora Book (emphatic)',
'Michigan Flora Book (emphatic) verbose',
'Michigan Flora Book'),
Determined_by = rep('Marabeth', 3),
Determined_date_text = rep('a day in time', 3)
) |>
split(f = 1:3)
lapply(text, writer_fide)
#' Fide = c('Michigan Flora Book (emphatic)',
#'         'Michigan Flora Book (emphatic) verbose',
#'         'Michigan Flora Book'),
#' Determined_by = rep('Marabeth', 3),
#' Determined_date_text = rep('a day in time', 3)
#' ) |>
#'  split(f = 1:3)
#'
#' lapply(text, writer_fide)
#' @export
writer_fide <- function(x){
x$Fide[x$Fide==""] <- NA
# if their is nothing to write, simply return an empty string to avoid emitting
# the NA onto the label.
if (is.na(x$Fide)){""} else {
# buy a little bit more real estate. abbreviate Flora.
x$Fide <- sub(' Flora ', ' Fl. ', x$Fide)
# now consider this string "BOOK (emphatic) talkative". we need three dispatches
# to accommodate this. Dispatch 1 will test for (), if not present (most cases)
# we will run down the ELSE below.
# DISPATCH 1 check for both parentheses
if(grepl('\\(.*\\)', x$Fide)){
fide_base <- paste0( # write everything up to the parenthesis
paste0('Fide: *', gsub('\\(.*$', '', x$Fide), '*'),
paste0('(', gsub('.*\\(|\\).*', '', x$Fide), ')')
)
# now test for words after the last parenthesis
if(nchar(gsub('.*\\)', '', x$Fide))>0){
paste0(fide_base,
paste0('*', gsub('.*\\)', '', x$Fide), '*'),
', det.: ', x$Determined_by, ', ', x$Determined_date_text, '.')
} else { # return the string with parentheses here
paste0(fide_base,
', det.: ', x$Determined_by, ', ', x$Determined_date_text, '.')
}
} else { # IF dispatch 1 finds no '()' return a nice simple string.
# return a nice uncomplicated string without parentheses
paste0('Fide: *',
sub(' Flora ', ' Fl. ', x$Fide),
'*, det.: ', x$Determined_by, ', ', x$Determined_date_text, '.')
}
}
}
text <- data.frame(
Fide = c('Michigan Flora Book (emphatic)',
'Michigan Flora Book (emphatic) verbose',
'Michigan Flora Book'),
Determined_by = rep('Marabeth', 3),
Determined_date_text = rep('a day in time', 3)
) |>
split(f = 1:3)
lapply(text, writer_fide)
